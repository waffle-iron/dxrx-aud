## Customize the test machine
machine:

  # Timezone
  timezone:
    America/Los_Angeles # Set the timezone

  # Add some environment variables
  environment:
    CIRCLE_ENV: test
    CXX: g++-4.8
    DISPLAY: :99.0
    NPM_PREFIX: /home/ubuntu/nvm/v0.10.33
    INITIALIZE: true
    NODE_ENV: circle
    Patients: true
    Practitioners: true
    METEOR_SETTINGS: '{"public": {"title": "DxRx"},"private": {"accessCode": "sobriety"}}'


## Customize checkout
checkout:
 post:
   #- git submodule sync
   #- git submodule update --init --recursive # use submodules

general:
  build_dir: webapp
  artifacts:
    - "./tests/nightwatch/screenshots" # relative to the build directory
    - "./tests/nightwatch/logs" # relative to the build directory

## Customize dependencies
dependencies:
  cache_directories:
    - "~/.meteor" # relative to the user's home directory
    #- ~/nvm/v0.10.33/lib/node_modules/starrynight
    #- ~/nvm/v0.10.33/bin/starrynight

  pre:
    # Install Starrynight unless it is cached
    #- if [ ! -e ~/nvm/v0.10.33/bin/starrynight ]; then npm install -g starrynight; else echo "Starrynight seems to be cached"; fi;

    # Install  Meteor
    - mkdir -p ${HOME}/.meteor

    # If Meteor is already cached, do not need to build it again.
    - if [ ! -e ${HOME}/.meteor/meteor ]; then curl https://install.meteor.com | /bin/sh; else echo "Meteor seems to be cached"; fi;

    # Link the meteor executable into /usr/bin
    - sudo ln -s $HOME/.meteor/meteor /usr/bin/meteor

    # Check if the helloworld directory already exists, if it doesn't, create the helloworld app
    # The following doesn't work, because it should be checking ${HOME}/active-entry/helloworld
    # - if [ ! -e ${HOME}/helloworld ]; then meteor create --release METEOR@1.1.0.3 helloworld; else echo "helloworld app seems to be cached"; fi;

  override:
    #- meteor list

## Customize test commands
test:
  pre:
    #- meteor update --release METEOR@1.3.4.1
    #- sleep 60
    - meteor --version

    # don't know why `meteor npm install` doesn't take care of this
    # but apparently we need to install this manually
    - meteor npm install --save jquery bootstrap react react-dom react-router react-bootstrap react-komposer react-router-bootstrap faker jquery-validation react-addons-css-transition-group react-addons-pure-render-mixin react-toolbox react-mixin faker react-highcharts eslint-plugin-react eslint-plugin-meteor eslint-config-eslint react-scroll-box material-ui normalize.css react-tap-event-plugin immutability-helper classnames eslint sprintf-js

    # install app
    - meteor npm install

    # install the testing infrastructure
    - meteor npm install nightwatch starrynight phantomjs selenium-standalone-jar

    # - meteor remove cordova-plugin-bactrack

    - cat .meteor/nightwatch.json

    # run verification tests first
    - meteor test --once --driver-package dispatch:mocha-phantomjs

    # then set up meteor for validation tests
    - "meteor run":
          background: true
    - sleep 240
  override:
    # then run the validation tests
    - meteor npm run-script nightwatch


## Customize deployment commands
#deployment:
#  production:
#    branch: master
#    commands:
#      - printf "<Meteor username>\n<Meteor password>\n" | meteor deploy circlecivelocity.meteor.com

## Custom notifications
#notify:
  #webhooks:
    # A list of hashes representing hooks. Only the url field is supported.
    #- url: https://someurl.com/hooks/circle
