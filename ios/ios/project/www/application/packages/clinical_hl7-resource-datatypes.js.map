{"version":3,"sources":["meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Address.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Annotation.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Attachment.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Code.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Coding.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/CodableConcept.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/ContactPoint.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Conformance.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Group.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/HumanName.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Identifier.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Period.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Quantity.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Range.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Reference.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Ratio.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/SampledData.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Signature.js","meteor://ðŸ’»app/packages/clinical_hl7-resource-datatypes/lib/Timing.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;AClCA,gH;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kH;;;;;;;;;;;;;;;;;;ACtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gH;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gH;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iH","file":"/packages/clinical_hl7-resource-datatypes.js","sourcesContent":["/**\n * @summary Represents an Address\n * @class Address\n * @param {Object} document An object representing an address, ususally a Mongo document.\n * @example\n\n // Validate an object against the schema\nobj = {address: \"444 Somewhere St.\", zip: \"13456\"};\n\nisValid = AddressSchema.namedContext(\"AddressValidator\").validate(obj);\n// OR\nisValid = AddressSchema.namedContext(\"AddressValidator\").validateOne(obj, \"keyToValidate\");\n// OR\nisValid = Match.test(obj, AddressSchema);\n\n patientAddress = new Address({\n use: \"home\",\n text: \"123 Main Street\",\n city: \"Somewhere\",\n state: \"Indiana\",\n postalCode: \"12345\"\n});\npatientAddress.clean();\npatientAddress.validate();\npatientAddress.save();\n */\n\n\n// //Address = BaseModel.extendAndSetupCollection('HL7.DataTypes.Addresses');\n// Address = BaseModel.extend();\n//\n//\n// //Assign a reference from Meteor.users to User.prototype._collection so BaseModel knows how to access it\n// Address.prototype._collection = HL7.DataTypes.Addresses;\n//\n// // Create a persistent data store for addresses to be stored.\n// HL7.DataTypes.Addresses = new Mongo.Collection('HL7.DataTypes.Addresses');\n//\n// //Add the transform to the collection since Meteor.users is pre-defined by the accounts package\n// HL7.DataTypes.Addresses._transform = function (document) {\n//   return new Address(document);\n// };\n\n\n// Add  the schema for a collection\nAddressSchema = new SimpleSchema({\n  \"resourceType\" : {\n    type: String,\n    defaultValue: \"Address\"\n    },\n  \"use\" : {\n    type: Code\n    },\n  \"type\" : {\n    type: Code\n    },\n  \"text\" : {\n    type: String\n    },\n  \"line\" : {\n    type: [String]\n    },\n  \"city\" : {\n    type: String\n    },\n  \"district\" : {\n    type: String\n    },\n  \"state\" : {\n    type: String\n    },\n  \"postalCode\" : {\n    type: String\n    },\n  \"country\" : {\n    type: String\n    },\n  \"period\" : {\n    type: PeriodSchema\n    }\n});\n// AddressValidator = AddressSchema.namedContext(\"AddressValidator\");\n// HL7.DataTypes.Addresses.attachSchema(AddressSchema);\n","\n\nAnnotationSchema = new SimpleSchema({\n  \"authorReference\" : {\n    type: ReferenceSchema\n    },\n  \"authorString\" : {\n    type: String\n    },\n  \"time\" : {\n    type: Date\n    },\n  \"text\" : {\n    type: String\n    }\n});\n","AttachmentSchema = new SimpleSchema({\n  \"contentType\" : {\n    optional: true,\n    type: Code\n    },\n  \"language\" : {\n    optional: true,\n    type: Code\n    },\n  \"data\" : {\n    optional: true,\n    type: String // Base64Binary\n    },\n  \"url\" : {\n    optional: true,\n    type: String // Uri\n    },\n  \"size\" : {\n    optional: true,\n    type: String // UnsignedInt\n    },\n  \"hash\" : {\n    optional: true,\n    type: String // Base64Binary\n    },\n  \"title\" : {\n    optional: true,\n    type: String\n    },\n  \"creation\" : {\n    optional: true,\n    type: Date\n    }\n});\n","Code = new String();","\n\nCodingSchema = new SimpleSchema({\n  \"system\" : {\n    type: String\n    },\n  \"code\" : {\n    type: String\n    },\n  \"version\" : {\n    optional: true,\n    type: String\n    },\n  \"display\" : {\n    optional: true,\n    type: String\n    },\n  \"userSelected\" : {\n    optional: true,\n    type: Boolean\n    }\n});\n","\n\nCodeableConceptSchema = new SimpleSchema({\n  \"coding\" : {\n    type: [ CodingSchema ]\n  },\n  \"text\" : {\n    type: String\n    }\n});\n","ContactPointSchema = new SimpleSchema({\n  \"resourceType\" : {\n    type: String,\n    defaultValue: \"ContactPoint\",\n    },\n  \"system\" : {\n    optional: true,\n    type: Code\n    },\n  \"value\" : {\n    optional: true,\n    type: String\n    },\n  \"use\" : {\n    optional: true,\n    type: Code\n    },\n  \"rank\" : {\n    optional: true,\n    type: Number // PositiveInt\n    },\n  \"period\" : {\n    optional: true,\n    type: PeriodSchema\n    }\n});\n","ConformanceSchema = new SimpleSchema({\n  \"resourceType\" : {\n    type: \"Conformance\",\n    // from Resource: id, meta, implicitRules, and language\n    // from DomainResource: text, contained, extension, and modifierExtension\n  },\n  \"url\" : {\n    optional: true,\n    type: String  // Logical uri to reference this statement\n  },\n  \"version\" : {\n    optional: true,\n    type: String // Logical id for this version of the statement\n  },\n  \"name\" : {\n    optional: true,\n    type: String // Informal name for this conformance statement\n  },\n  \"status\" : {\n    optional: true,\n    type: Code // draft | active | retired\n  },\n  \"experimental\" : {\n    optional: true,\n    type: Boolean // If for testing purposes, not real usage\n  },\n  \"publisher\" : {\n    optional: true,\n    type: String // Name of the publisher (Organization or individual)\n  },\n  \"contact.$.name\" : {\n    optional: true,\n    type: String // Name of a individual to contact\n  },\n  // \"contact.$.telecom\" : {\n  //   optional: true,\n  //   type: [ ContactPoint ] // Contact details for individual or publisher\n  // },\n  \"date\" : {\n    optional: true,\n    type: Date // R!  Publication Date(/time)\n  },\n  \"description\" : {\n    optional: true,\n    type: String // C? Human description of the conformance statement\n  },\n  \"requirements\" : {\n    optional: true,\n    type: String // Why is this needed?\n  },\n  \"copyright\" : {\n    optional: true,\n    type: String // Use and/or publishing restrictions\n  },\n  \"kind\" : {\n    optional: true,\n    type: Code // R!  instance | capability | requirements\n  },\n  \"software.name\" : {\n    optional: true,\n    type: String // R!  A name the software is known by\n  },\n  \"software.version\" : {\n    optional: true,\n    type: String // Version covered by this statement\n  },\n  \"software.releaseDate\" : {\n    optional: true,\n    type: Date // Date this version released\n  },\n  \"implementation.description\" : {\n    optional: true,\n    type: String // R!  Describes this specific instance\n  },\n  \"implementation.url\" : {\n    optional: true,\n    type: String // Base URL for the installation\n  },\n  \"fhirVersion\" : {\n    optional: true,\n    type: String // R!  FHIR Version the system uses\n  },\n  \"acceptUnknown\" : {\n    optional: true,\n    type: Code // R!  no | extensions | elements | both\n  },\n  \"format\" : {\n    optional: true,\n    type: [Code] // R!  formats supported (xml | json | mime type)\n  },\n  \"profile\" : {\n    optional: true,\n    type: [ ReferenceSchema ] // (StructureDefinition) Profiles for use cases supported\n  },\n  \"rest.$.mode\" : {\n    optional: true,\n    type: Code // R!  client | server\n  },\n  \"rest.$.documentation\" : {\n    optional: true,\n    type: String // General description of implementation\n  },\n  \"rest.$.security.cors\" : {\n    optional: true,\n    type:Boolean // Adds CORS Headers (http://enable-cors.org/)\n  },\n  \"rest.$.security.service\" : {\n    optional: true,\n    type: [ CodeableConceptSchema ] // OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates\n  },\n  \"rest.$.security.description\" : {\n    optional: true,\n    type: String // General description of how security works\n  },\n  \"rest.$.security.certificate.$.type\" : {\n    optional: true,\n    type: Code // Mime type for certificate\n  },\n  //\"rest.$.security.certificate.$.blob\" : \"<base64Binary>\" // Actual certificate\n  \"rest.$.resource.$.type\" : {\n    optional: true,\n    type: Code // R!  A resource type that is supported\n  },\n  \"rest.$.resource.$.profile\" : {\n    optional: true,\n    type:  ReferenceSchema  // (StructureDefinition) Base System profile for all uses of resource\n  },\n  \"rest.$.resource.$.interaction.$.code\" : {\n    optional: true,\n    type: Code // R!  read | vread | update | delete | history-instance | validate | history-type | create | search-type\n  },\n  \"rest.$.resource.$.interaction.$.documentation\" : {\n    optional: true,\n    type: String // Anything special about operation behavior\n  },\n  \"rest.$.resource.$.versioning\" : {\n    optional: true,\n    type: Code // no-version | versioned | versioned-update\n  },\n  \"rest.$.resource.$.readHistory\" : {\n    optional: true,\n    type: Boolean // Whether vRead can return past versions\n  },\n  \"rest.$.resource.$.updateCreate\" : {\n    optional: true,\n    type: Boolean // If update can commit to a new identity\n  },\n  \"rest.$.resource.$.conditionalCreate\" : {\n    optional: true,\n    type: Boolean // If allows/uses conditional create\n  },\n  \"rest.$.resource.$.conditionalUpdate\" : {\n    optional: true,\n    type: Boolean // If allows/uses conditional update\n  },\n  \"rest.$.resource.$.conditionalDelete\" : {\n    optional: true,\n    type: Code // not-supported | single | multiple - how conditional delete is supported\n  },\n  \"rest.$.resource.$.searchInclude\" : {\n    optional: true,\n    type: [String] // _include values supported by the server\n  },\n  \"rest.$.resource.$.searchRevInclude\" : {\n    optional: true,\n    type: [String] // _revinclude values supported by the server\n  },\n  \"rest.$.resource.$.searchParam.$.name\" : {\n    optional: true,\n    type:  String // R!  Name of search parameter\n  },\n  \"rest.$.resource.$.searchParam.$.definition\" : {\n    optional: true,\n    type: String // Source of definition for parameter\n  },\n  \"rest.$.resource.$.searchParam.$.type\" : {\n    optional: true,\n    type: Code // R!  number | date | string | token | reference | composite | quantity | uri\n  },\n  \"rest.$.resource.$.searchParam.$.documentation\" : {\n    optional: true,\n    type: String // Server-specific usage\n  },\n  \"rest.$.resource.$.searchParam.$.target\" : {\n    optional: true,\n    type: [Code] // Types of resource (if a resource reference)\n  },\n  \"rest.$.resource.$.searchParam.$.modifier\" : {\n    optional: true,\n    type: [Code] // missing | exact | contains | not | text | in | not-in | below | above | type\n  },\n  \"rest.$.resource.$.searchParam.$.chain\" : {\n    optional: true,\n    type: [String] // Chained names supported\n  },\n  \"rest.$.code\" : {\n    optional: true,\n    type: Code // R!  transaction | search-system | history-system\n  },\n  \"rest.$.documentation\" : {\n    optional: true,\n    type: String // Anything special about operation behavior\n  },\n  \"rest.transactionMode\" : {\n    optional: true,\n    type: Code // not-supported | batch | transaction | both\n  },\n  \"rest.searchParam\" : {\n    optional: true,\n    blackbox: true,\n    type: [ Object ] // Search params for searching all resources\n  },\n  \"rest.operation.$.name\" : {\n    optional: true,\n    type: String // R!  Name by which the operation/query is invoked\n  },\n  \"rest.operation.$.definition\" : {\n    optional: true,\n    type: ReferenceSchema  // (OperationDefinition) R!  The defined operation/query\n  },\n  \"rest.compartment\" : {\n    optional: true,\n    type: [String] // Compartments served/used by system\n  },\n  \"messaging.$.endpoint.$.protocol\" : {\n    optional: true,\n    type: CodingSchema  // R!  http | ftp | mllp +\n  },\n  \"messaging.$.endpoint.$.address\" : {\n    optional: true,\n    type: String // R!  Address of end-point\n  //\"messaging.$.reliableCache\" : \"<unsignedInt>\" // Reliable Message Cache Length (min)\n  },\n  \"messaging.$.documentation\" : {\n    optional: true,\n    type: String // Messaging interface behavior details\n  },\n  \"messaging.$.event.$.code\" : {\n    optional: true,\n    type: CodingSchema  // R!  Event type\n  },\n  \"messaging.$.event.$.category\" : {\n    optional: true,\n    type: Code // Consequence | Currency | Notification\n  },\n  \"messaging.$.event.$.mode\" : {\n    optional: true,\n    type: Code // R!  sender | receiver\n  },\n  \"messaging.$.event.$.focus\" : {\n    optional: true,\n    type: Code // R!  Resource that's focus of message\n  },\n  \"messaging.$.event.$.request\" : {\n    optional: true,\n    type: ReferenceSchema  // (StructureDefinition) R!  Profile that describes the request\n  },\n  \"messaging.$.event.$.response\" : {\n    optional: true,\n    type: ReferenceSchema  // (StructureDefinition) R!  Profile that describes the response\n  },\n  \"messaging.$.event.$.documentation\" : {\n    optional: true,\n    type:  String // Endpoint-specific event documentation\n  },\n  \"document.$.mode\" : {\n    optional: true,\n    type: Code // R!  producer | consumer\n  },\n  \"document.$.documentation\" : {\n    optional: true,\n    type: String // Description of document support\n  },\n  \"document.$.profile\" : {\n    optional: true,\n    type: ReferenceSchema  // (StructureDefinition) R!  Constraint on a resource used in the document\n  }\n});\n","GroupSchema = new SimpleSchema({\n  \"linkId\" : {\n    optional: true,\n    type: String\n    },\n  \"title\" : {\n    optional: true,\n    type: String\n    },\n  \"concept\" : {\n    optional: true,\n    type: [ CodingSchema ]\n    },\n  \"text\" : {\n    optional: true,\n    type: String\n    },\n  \"required\" : {\n    optional: true,\n    type: Boolean\n    },\n  \"repeats\" : {\n    optional: true,\n    type: Boolean\n    },\n  \"group\" : {\n    optional: true,\n    blackbox: true,\n    type: GroupSchema\n    },\n  \"question.$.linkId\" : {\n    optional: true,\n    type: String\n    },\n  \"question.$.concept\" : {\n    optional: true,\n    type: [ CodingSchema ]\n    },\n  \"question.$.text\" : {\n    optional: true,\n    type: String\n    },\n  \"question.$.type\" : {\n    optional: true,\n    type: String\n    },\n  \"question.$.required\" : {\n    optional: true,\n    type: Boolean\n    },\n  \"question.$.repeats\" : {\n    optional: true,\n    type: Boolean\n    },\n  \"question.$.options\" : {\n    optional: true,\n    type: ReferenceSchema //(ValueSet)\n    },\n  \"question.$.option\" : {\n    optional: true,\n    type: [ CodingSchema ]\n    },\n  \"question.$.group\" : {\n    optional: true,\n    blackbox: true,\n    type: GroupSchema\n    },\n});\n","HumanNameSchema = new SimpleSchema({\n  \"resourceType\" : {\n    type: String,\n    defaultValue: \"HumanName\"\n    },\n  \"use\" : {\n    optional: true,\n    type: Code\n    },\n  \"text\" : {\n    optional: true,\n    type: String\n    },\n  \"family\" : {\n    optional: true,\n    type: [String]\n    },\n  \"given\" : {\n    optional: true,\n    type: [String]\n    },\n  \"prefix\" : {\n    optional: true,\n    type: [String]\n    },\n  \"suffix\" : {\n    optional: true,\n    type: [String]\n    },\n  \"preferred\" : {\n    optional: true,\n    type: [String]\n    },\n  \"period\" : {\n    optional: true,\n    type: PeriodSchema\n    }\n});\n","IdentifierSchema = new SimpleSchema({\n  \"use\" : {\n    optional: true,\n    type: String\n    },\n  \"type\" : {\n    optional: true,\n    type: CodeableConceptSchema\n    },\n  \"system\" : {\n    optional: true,\n    type: String\n    },\n  \"value\" : {\n    optional: true,\n    type: String\n    },\n  \"period\" : {\n    optional: true,\n    type: PeriodSchema\n    },\n  \"assigner\" : {\n    optional: true,\n    type: ReferenceSchema\n    }\n});\n","PeriodSchema = new SimpleSchema({\n  \"start\" : {\n    type : Date\n    },\n  \"end\" : {\n    type : Date\n    }\n});\n","\n\n// EXAMPLE\n// whenRange: {\n//   \"low\": {\n//     \"value\": 40,\n//     \"unit\": \"years\",\n//     \"system\": \"http://unitsofmeasure.org\",\n//     \"code\": \"a\"\n//   },\n//   \"high\": {\n//     \"value\": 90,\n//     \"unit\": \"years\",\n//     \"system\": \"http://unitsofmeasure.org\",\n//     \"code\": \"a\"\n//   }\n// }\n\nQuantitySchema = new SimpleSchema({\n  \"value\" : {\n    type : Number // Decimal\n    },\n  \"comparator\": {\n    optional: true,\n    type: Code\n    },\n  \"unit\" : {\n    type : String\n    },\n  \"system\" : {\n    type : String // Uri\n    },\n  \"code\" : {\n    type : Code\n    }\n});\n","\n\nRangeSchema = new SimpleSchema({\n  \"low\" : {\n    type: QuantitySchema\n    },\n  \"high\" : {\n    type: QuantitySchema\n    }\n});\n","ReferenceSchema = new SimpleSchema({\n  \"reference\" : {\n    optional: true,\n    type: String\n    },\n  \"display\" : {\n    optional: true,\n    type: String\n    }\n});\n","RatioSchema = new SimpleSchema({\n  \"numerator\" : {\n    type: QuantitySchema\n    },\n  \"denominator\" : {\n    type: QuantitySchema\n    }\n});\n","SampledDataSchema = new SimpleSchema({\n  \"origin\" : {\n    type: QuantitySchema\n    },\n  \"period\" : {\n    type: Number\n    },\n  \"factor\" : {\n    type: Number\n    },\n  \"lowerLimit\" : {\n    type: Number\n    },\n  \"upperLimit\" : {\n    type: Number\n    },\n  \"dimensions\" : {\n    type: Number\n    },\n  \"data\" : {\n    type: String\n    }\n});\n","SignatureSchema = new SimpleSchema({\n  \"type\" : {\n    type: [ CodingSchema ]\n    },\n  \"when\" : {\n    type: Date\n    },\n  \"whoUri\" : {\n    type: String\n    },\n  \"whoReference\" : {\n    type: ReferenceSchema\n    },\n  \"contentType\" : {\n    type: String\n    }\n});\n","TimingSchema = new SimpleSchema({\n  \"resourceType\": {\n    type: String,\n    defaultValue: \"Timing\"\n  },\n  \"event\": {\n    optional: true,\n    type: [ Date ]\n  },\n  \"repeat.boundsQuantity\": {\n    optional: true,\n    type: QuantitySchema\n  },\n  \"repeat.boundsRange\": {\n    optional: true,\n    type: RangeSchema\n  },\n  \"repeat.boundsPeriod\": {\n    optional: true,\n    type: PeriodSchema\n  },\n  \"repeat.count\": {\n    optional: true,\n    type: Number\n  },\n  \"repeat.duration\": {\n    optional: true,\n    type: Number\n  },\n  \"repeat.durationMax\": {\n    optional: true,\n    type: Number\n  },\n  \"repeat.durationUnits\": {\n    optional: true,\n    type: Code\n  },\n  \"repeat.frequency\": {\n    optional: true,\n    type: Number\n  },\n  \"repeat.frequencyMax\": {\n    optional: true,\n    type: Number\n  },\n  \"repeat.period\": {\n    optional: true,\n    type: Number\n  },\n  \"repeat.periodMax\": {\n    optional: true,\n    type: Number\n  },\n  \"repeat.periodUnits\": {\n    optional: true,\n    type: Code\n  },\n  \"repeat.when\": {\n    optional: true,\n    type: Code\n  }\n});\n"]}