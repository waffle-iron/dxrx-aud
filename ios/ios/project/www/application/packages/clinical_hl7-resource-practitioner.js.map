{"version":3,"sources":["meteor://ðŸ’»app/packages/clinical_hl7-resource-practitioner/lib/hl7-resource-practitioner.js"],"names":[],"mappingssG","file":"/packages/clinical_hl7-resource-practitioner.js","sourcesContent":["\n// create the object using our BaseModel\nPractitioner = BaseModel.extend();\n\n\n//Assign a collection so the object knows how to perform CRUD operations\nPractitioner.prototype._collection = Practitioners;\n\n// Create a persistent data store for addresses to be stored.\n// HL7.Resources.Patients = new Mongo.Collection('HL7.Resources.Patients');\nPractitioners = new Mongo.Collection('Practitioners');\n\n//Add the transform to the collection since Meteor.users is pre-defined by the accounts package\nPractitioners._transform = function (document) {\n  return new Practitioner(document);\n};\n\n\nif (Meteor.isClient){\n  Meteor.subscribe(\"Practitioners\");\n}\n\nif (Meteor.isServer){\n  Meteor.publish(\"Practitioners\", function (argument){\n    if (this.userId) {\n      return Practitioners.find();\n    } else {\n      return [];\n    }\n  });\n}\n\n\n\nPractitionerSchema = new SimpleSchema({\n  \"resourceType\" : {\n    type: String,\n    defaultValue: \"Practitioner\"\n  },\n  \"identifier\" : {\n    optional: true,\n    type: [ IdentifierSchema ]\n  },\n  \"active\" : {\n    optional: true,\n    type: Boolean\n  },\n  \"name\" : {\n    optional: true,\n    type:  HumanNameSchema\n  },\n  \"telecom\" : {\n    optional: true,\n    type: [ ContactPointSchema ]\n  },\n  \"address\" : {\n    optional: true,\n    type: [ AddressSchema ]\n  },\n  \"gender\" : {\n    optional: true,\n    type: String\n  },\n  \"birthDate\" : {\n    optional: true,\n    type: Date\n  },\n  \"photo\" : {\n    optional: true,\n    type: [ AttachmentSchema ]\n  },\n  \"practitionerRole.$.managingOrganization\" : {\n    optional: true,\n    type: ReferenceSchema //(Organization)\n  },\n  \"practitionerRole.$.role\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"practitionerRole.$.specialty\" : {\n    optional: true,\n    type: [ CodeableConceptSchema ]\n  },\n  \"practitionerRole.$.period\" : {\n    optional: true,\n    type: PeriodSchema\n  },\n  \"practitionerRole.$.location\" : {\n    optional: true,\n    type: [ ReferenceSchema ]\n  }, // (Location) ],\n  \"practitionerRole.$.healthcareService\" : {\n    optional: true,\n    type: [ ReferenceSchema ]\n  }, //(HealthcareService) }]\n  \"qualification.$.identifier\" : {\n    optional: true,\n    type: [ IdentifierSchema ]\n  },\n  \"qualification.$.code\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"qualification.$.period\" : {\n    optional: true,\n    type: PeriodSchema\n  },\n  \"qualification.$.issuer\" : {\n    optional: true,\n    type: ReferenceSchema\n  }, // Organization)\n  \"communication\" : {\n    optional: true,\n    type: [ CodeableConceptSchema ]\n  }\n});\nPractitioners.attachSchema(PractitionerSchema);\n"]}