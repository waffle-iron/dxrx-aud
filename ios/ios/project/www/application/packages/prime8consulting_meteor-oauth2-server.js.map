{"version":3,"sources":["meteor://ðŸ’»app/packages/prime8consulting_meteor-oauth2-server/common.js","meteor://ðŸ’»app/packages/prime8consulting_meteor-oauth2-server/client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sH;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sH","file":"/packages/prime8consulting_meteor-oauth2-server.js","sourcesContent":["refreshTokensCollection = new Meteor.Collection('OAuth2RefreshTokens');\nrefreshTokensCollection.allow({\n    insert: function(userId, doc) {\n        return Meteor.isServer && userId && userId === doc.userId;\n    },\n    update: function(userId, doc, fieldNames, modifier) {\n        return false;\n    },\n    remove: function(userId, doc) {\n        return userId && userId === doc.userId;\n    }\n});\n\nauthCodesCollection = new Meteor.Collection('OAuth2AuthCodes');\nauthCodesCollection.allow({\n    insert: function(userId, doc) {\n        return Meteor.isServer && userId && userId === doc.userId;\n    },\n    update: function(userId, doc, fieldNames, modifier) {\n        return false;\n    },\n    remove: function(userId, doc) {\n        return userId && userId === doc.userId;\n    }\n});\n\noAuth2Server = {\n    pubSubNames: {\n        authCodes: 'oauth2/authCodes',\n        refreshTokens: 'oauth2/refreshTokens'\n    },\n    methodNames: {\n        authCodeGrant: 'oauth2/authCodeGrant'\n    },\n    collections: {\n        refreshToken: refreshTokensCollection,\n        authCode: authCodesCollection\n    }\n};","oAuth2Server.subscribeTo = {\n    authCode: function() {\n        return Meteor.subscribe(oAuth2Server.pubSubNames.authCodes);\n    },\n    refreshTokens: function() {\n        return Meteor.subscribe(oAuth2Server.pubSubNames.refreshTokens);\n    }\n};\n\noAuth2Server.callMethod = {\n    /**\n     *\n     * @param client_id : string - The client id.\n     * @param redirect_uri : string - The Uri to goto after processing.\n     * @param response_type : string - Oauth response type.\n     * @param scope : string[] - An array of scopes.\n     * @param state : string - A state variable provided by the client. It will be added onto the redirectToUri.\n     * @param callback\n     */\n    authCodeGrant: function(client_id, redirect_uri, response_type, scope, state, callback) {\n        Meteor.call(\n            oAuth2Server.methodNames.authCodeGrant,\n            client_id,\n            redirect_uri,\n            response_type,\n            scope,\n            state,\n            callback\n        );\n    }\n};\n\n"]}