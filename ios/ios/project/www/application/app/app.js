var require = meteorInstall({"client":{"template.main.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/template.main.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
                                                                                                                       // 1
Template.body.addContent((function() {                                                                                 // 2
  var view = this;                                                                                                     // 3
  return HTML.Raw('<div id="react-root"></div>');                                                                      // 4
}));                                                                                                                   // 5
Meteor.startup(Template.body.renderToDocument);                                                                        // 6
                                                                                                                       // 7
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"stylesheets":{"application.scss.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/stylesheets/application.scss.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
exports.__esModule = true;                                                                                             // 1
                                                                                                                       // 2
                                                                                                                       // 3
var styles = { "notificationMenu": "_client_stylesheets__application__notificationMenu", "login": "_client_stylesheets__application__login", "error": "_client_stylesheets__application__error", "loading": "_client_stylesheets__application__loading", "rotate": "_client_stylesheets__application__rotate", "signup": "_client_stylesheets__application__signup", "navbar-default": "_client_stylesheets__application__navbar-default", "navbar-nav": "_client_stylesheets__application__navbar-nav", "active": "_client_stylesheets__application__active" };
exports["default"] = styles;                                                                                           // 5
exports.styles = styles;                                                                                               // 6
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"main.js":["/imports/startup/client",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/main.js                                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.import('/imports/startup/client');                                                                              // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"main.scss.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/main.scss.js                                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
exports.__esModule = true;                                                                                             // 1
                                                                                                                       // 2
                                                                                                                       // 3
var styles = { "notificationMenu": "_client__main__notificationMenu" };                                                // 4
exports["default"] = styles;                                                                                           // 5
exports.styles = styles;                                                                                               // 6
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"plugin":{"cordova-plugin-bactrack":{"www":{"bactrack.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/plugin/cordova-plugin-bactrack/www/bactrack.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
bactrackName = "BACTrackPlugin";                                                                                       // 1
bactrack = {                                                                                                           // 2
	initWithDelegate: function initWithDelegate(successCallback, apiKey, timeoutSeconds) {                                // 3
		cordova.exec(successCallback, successCallback, window.bactrackName, "initWithDelegate", [apiKey, timeoutSeconds]);   // 4
	},                                                                                                                    // 5
                                                                                                                       //
	connectToNearestBreathalyzer: function connectToNearestBreathalyzer(successCallback, errorCallback) {                 // 7
		cordova.exec(successCallback, errorCallback, window.bactrackName, "connectToNearestBreathalyzer", []);               // 8
	},                                                                                                                    // 9
                                                                                                                       //
	connectBreathalyzer: function connectBreathalyzer(preferredUuid, timeoutSeconds, successCallback, errorCallback) {    // 11
		cordova.exec(successCallback, errorCallback, window.bactrackName, "connectBreathalyzer", [preferredUuid, timeoutSeconds]);
	},                                                                                                                    // 13
                                                                                                                       //
	connectBreathalyzerAsync: function connectBreathalyzerAsync(preferredUuid, timeoutSeconds, successCallback, errorCallback) {
		cordova.exec(successCallback, errorCallback, window.bactrackName, "connectBreathalyzerAsync", [preferredUuid, timeoutSeconds]);
	},                                                                                                                    // 17
                                                                                                                       //
	startScan: function startScan(successCallback, errorCallback) {                                                       // 19
		cordova.exec(successCallback, errorCallback, window.bactrackName, "startScan", []);                                  // 20
	},                                                                                                                    // 21
                                                                                                                       //
	stopScan: function stopScan(successCallback, errorCallback) {                                                         // 23
		cordova.exec(successCallback, errorCallback, window.bactrackName, "stopScan", []);                                   // 24
	},                                                                                                                    // 25
                                                                                                                       //
	disconnect: function disconnect(successCallback, errorCallback) {                                                     // 27
		cordova.exec(successCallback, errorCallback, window.bactrackName, "disconnect", []);                                 // 28
	},                                                                                                                    // 29
                                                                                                                       //
	startCountdown: function startCountdown(successCallback, errorCallback) {                                             // 31
		cordova.exec(successCallback, errorCallback, window.bactrackName, "startCountdown", []);                             // 32
	},                                                                                                                    // 33
                                                                                                                       //
	getBreathalyzerBatteryLevel: function getBreathalyzerBatteryLevel(successCallback, errorCallback) {                   // 35
		cordova.exec(successCallback, errorCallback, window.bactrackName, "getBreathalyzerBatteryLevel", []);                // 36
	}                                                                                                                     // 37
};                                                                                                                     // 2
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"imports":{"ui":{"workflows":{"breathalyzer":{"BacTrack.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","./BacTrackServerDevice","react-toolbox/lib/date_picker",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/breathalyzer/BacTrack.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Initialize:function(){return Initialize},StartCountdown:function(){return StartCountdown},Connect:function(){return Connect},ScanAndConnect:function(){return ScanAndConnect},Disconnect:function(){return Disconnect},StopScan:function(){return StopScan}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var initWithDelegate,connectToNearestBreathalyzer,connectBreathalyzer,startScan,stopScan,disconnect,startCountdown,getBreathalyzerBatteryLevel;module.import('./BacTrackServerDevice',{"initWithDelegate":function(v){initWithDelegate=v},"connectToNearestBreathalyzer":function(v){connectToNearestBreathalyzer=v},"connectBreathalyzer":function(v){connectBreathalyzer=v},"startScan":function(v){startScan=v},"stopScan":function(v){stopScan=v},"disconnect":function(v){disconnect=v},"startCountdown":function(v){startCountdown=v},"getBreathalyzerBatteryLevel":function(v){getBreathalyzerBatteryLevel=v}});var DatePicker;module.import('react-toolbox/lib/date_picker',{"default":function(v){DatePicker=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       //
Session.setDefault('BacTrackState', {                                                                                  // 8
			lastBacTrackState: 'noBacTrack',                                                                                    // 9
			lastMajorBacTrackState: 'noBacTrack',                                                                               // 10
			initialized: false,                                                                                                 // 11
			errorMessage: undefined,                                                                                            // 12
			bac: undefined,                                                                                                     // 13
			isConnected: false,                                                                                                 // 14
			scanStopped: false,                                                                                                 // 15
			connectionFailed: false,                                                                                            // 16
			countdown: 0,                                                                                                       // 17
			preferreduuid: undefined,                                                                                           // 18
			deviceType: 0,                                                                                                      // 19
			devicesFound: {},                                                                                                   // 20
			serial: undefined,                                                                                                  // 21
			batteryLevel: undefined,                                                                                            // 22
			lastnull: undefined                                                                                                 // 23
});                                                                                                                    // 8
                                                                                                                       //
var BacTrack = function (_React$Component) {                                                                           //
			_inherits(BacTrack, _React$Component);                                                                              //
                                                                                                                       //
			function BacTrack(props) {                                                                                          // 28
						_classCallCheck(this, BacTrack);                                                                                 // 28
                                                                                                                       //
						var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));                                // 28
                                                                                                                       //
						Initialize();                                                                                                    // 30
						return _this;                                                                                                    // 28
			}                                                                                                                   // 31
                                                                                                                       //
			return BacTrack;                                                                                                    //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(BacTrack));                                                                   //
                                                                                                                       //
                                                                                                                       //
function Initialize() {                                                                                                // 34
			console.log("Setting BacTrackState");                                                                               // 35
			Session.set('BacTrackState', {                                                                                      // 36
						lastBacTrackState: 'noBacTrack',                                                                                 // 37
						lastMajorBacTrackState: 'noBacTrack',                                                                            // 38
						errorMessage: undefined,                                                                                         // 39
						initialized: true,                                                                                               // 40
						bac: undefined,                                                                                                  // 41
						isConnected: false,                                                                                              // 42
						scanStopped: false,                                                                                              // 43
						connectionFailed: false,                                                                                         // 44
						countdown: 0,                                                                                                    // 45
						preferreduuid: undefined,                                                                                        // 46
						deviceType: 0,                                                                                                   // 47
						devicesFound: {},                                                                                                // 48
						serial: undefined,                                                                                               // 49
						batteryLevel: undefined,                                                                                         // 50
						lastnull: undefined                                                                                              // 51
			});                                                                                                                 // 36
			console.log("After setting BacTrackState");                                                                         // 53
                                                                                                                       //
			if (Meteor.isCordova) {                                                                                             // 55
						console.log("Initializing for Cordova");                                                                         // 56
						window.bactrack.initWithDelegate(handler, 'fe3e2e6c52e04b2ba7b11cd7385481', 8);;                                 // 57
						console.log("After initializing for Cordova");                                                                   // 58
			} else {                                                                                                            // 59
						console.log("Initializing for Sim");                                                                             // 60
						initWithDelegate(handler, 'fe3e2e6c52e04b2ba7b11cd7385481', 8);;                                                 // 61
						console.log("After initializing for Sim");                                                                       // 62
			}                                                                                                                   // 63
}                                                                                                                      // 64
                                                                                                                       //
function handler(results) {                                                                                            // 66
			var BacTrackState = Session.get('BacTrackState');                                                                   // 67
			if (!results) {                                                                                                     // 68
						BacTrackState.lastnull = true;                                                                                   // 69
			} else {                                                                                                            // 70
						var call = results.call;                                                                                         // 71
						var arg1 = results.arg1;                                                                                         // 72
						var arg2 = results.arg2;                                                                                         // 73
						var arg3 = results.arg3;                                                                                         // 74
						BacTrackState.lastnull = false;                                                                                  // 75
						BacTrackState.lastBacTrackState = call;                                                                          // 76
						switch (call) {                                                                                                  // 77
									case 'BacTrackAPIKeyDeclined':                                                                                // 78
												BacTrackState.isConnected = false;                                                                         // 79
												BacTrackState.lastMajorBacTrackState = call;                                                               // 80
												break;                                                                                                     // 81
									case 'BacTrackAPIKeyAuthorized':                                                                              // 82
												BacTrackState.lastMajorBacTrackState = call;                                                               // 83
												break;                                                                                                     // 84
									case 'BacTrackConnectedOld':                                                                                  // 85
												// Deprecated, should not be called (but it is!)                                                           //
												BacTrackState.isConnected = true;                                                                          // 87
												BacTrackState.lastMajorBacTrackState = 'BacTrackConnected';                                                // 88
												if (Meteor.isCordova) {                                                                                    // 89
															window.bactrack.startCountdown(handler, errHandler);                                                    // 90
												} else {                                                                                                   // 91
															startCountdown(handler, errHandler);                                                                    // 92
												}                                                                                                          // 93
												break;                                                                                                     // 94
									case 'BacTrackConnected':                                                                                     // 95
												BacTrackState.isConnected = true;                                                                          // 96
												BacTrackState.deviceType = arg1;                                                                           // 97
												BacTrackState.lastMajorBacTrackState = call;                                                               // 98
												if (Meteor.isCordova) {                                                                                    // 99
															window.bactrack.startCountdown(handler, errHandler);                                                    // 100
												} else {                                                                                                   // 101
															startCountdown(handler, errHandler);                                                                    // 102
												}                                                                                                          // 103
												break;                                                                                                     // 104
									case 'BacTrackDisconnected':                                                                                  // 105
												BacTrackState.isConnected = false;                                                                         // 106
												BacTrackState.lastMajorBacTrackState = call;                                                               // 107
												break;                                                                                                     // 108
									case 'BacTrackCountdown':                                                                                     // 109
												BacTrackState.isConnected = true;                                                                          // 110
												BacTrackState.lastMajorBacTrackState = 'BacTrackCountdown';                                                // 111
												BacTrackState.countdown = arg1;                                                                            // 112
												BacTrackState.errorMessage = arg2;                                                                         // 113
												break;                                                                                                     // 114
									case 'BacTrackStart':                                                                                         // 115
												BacTrackState.isConnected = true;                                                                          // 116
												BacTrackState.lastMajorBacTrackState = call;                                                               // 117
												break;                                                                                                     // 118
									case 'BacTrackBlow':                                                                                          // 119
												BacTrackState.isConnected = true;                                                                          // 120
												BacTrackState.lastMajorBacTrackState = call;                                                               // 121
												break;                                                                                                     // 122
									case 'BacTrackAnalyzing':                                                                                     // 123
												BacTrackState.isConnected = true;                                                                          // 124
												BacTrackState.lastMajorBacTrackState = call;                                                               // 125
												break;                                                                                                     // 126
									case 'BacTrackResults':                                                                                       // 127
												BacTrackState.isConnected = true;                                                                          // 128
												BacTrackState.lastMajorBacTrackState = call;                                                               // 129
												BacTrackState.bac = arg1;                                                                                  // 130
												break;                                                                                                     // 131
									case 'BacTrackError':                                                                                         // 132
												BacTrackState.isConnected = false;                                                                         // 133
												BacTrackState.lastMajorBacTrackState = call;                                                               // 134
												BacTrackState.errorMessage = arg1;                                                                         // 135
												break;                                                                                                     // 136
									case 'BacTrackConnectTimeout':                                                                                // 137
												BacTrackState.isConnected = false;                                                                         // 138
												BacTrackState.connectionFailed = true;                                                                     // 139
												BacTrackState.lastMajorBacTrackState = call;                                                               // 140
												break;                                                                                                     // 141
									case 'BacTrackGetTimeout':                                                                                    // 142
												// No args, right now timeout is set at startup in the client                                              //
												break;                                                                                                     // 144
									case 'BacTrackFoundBreathalyzer':                                                                             // 145
												console.log("In foundbreathalyzer with " + arg1 + ", " + arg2);                                            // 146
												BacTrackState.isConnected = false;                                                                         // 147
												BacTrackState.devicesFound[arg1] = arg2;                                                                   // 148
												console.log("Found device " + arg1 + ", " + arg2 + "; " + Object.keys(BacTrackState.devicesFound).length);
												if (arg1 == BacTrackState.preferreduuid) {                                                                 // 150
															if (Meteor.isCordova) {                                                                                 // 151
																		window.bactrack.stopScan(handler, errHandler);                                                       // 152
																		window.bactrack.connectBreathalyzer(arg1, 10, handler, errHandler);                                  // 153
																		window.bactrack.startCountdown(handler, errHandler);                                                 // 154
															} else {                                                                                                // 155
																		stopScan(handler, errHandler);                                                                       // 156
																		connectBreathalyzer(arg1, 10, handler, errHandler);                                                  // 157
																		startCountdown(handler, errHandler);                                                                 // 158
															}                                                                                                       // 159
												}                                                                                                          // 160
												break;                                                                                                     // 161
									case 'BacTrackSerial':                                                                                        // 162
												// Arg1 = serial number.                                                                                   //
												BacTrackState.isConnected = true;                                                                          // 164
												BacTrackState.uuid = arg1;                                                                                 // 165
												break;                                                                                                     // 166
									case 'BacTrackBatteryLevel':                                                                                  // 167
												// Arg1 = battery level.                                                                                   //
												BacTrackState.isConnected = true;                                                                          // 169
												BacTrackState.batteryLevel = arg1;                                                                         // 170
												break;                                                                                                     // 171
									default:                                                                                                      // 172
												break;                                                                                                     // 173
						}                                                                                                                // 77
			}                                                                                                                   // 175
			Session.set('BacTrackState', shallowCopy(BacTrackState));                                                           // 176
}                                                                                                                      // 177
                                                                                                                       //
function errHandler(results) {                                                                                         // 179
			var BacTrackState = Session.get('BacTrackState');                                                                   // 180
			if (!results) {                                                                                                     // 181
						BacTrackState.errorMessage = "";                                                                                 // 182
			} else {                                                                                                            // 183
						BacTrackState.errorMessage = results;                                                                            // 184
			}                                                                                                                   // 185
			Session.set('BacTrackState', shallowCopy(BacTrackState));                                                           // 186
}                                                                                                                      // 187
                                                                                                                       //
function StartCountdown() {                                                                                            // 189
			var BacTrackState = Session.get('BacTrackState');                                                                   // 190
			if (Meteor.isCordova) {                                                                                             // 191
						window.bactrack.startCountdown(handler, errHandler);                                                             // 192
			} else {                                                                                                            // 193
						startCountdown(handler, errHandler);                                                                             // 194
			}                                                                                                                   // 195
			Session.set('BacTrackState', shallowCopy(BacTrackState));                                                           // 196
}                                                                                                                      // 197
                                                                                                                       //
function Connect(preferredUuid) {                                                                                      // 199
			var BacTrackState = Session.get('BacTrackState');                                                                   // 200
			BacTrackState.preferredUuid = preferredUuid;                                                                        // 201
			console.log("Connecting to " + preferredUuid);                                                                      // 202
			BacTrackState.lastMajorBacTrackState = "BacTrackConnecting";                                                        // 203
			Session.set('BacTrackState', shallowCopy(BacTrackState));                                                           // 204
			if (Meteor.isCordova) {                                                                                             // 205
						console.log("Cordova connection " + preferredUuid);                                                              // 206
						window.bactrack.connectBreathalyzer(BacTrackState.preferredUuid, 10, handler, errHandler);                       // 207
			} else {                                                                                                            // 208
						console.log("Simulated connection " + preferredUuid);                                                            // 209
						connectBreathalyzer(BacTrackState.preferredUuid, 10, handler, errHandler);                                       // 210
			}                                                                                                                   // 211
			console.log("Initiated connection process " + preferredUuid);                                                       // 212
}                                                                                                                      // 213
                                                                                                                       //
function ScanAndConnect(preferredUuid) {                                                                               // 215
			var BacTrackState = Session.get('BacTrackState');                                                                   // 216
			BacTrackState.preferredUuid = preferredUuid;                                                                        // 217
			BacTrackState.scanStopped = false;                                                                                  // 218
			if (Meteor.isCordova) {                                                                                             // 219
						window.bactrack.startScan(handler, errHandler);                                                                  // 220
			} else {                                                                                                            // 221
						startScan(handler, errHandler);                                                                                  // 222
			}                                                                                                                   // 223
			Session.set('BacTrackState', shallowCopy(BacTrackState));                                                           // 224
}                                                                                                                      // 225
                                                                                                                       //
function Disconnect() {                                                                                                // 227
			var BacTrackState = Session.get('BacTrackState');                                                                   // 228
			BacTrackState.isConnected = false;                                                                                  // 229
			if (Meteor.isCordova) {                                                                                             // 230
						window.bactrack.disconnect();                                                                                    // 231
			} else {                                                                                                            // 232
						disconnect();                                                                                                    // 233
			}                                                                                                                   // 234
			Session.set('BacTrackState', shallowCopy(BacTrackState));                                                           // 235
}                                                                                                                      // 236
                                                                                                                       //
function StopScan() {                                                                                                  // 238
			var BacTrackState = Session.get('BacTrackState');                                                                   // 239
			BacTrackState.scanStopped = true;                                                                                   // 240
			if (Meteor.isCordova) {                                                                                             // 241
						window.bactrack.stopScan();                                                                                      // 242
			} else {                                                                                                            // 243
						stopScan();                                                                                                      // 244
			}                                                                                                                   // 245
			Session.set('BacTrackState', shallowCopy(BacTrackState));                                                           // 246
}                                                                                                                      // 247
                                                                                                                       //
function shallowCopy(original) {                                                                                       // 249
			var clone = {};                                                                                                     // 250
			var key;                                                                                                            // 251
			for (key in original) {                                                                                             // 252
						clone[key] = original[key];                                                                                      // 253
			}                                                                                                                   // 254
			if (clone.devicesFound.length > 0) clone.devicesFound = shallowCopy(clone.devicesFound);                            // 255
			return clone;                                                                                                       // 256
}                                                                                                                      // 257
BacTrack.propTypes = {                                                                                                 // 258
			hasUser: React.PropTypes.object                                                                                     // 259
};                                                                                                                     // 258
ReactMixin(BacTrack.prototype, ReactMeteorData);                                                                       // 261
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"BacTrackServerDevice.js":["react","react-mixin","meteor/react-meteor-data",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/breathalyzer/BacTrackServerDevice.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({initWithDelegate:function(){return initWithDelegate},connectToNearestBreathalyzer:function(){return connectToNearestBreathalyzer},connectBreathalyzer:function(){return connectBreathalyzer},startScan:function(){return startScan},stopScan:function(){return stopScan},disconnect:function(){return disconnect},startCountdown:function(){return startCountdown},getBreathalyzerBatteryLevel:function(){return getBreathalyzerBatteryLevel}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var _BacTrackServerState = {                                                                                           // 5
    behaviorCursor: 0,                                                                                                 // 6
    successCallbacks: [],                                                                                              // 7
    errorCallbacks: [],                                                                                                // 8
    plannedBehaviors: []                                                                                               // 9
};                                                                                                                     // 5
var _BacTrackServerStateDispatch = {                                                                                   // 11
    sleep: function sleep(index, step, args) {                                                                         // 12
        sim_sleep(index, step, args);                                                                                  // 12
    },                                                                                                                 // 12
    initWithDelegate: function initWithDelegate(index, step, args) {                                                   // 13
        sim_initWithDelegate(index, step, args);                                                                       // 13
    },                                                                                                                 // 13
    connectToNearestBreathalyzer: function connectToNearestBreathalyzer(index, step, args) {                           // 14
        sim_connectToNearestBreathalyzer(index, step, args);                                                           // 14
    },                                                                                                                 // 14
    connectBreathalyzer: function connectBreathalyzer(index, step, args) {                                             // 15
        sim_connectBreathalyzer(index, step, args);                                                                    // 15
    },                                                                                                                 // 15
    startScan: function startScan(index, step, args) {                                                                 // 16
        sim_startScan(index, step, args);                                                                              // 16
    },                                                                                                                 // 16
    stopScan: function stopScan(index, step, args) {                                                                   // 17
        sim_stopScan(index, step, args);                                                                               // 17
    },                                                                                                                 // 17
    disconnect: function disconnect(index, step, args) {                                                               // 18
        sim_disconnect(index, step, args);                                                                             // 18
    },                                                                                                                 // 18
    startCountdown: function startCountdown(index, step, args) {                                                       // 19
        sim_startCountdown(index, step, args);                                                                         // 19
    },                                                                                                                 // 19
    getBreathalyzerBatteryLevel: function getBreathalyzerBatteryLevel(index, step, args) {                             // 20
        sim_etBreathalyzerBatteryLevel(index, step, args);                                                             // 20
    },                                                                                                                 // 20
    BacTrackAPIKeyDeclined: function BacTrackAPIKeyDeclined(index, step, args) {                                       // 21
        sim_BacTrackAPIKeyDeclined(index, step, args);                                                                 // 21
    },                                                                                                                 // 21
    BacTrackAPIKeyAuthorized: function BacTrackAPIKeyAuthorized(index, step, args) {                                   // 22
        sim_BacTrackAPIKeyAuthorized(index, step, args);                                                               // 22
    },                                                                                                                 // 22
    BacTrackConnectedOld: function BacTrackConnectedOld(index, step, args) {                                           // 23
        sim_BacTrackConnectedOld(index, step, args);                                                                   // 23
    },                                                                                                                 // 23
    BacTrackConnected: function BacTrackConnected(index, step, args) {                                                 // 24
        sim_BacTrackConnected(index, step, args);                                                                      // 24
    },                                                                                                                 // 24
    BacTrackDisconnected: function BacTrackDisconnected(index, step, args) {                                           // 25
        sim_BacTrackDisconnected(index, step, args);                                                                   // 25
    },                                                                                                                 // 25
    BacTrackCountdown: function BacTrackCountdown(index, step, args) {                                                 // 26
        sim_BacTrackCountdown(index, step, args);                                                                      // 26
    },                                                                                                                 // 26
    BacTrackStart: function BacTrackStart(index, step, args) {                                                         // 27
        sim_BacTrackStart(index, step, args);                                                                          // 27
    },                                                                                                                 // 27
    BacTrackBlow: function BacTrackBlow(index, step, args) {                                                           // 28
        sim_BacTrackBlow(index, step, args);                                                                           // 28
    },                                                                                                                 // 28
    BacTrackAnalyzing: function BacTrackAnalyzing(index, step, args) {                                                 // 29
        sim_BacTrackAnalyzing(index, step, args);                                                                      // 29
    },                                                                                                                 // 29
    BacTrackResults: function BacTrackResults(index, step, args) {                                                     // 30
        sim_BacTrackResults(index, step, args);                                                                        // 30
    },                                                                                                                 // 30
    BacTrackError: function BacTrackError(index, step, args) {                                                         // 31
        sim_BacTrackError(index, step, args);                                                                          // 31
    },                                                                                                                 // 31
    BacTrackConnectTimeout: function BacTrackConnectTimeout(index, step, args) {                                       // 32
        sim_BacTrackConnectTimeout(index, step, args);                                                                 // 32
    },                                                                                                                 // 32
    BacTrackGetTimeout: function BacTrackGetTimeout(index, step, args) {                                               // 33
        sim_BacTrackGetTimeout(index, step, args);                                                                     // 33
    },                                                                                                                 // 33
    BacTrackFoundBreathalyzer: function BacTrackFoundBreathalyzer(index, step, args) {                                 // 34
        sim_BacTrackFoundBreathalyzer(index, step, args);                                                              // 34
    },                                                                                                                 // 34
    BacTrackSerial: function BacTrackSerial(index, step, args) {                                                       // 35
        sim_BacTrackSerial(index, step, args);                                                                         // 35
    },                                                                                                                 // 35
    BacTrackBatteryLevel: function BacTrackBatteryLevel(index, step, args) {                                           // 36
        sim_BacTrackBatteryLevel(index, step, args);                                                                   // 36
    }                                                                                                                  // 36
};                                                                                                                     // 11
                                                                                                                       //
function planBehaviors(behaviors) {                                                                                    // 39
    _BacTrackServerState.plannedBehaviors = behaviors;                                                                 // 40
    behaviorCursor = 0;                                                                                                // 41
}                                                                                                                      // 42
                                                                                                                       //
function nextBehavior(functionName, successCallback, errorCallback, args) {                                            // 44
    for (var i = _BacTrackServerState.behaviorCursor; i < _BacTrackServerState.plannedBehaviors.length; ++i) {         // 45
        if (_BacTrackServerState.plannedBehaviors[i].call.equals(functionName)) {                                      // 46
            _BacTrackServerState.behaviorCursor = i + 1;                                                               // 47
            executeBehavior(i, _BacTrackServerState.plannedBehaviors[i], successCallback, errorCallback, args);        // 48
        }                                                                                                              // 49
    }                                                                                                                  // 50
}                                                                                                                      // 51
function executeBehavior(index, plan, successCallback, errorCallback, args) {                                          // 52
    _successCallback[index] = successCallback;                                                                         // 53
    _errorCallback[index] = errorCallback;                                                                             // 54
    Meteor.call('bactrackloopback.executeBehaviorAsync', index, plan, args, function (error, result) {                 // 55
        if (error) {                                                                                                   // 56
            console.log("Async call produced error: " + error);                                                        // 57
        }                                                                                                              // 58
        // Ignore results -- there aren't any interesting synchronous results with the bactrack,                       //
        // All of the interesting results are passed in callbacks.                                                     //
    });                                                                                                                // 61
}                                                                                                                      // 62
function executeBehaviorAsync(index, plan, args) {                                                                     // 63
    var steps = plan.steps;                                                                                            // 64
    for (var i = 0; i < steps.length; ++i) {                                                                           // 65
        if (_BacTrackServerStateDispatch[steps[i][0]]) {                                                               // 66
            _BacTrackServerStateDispatch[steps[i][0]](index, steps[i], args);                                          // 67
        } else {                                                                                                       // 68
            console.log("Bad test: " + steps[i][0]);                                                                   // 69
        }                                                                                                              // 70
    }                                                                                                                  // 71
}                                                                                                                      // 72
function sim_sleep(index, step, args) {                                                                                // 73
    Meteor._sleepForMs(step[1]);                                                                                       // 74
}                                                                                                                      // 75
function sim_initWithDelegate(index, step, args) {                                                                     // 76
    if (step[1].equals("fail")) {                                                                                      // 77
        _BacTrackServerState.errorCallbacks[index]("BacTrackAPIKeyDeclined", []);                                      // 78
    } else {                                                                                                           // 79
        _BacTrackServerState.successCallbacks[index]("BacTrackAPIKeyAuthorized", []);                                  // 80
    }                                                                                                                  // 81
}                                                                                                                      // 82
function sim_connectToNearestBreathalyzer(index, step, args) {                                                         // 83
    // Do Nothing, test plan should include separate BacTrackConnected                                                 //
}                                                                                                                      // 85
function sim_connectBreathalyzer(index, step, args) {                                                                  // 86
    // Do Nothing, test plan should include separate BacTrackConnected                                                 //
}                                                                                                                      // 88
function sim_startScan(index, step, args) {                                                                            // 89
    // Do Nothing, test plan should include separate BacTrackFoundBreathalyzer                                         //
}                                                                                                                      // 91
function sim_stopScan(index, step, args) {                                                                             // 92
    // Do Nothing, test plan should include separate BacTrackFoundBreathalyzer                                         //
}                                                                                                                      // 94
function sim_disconnect(index, step, args) {                                                                           // 95
    // Do Nothing, test plan should include separate BacTrackFoundBreathalyzer                                         //
}                                                                                                                      // 97
function sim_startCountdown(index, step, args) {                                                                       // 98
    // Do Nothing, test plan should include separate countdown steps.                                                  //
}                                                                                                                      // 100
function sim_getBreathalyzerBatteryLevel(index, step, args) {                                                          // 101
    // Do Nothing, test plan should include separate batter level                                                      //
}                                                                                                                      // 103
function sim_BacTrackAPIKeyDeclined(index, step, args) {                                                               // 104
    _BacTrackServerState.errorCallbacks[index]("BacTrackAPIKeyDeclined", []);                                          // 105
}                                                                                                                      // 106
                                                                                                                       //
function BacTrackAPIKeyAuthorized(index, step, args) {                                                                 // 108
    _BacTrackServerState.successCallbacks[index]("BacTrackAPIKeyAuthorized", step.slice(1));                           // 109
}                                                                                                                      // 110
function sim_BacTrackConnectedOld(index, step, args) {                                                                 // 111
    _BacTrackServerState.successCallbacks[index]("BacTrackConnectedOld", step.slice(1));                               // 112
}                                                                                                                      // 113
function sim_BacTrackConnected(index, step, args) {                                                                    // 114
    _BacTrackServerState.successCallbacks[index]("BacTrackConnected", step.slice(1));                                  // 115
}                                                                                                                      // 116
function sim_BacTrackDisconnected(index, step, args) {                                                                 // 117
    _BacTrackServerState.successCallbacks[index]("BacTrackDisconnected", step.slice(1));                               // 118
}                                                                                                                      // 119
function sim_BacTrackCountdown(index, step, args) {                                                                    // 120
    _BacTrackServerState.successCallbacks[index]("BacTrackCountdown", step.slice(1));                                  // 121
}                                                                                                                      // 122
function sim_BacTrackStart(index, step, args) {                                                                        // 123
    _BacTrackServerState.successCallbacks[index]("BacTrackStart", step.slice(1));                                      // 124
}                                                                                                                      // 125
function sim_BacTrackBlow(index, step, args) {                                                                         // 126
    _BacTrackServerState.successCallbacks[index]("BacTrackBlow", step.slice(1));                                       // 127
}                                                                                                                      // 128
function sim_BacTrackAnalyzing(index, step, args) {                                                                    // 129
    _BacTrackServerState.successCallbacks[index]("BacTrackAnalyzing", step.slice(1));                                  // 130
}                                                                                                                      // 131
function sim_BacTrackResults(index, step, args) {                                                                      // 132
    _BacTrackServerState.successCallbacks[index]("BacTrackResults", step.slice(1));                                    // 133
}                                                                                                                      // 134
function sim_BacTrackError(index, step, args) {                                                                        // 135
    _errorCCallbacks[index]("BacTrackError", step.slice(1));                                                           // 136
}                                                                                                                      // 137
function sim_BacTrackConnectTimeout(index, step, args) {                                                               // 138
    _BacTrackServerState.successCallbacks[index]("BacTrackConnectTimeout", step.slice(1));                             // 139
}                                                                                                                      // 140
function sim_BacTrackGetTimeout(index, step, args) {                                                                   // 141
    _BacTrackServerState.successCallbacks[index]("BacTrackGetTimeout", step.slice(1));                                 // 142
}                                                                                                                      // 143
function sim_BacTrackFoundBreathalyzer(index, step, args) {                                                            // 144
    _BacTrackServerState.successCallbacks[index]("BacTrackFoundBreathalyzer", step.slice(1));                          // 145
}                                                                                                                      // 146
function sim_BacTrackSerial(index, step, args) {                                                                       // 147
    _BacTrackServerState.successCallbacks[index]("BacTrackSerial", step.slice(1));                                     // 148
}                                                                                                                      // 149
function sim_BacTrackBatteryLevel(index, step, args) {                                                                 // 150
    _BacTrackServerState.successCallbacks[index]("BacTrackBatteryLevel", step.slice(1));                               // 151
}                                                                                                                      // 152
function initWithDelegate(successCallback, apiKey, timeoutSeconds) {                                                   // 153
    console.log("In bactrackloopback initwithdelegate");                                                               // 154
    nextBehavior("initWithDelegate", successCallback, successCallback, [apiKey, timeoutSeconds]);                      // 155
}                                                                                                                      // 156
function connectToNearestBreathalyzer(successCallback, errorCallback) {                                                // 157
    nextBehavior("connectToNearestBreathalyzer", successCallback, errorCallback, []);                                  // 158
}                                                                                                                      // 159
function connectBreathalyzer(preferredUuid, timeoutSeconds, successCallback, errorCallback) {                          // 160
    nextBehavior("connectBreathalyzer", successCallback, errorCallback, [preferredUuid, timeoutSeconds]);              // 161
}                                                                                                                      // 162
function startScan(successCallback, errorCallback) {                                                                   // 163
    nextBehavior("startScan", successCallback, errorCallback, []);                                                     // 164
}                                                                                                                      // 165
function stopScan(successCallback, errorCallback) {                                                                    // 166
    nextBehavior("stopScan", successCallback, errorCallback, []);                                                      // 167
}                                                                                                                      // 168
function disconnect(successCallback, errorCallback) {                                                                  // 169
    nextBehavior("disconnect", successCallback, errorCallback, []);                                                    // 170
}                                                                                                                      // 171
function startCountdown(successCallback, errorCallback) {                                                              // 172
    nextBehavior("startCountdown", successCallback, errorCallback, []);                                                // 173
}                                                                                                                      // 174
function getBreathalyzerBatteryLevel(successCallback, errorCallback) {                                                 // 175
    nextBehavior("getBreathalyzerBatteryLevel", successCallback, errorCallback, []);                                   // 176
}                                                                                                                      // 177
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"BreathalyzerDetail.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","material-ui/RaisedButton","material-ui/FlatButton","/imports/ui/components/DynamicSpacer","material-ui/Card","./BacTrack",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/breathalyzer/BreathalyzerDetail.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Initialize:function(){return Initialize}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var RaisedButton;module.import('material-ui/RaisedButton',{"default":function(v){RaisedButton=v}});var FlatButton;module.import('material-ui/FlatButton',{"default":function(v){FlatButton=v}});var DynamicSpacer;module.import('/imports/ui/components/DynamicSpacer',{"DynamicSpacer":function(v){DynamicSpacer=v}});var Card,CardHeader,CardText,CardActions;module.import('material-ui/Card',{"Card":function(v){Card=v},"CardHeader":function(v){CardHeader=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var BACInitialize,ScanAndConnect,Connect,StartCountdown,Disconnect,StopScan;module.import('./BacTrack',{"Initialize":function(v){BACInitialize=v},"ScanAndConnect":function(v){ScanAndConnect=v},"Connect":function(v){Connect=v},"StartCountdown":function(v){StartCountdown=v},"Disconnect":function(v){Disconnect=v},"StopScan":function(v){StopScan=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
Session.setDefault('preferredBreathalyzerUuid', false);                                                                // 10
Session.setDefault('BreathalyzerDetailState', {                                                                        // 11
	firstDrinkTimeSlider: undefined,                                                                                      // 12
	lastDrinkTimeSlider: undefined,                                                                                       // 13
	lastDrinkNumberSlider: undefined,                                                                                     // 14
	estimatedBACSlider: undefined,                                                                                        // 15
	stepIndex: 0,                                                                                                         // 16
	finished: false                                                                                                       // 17
});                                                                                                                    // 11
                                                                                                                       //
var BreathalyzerDetail = function (_React$Component) {                                                                 //
	_inherits(BreathalyzerDetail, _React$Component);                                                                      //
                                                                                                                       //
	function BreathalyzerDetail() {                                                                                       //
		_classCallCheck(this, BreathalyzerDetail);                                                                           //
                                                                                                                       //
		return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                    //
	}                                                                                                                     //
                                                                                                                       //
	BreathalyzerDetail.prototype.getMeteorData = function getMeteorData() {                                               //
		var data = Session.get('BacTrackState');                                                                             // 21
		if (typeof data === 'undefined' || typeof data.initialized === 'undefined' || !data.initialized) {                   // 22
			Initialize();                                                                                                       // 23
			data = Session.get('BacTrackState');                                                                                // 24
		}                                                                                                                    // 25
		if (typeof data === 'undefined') return {};                                                                          // 26
		return data;                                                                                                         // 27
	};                                                                                                                    // 28
                                                                                                                       //
	BreathalyzerDetail.prototype.render = function render() {                                                             //
		console.log("In breathalyzerdetail render");                                                                         // 30
		var haveState = true;                                                                                                // 31
		var b = Session.get('BacTrackState');                                                                                // 32
		if (typeof b === 'undefined') {                                                                                      // 33
			haveState = false;                                                                                                  // 34
		}                                                                                                                    // 35
		if (haveState && !(typeof b.bac === 'undefined')) {                                                                  // 36
			return React.createElement(                                                                                         // 37
				Card,                                                                                                              // 38
				null,                                                                                                              // 38
				React.createElement(CardHeader, { title: 'Blood Alcohol Level' }),                                                 // 39
				React.createElement(                                                                                               // 40
					CardText,                                                                                                         // 40
					null,                                                                                                             // 40
					React.createElement(                                                                                              // 41
						'div',                                                                                                           // 41
						{ style: {                                                                                                       // 41
								width: '250px',                                                                                                // 42
								marginRight: '40px',                                                                                           // 43
								display: 'inline-block'                                                                                        // 44
							} },                                                                                                            // 41
						React.createElement(                                                                                             // 46
							'h2',                                                                                                           // 46
							{ style: { marginLeft: '10px' } },                                                                              // 46
							b.bac                                                                                                           // 47
						),                                                                                                               // 46
						React.createElement(                                                                                             // 49
							'h4',                                                                                                           // 49
							{ style: { marginLeft: '10px', color: 'gray' } },                                                               // 49
							'Blood Alcohol Level'                                                                                           // 49
						)                                                                                                                // 49
					)                                                                                                                 // 41
				),                                                                                                                 // 40
				React.createElement(                                                                                               // 52
					CardActions,                                                                                                      // 52
					null,                                                                                                             // 52
					React.createElement(FlatButton, {                                                                                 // 53
						label: 'Cancel',                                                                                                 // 54
						disableTouchRipple: true,                                                                                        // 55
						disableFocusRipple: true,                                                                                        // 56
						onClick: this.handleCancelButton.bind(this)                                                                      // 57
					}),                                                                                                               // 53
					React.createElement(RaisedButton, {                                                                               // 59
						disableTouchRipple: true,                                                                                        // 60
						disableFocusRipple: true,                                                                                        // 61
						primary: true,                                                                                                   // 62
						style: { marginRight: 12 },                                                                                      // 63
						label: 'Progress',                                                                                               // 64
						onClick: this.handleDoneButton.bind(this)                                                                        // 65
					})                                                                                                                // 59
				)                                                                                                                  // 52
			);                                                                                                                  // 38
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == 'BacTrackStart') {                              // 72
			return React.createElement(                                                                                         // 73
				Card,                                                                                                              // 74
				null,                                                                                                              // 74
				React.createElement(CardHeader, { title: 'Start Blowing' }),                                                       // 75
				React.createElement(                                                                                               // 76
					CardActions,                                                                                                      // 76
					null,                                                                                                             // 76
					React.createElement(FlatButton, {                                                                                 // 77
						label: 'Cancel',                                                                                                 // 78
						disableTouchRipple: true,                                                                                        // 79
						disableFocusRipple: true,                                                                                        // 80
						onClick: this.handleCancelButton.bind(this)                                                                      // 81
					})                                                                                                                // 77
				)                                                                                                                  // 76
			);                                                                                                                  // 74
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == 'BacTrackBlow') {                               // 86
			return React.createElement(                                                                                         // 87
				Card,                                                                                                              // 88
				null,                                                                                                              // 88
				React.createElement(CardHeader, { title: 'Keep Blowing' }),                                                        // 89
				React.createElement(                                                                                               // 90
					CardActions,                                                                                                      // 90
					null,                                                                                                             // 90
					React.createElement(FlatButton, {                                                                                 // 91
						label: 'Cancel',                                                                                                 // 92
						disableTouchRipple: true,                                                                                        // 93
						disableFocusRipple: true,                                                                                        // 94
						onClick: this.handleCancelButton.bind(this)                                                                      // 95
					})                                                                                                                // 91
				)                                                                                                                  // 90
			);                                                                                                                  // 88
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == 'BacTrackAnalyzing') {                          // 100
			return React.createElement(                                                                                         // 101
				Card,                                                                                                              // 102
				null,                                                                                                              // 102
				React.createElement(CardHeader, { title: 'Analyzing' }),                                                           // 103
				React.createElement(                                                                                               // 104
					CardActions,                                                                                                      // 104
					null,                                                                                                             // 104
					React.createElement(FlatButton, {                                                                                 // 105
						label: 'Cancel',                                                                                                 // 106
						disableTouchRipple: true,                                                                                        // 107
						disableFocusRipple: true,                                                                                        // 108
						onClick: this.handleCancelButton.bind(this)                                                                      // 109
					})                                                                                                                // 105
				)                                                                                                                  // 104
			);                                                                                                                  // 102
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == 'BacTrackCountdown') {                          // 114
			var countDown = 'Warming Up: ' + b.countdown;                                                                       // 115
			return React.createElement(                                                                                         // 116
				Card,                                                                                                              // 117
				null,                                                                                                              // 117
				React.createElement(CardHeader, { title: countDown }),                                                             // 118
				React.createElement(                                                                                               // 119
					CardActions,                                                                                                      // 119
					null,                                                                                                             // 119
					React.createElement(FlatButton, {                                                                                 // 120
						label: 'Cancel',                                                                                                 // 121
						disableTouchRipple: true,                                                                                        // 122
						disableFocusRipple: true,                                                                                        // 123
						onClick: this.handleCancelButton.bind(this)                                                                      // 124
					})                                                                                                                // 120
				)                                                                                                                  // 119
			);                                                                                                                  // 117
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == "BacTrackConnected") {                          // 129
			return React.createElement(                                                                                         // 130
				Card,                                                                                                              // 131
				null,                                                                                                              // 131
				React.createElement(CardHeader, { title: 'Connected' }),                                                           // 132
				React.createElement(                                                                                               // 133
					CardActions,                                                                                                      // 133
					null,                                                                                                             // 133
					React.createElement(FlatButton, {                                                                                 // 134
						label: 'Cancel',                                                                                                 // 135
						disableTouchRipple: true,                                                                                        // 136
						disableFocusRipple: true,                                                                                        // 137
						onClick: this.handleCancelButton.bind(this)                                                                      // 138
					})                                                                                                                // 134
				)                                                                                                                  // 133
			);                                                                                                                  // 131
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == "BacTrackConnecting") {                         // 143
			return React.createElement(                                                                                         // 144
				Card,                                                                                                              // 145
				null,                                                                                                              // 145
				React.createElement(CardHeader, { title: 'Connecting' }),                                                          // 146
				React.createElement(                                                                                               // 147
					CardActions,                                                                                                      // 147
					null,                                                                                                             // 147
					React.createElement(FlatButton, {                                                                                 // 148
						label: 'Cancel',                                                                                                 // 149
						disableTouchRipple: true,                                                                                        // 150
						disableFocusRipple: true,                                                                                        // 151
						onClick: this.handleCancelButton.bind(this)                                                                      // 152
					})                                                                                                                // 148
				)                                                                                                                  // 147
			);                                                                                                                  // 145
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == "BacTrackConnectTimeout") {                     // 157
			return React.createElement(                                                                                         // 158
				Card,                                                                                                              // 159
				null,                                                                                                              // 159
				React.createElement(CardHeader, { title: 'Could not connect to breathalyzer' }),                                   // 160
				React.createElement(                                                                                               // 161
					CardActions,                                                                                                      // 161
					null,                                                                                                             // 161
					React.createElement(FlatButton, {                                                                                 // 162
						label: 'Cancel',                                                                                                 // 163
						disableTouchRipple: true,                                                                                        // 164
						disableFocusRipple: true,                                                                                        // 165
						onClick: this.handleCancelButton.bind(this)                                                                      // 166
					}),                                                                                                               // 162
					React.createElement(RaisedButton, {                                                                               // 168
						disableTouchRipple: true,                                                                                        // 169
						disableFocusRipple: true,                                                                                        // 170
						primary: true,                                                                                                   // 171
						style: { marginRight: 12 },                                                                                      // 172
						label: 'Try Again',                                                                                              // 173
						onClick: this.handleCancelButton.bind(this)                                                                      // 174
					})                                                                                                                // 168
				)                                                                                                                  // 161
			);                                                                                                                  // 159
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == "BacTrackDisconnected") {                       // 179
			return React.createElement(                                                                                         // 180
				Card,                                                                                                              // 181
				null,                                                                                                              // 181
				React.createElement(DynamicSpacer, null),                                                                          // 182
				React.createElement(CardHeader, { title: 'Breathalyzer Disconnected' }),                                           // 183
				React.createElement(                                                                                               // 184
					CardActions,                                                                                                      // 184
					null,                                                                                                             // 184
					React.createElement(FlatButton, {                                                                                 // 185
						label: 'Cancel',                                                                                                 // 186
						disableTouchRipple: true,                                                                                        // 187
						disableFocusRipple: true,                                                                                        // 188
						onClick: this.handleCancelButton.bind(this)                                                                      // 189
					}),                                                                                                               // 185
					React.createElement(RaisedButton, {                                                                               // 191
						disableTouchRipple: true,                                                                                        // 192
						disableFocusRipple: true,                                                                                        // 193
						primary: true,                                                                                                   // 194
						style: { marginRight: 12 },                                                                                      // 195
						label: 'Try Again',                                                                                              // 196
						onClick: this.handleCancelButton.bind(this)                                                                      // 197
					})                                                                                                                // 191
				)                                                                                                                  // 184
			);                                                                                                                  // 181
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == "BacTrackError") {                              // 202
			return React.createElement(                                                                                         // 203
				Card,                                                                                                              // 204
				null,                                                                                                              // 204
				React.createElement(CardHeader, { title: 'Error' }),                                                               // 205
				React.createElement(                                                                                               // 206
					CardText,                                                                                                         // 206
					null,                                                                                                             // 206
					b.errorMessage                                                                                                    // 207
				),                                                                                                                 // 206
				React.createElement(                                                                                               // 209
					CardActions,                                                                                                      // 209
					null,                                                                                                             // 209
					React.createElement(FlatButton, {                                                                                 // 210
						label: 'Cancel',                                                                                                 // 211
						disableTouchRipple: true,                                                                                        // 212
						disableFocusRipple: true,                                                                                        // 213
						onClick: this.handleCancelButton.bind(this)                                                                      // 214
					}),                                                                                                               // 210
					React.createElement(RaisedButton, {                                                                               // 216
						disableTouchRipple: true,                                                                                        // 217
						disableFocusRipple: true,                                                                                        // 218
						primary: true,                                                                                                   // 219
						style: { marginRight: 12 },                                                                                      // 220
						label: 'Try Again',                                                                                              // 221
						onClick: this.handleCancelButton.bind(this)                                                                      // 222
					})                                                                                                                // 216
				)                                                                                                                  // 209
			);                                                                                                                  // 204
		} else if (haveState && b.isConnected && b.lastMajorBacTrackState == "BacTrackAPIKeyDeclined") {                     // 227
			return React.createElement(                                                                                         // 228
				Card,                                                                                                              // 229
				null,                                                                                                              // 229
				React.createElement(CardHeader, { title: 'Problem Talking to Breathalyzer' }),                                     // 230
				React.createElement(                                                                                               // 231
					CardText,                                                                                                         // 231
					null,                                                                                                             // 231
					'Breathalyzer Step: ',                                                                                            // 231
					b.lastMajorBacTrackState                                                                                          // 232
				),                                                                                                                 // 231
				React.createElement(                                                                                               // 234
					CardActions,                                                                                                      // 234
					null,                                                                                                             // 234
					React.createElement(FlatButton, {                                                                                 // 235
						label: 'Cancel',                                                                                                 // 236
						disableTouchRipple: true,                                                                                        // 237
						disableFocusRipple: true,                                                                                        // 238
						onClick: this.handleCancelButton.bind(this)                                                                      // 239
					}),                                                                                                               // 235
					React.createElement(RaisedButton, {                                                                               // 241
						disableTouchRipple: true,                                                                                        // 242
						disableFocusRipple: true,                                                                                        // 243
						primary: true,                                                                                                   // 244
						style: { marginRight: 12 },                                                                                      // 245
						label: 'Try Again',                                                                                              // 246
						onClick: this.handleCancelButton.bind(this)                                                                      // 247
					})                                                                                                                // 241
				)                                                                                                                  // 234
			);                                                                                                                  // 229
		} else if (haveState && b.isConnected) {                                                                             // 252
			var errMessage = b.errorMessage && b.errorMessage.length > 0 ? "<br/>Error: " + b.errorMessage : "";                // 253
			return React.createElement(                                                                                         // 254
				Card,                                                                                                              // 255
				null,                                                                                                              // 255
				React.createElement(CardHeader, { title: 'Breathalyzer Step: {b.lastMajorBacTrackState}' }),                       // 256
				React.createElement(                                                                                               // 257
					CardText,                                                                                                         // 257
					null,                                                                                                             // 257
					'minor state: ',                                                                                                  // 257
					b.lastBacTrackState,                                                                                              // 258
					' ',                                                                                                              // 257
					React.createElement('br', null),                                                                                  // 258
					' Countdown: ',                                                                                                   // 257
					b.countdown,                                                                                                      // 258
					errMessage                                                                                                        // 259
				),                                                                                                                 // 257
				React.createElement(                                                                                               // 261
					CardActions,                                                                                                      // 261
					null,                                                                                                             // 261
					React.createElement(FlatButton, {                                                                                 // 262
						label: 'Cancel',                                                                                                 // 263
						disableTouchRipple: true,                                                                                        // 264
						disableFocusRipple: true,                                                                                        // 265
						onClick: this.handleCancelButton.bind(this)                                                                      // 266
					})                                                                                                                // 262
				)                                                                                                                  // 261
			);                                                                                                                  // 255
		} else {                                                                                                             // 271
			var devices = haveState ? b.devicesFound : {};                                                                      // 272
			var k = Object.keys(devices);                                                                                       // 273
			var devTable = "";                                                                                                  // 274
			var devListItems = [];                                                                                              // 275
			console.log("Have " + k.length + " devices");                                                                       // 276
			var noneFound = haveState ? b.scanStopped && k.length == 0 : false;                                                 // 277
			if (k.length > 0) {                                                                                                 // 278
				var uuids = k.sort();                                                                                              // 279
				for (var i = 0; i < uuids.length; i++) {                                                                           // 280
					var caption = devices[uuids[i]];                                                                                  // 281
					console.log("Adding " + caption);                                                                                 // 282
					devListItems.push(React.createElement(                                                                            // 283
						Card,                                                                                                            // 284
						null,                                                                                                            // 284
						React.createElement(CardHeader, { title: caption, subtitle: uuids[i] }),                                         // 285
						React.createElement(                                                                                             // 286
							CardActions,                                                                                                    // 286
							null,                                                                                                           // 286
							React.createElement(RaisedButton, {                                                                             // 287
								disableTouchRipple: true,                                                                                      // 288
								disableFocusRipple: true,                                                                                      // 289
								primary: true,                                                                                                 // 290
								style: { marginRight: 12 },                                                                                    // 291
								label: 'Use this Breathalyzer',                                                                                // 292
								onClick: this.handleSelection.bind(this, uuids[i])                                                             // 293
							})                                                                                                              // 287
						)                                                                                                                // 286
					));                                                                                                               // 284
				}                                                                                                                  // 298
			}                                                                                                                   // 299
			console.log("About to return");                                                                                     // 300
			return React.createElement(                                                                                         // 301
				'div',                                                                                                             // 302
				null,                                                                                                              // 302
				devListItems,                                                                                                      // 303
				React.createElement(                                                                                               // 304
					Card,                                                                                                             // 304
					null,                                                                                                             // 304
					React.createElement(CardHeader, { title: k.length == 0 ? "Scan for Breathalyzers" : "Scan Again for other Breathalyzers"
					}),                                                                                                               // 305
					React.createElement(                                                                                              // 307
						CardText,                                                                                                        // 307
						null,                                                                                                            // 307
						noneFound ? "Could not find a breathalyzer, please make sure it is turned on." : ""                              // 308
					),                                                                                                                // 307
					React.createElement(                                                                                              // 310
						CardActions,                                                                                                     // 310
						null,                                                                                                            // 310
						React.createElement(FlatButton, { label: 'Cancel',                                                               // 311
							disableTouchRipple: true,                                                                                       // 312
							disableFocusRipple: true,                                                                                       // 313
							onClick: this.handleCancelButton.bind(this) }),                                                                 // 314
						k.length > 0 ? React.createElement(FlatButton, {                                                                 // 316
							label: 'Scan Again',                                                                                            // 318
							disableTouchRipple: true,                                                                                       // 319
							disableFocusRipple: true,                                                                                       // 320
							onClick: this.handleScanButton.bind(this)                                                                       // 321
						}) : React.createElement(RaisedButton, {                                                                         // 317
							disableTouchRipple: true,                                                                                       // 325
							disableFocusRipple: true,                                                                                       // 326
							primary: true,                                                                                                  // 327
							style: { marginRight: 12 },                                                                                     // 328
							label: 'Scan',                                                                                                  // 329
							onClick: this.handleScanButton.bind(this)                                                                       // 330
						})                                                                                                               // 324
					)                                                                                                                 // 310
				)                                                                                                                  // 304
			);                                                                                                                  // 302
		}                                                                                                                    // 338
	};                                                                                                                    // 339
                                                                                                                       //
	BreathalyzerDetail.prototype.drinkingTimeSlider = function drinkingTimeSlider() {};                                   //
                                                                                                                       //
	BreathalyzerDetail.prototype.drinkingAmountSlider = function drinkingAmountSlider() {};                               //
                                                                                                                       //
	BreathalyzerDetail.prototype.handleStartBlow = function handleStartBlow() {                                           //
		console.log("handleStartBlow");                                                                                      // 343
		StartCountdown();                                                                                                    // 344
	};                                                                                                                    // 345
                                                                                                                       //
	BreathalyzerDetail.prototype.handleCancelButton = function handleCancelButton() {                                     //
		console.log("handleCancelButton");                                                                                   // 347
		Disconnect();                                                                                                        // 348
		this.props.cancelStep();                                                                                             // 349
		// Initialize();                                                                                                     //
	};                                                                                                                    // 351
                                                                                                                       //
	BreathalyzerDetail.prototype.handleStopScan = function handleStopScan() {                                             //
		console.log("In stopscan");                                                                                          // 353
		StopScan();                                                                                                          // 354
	};                                                                                                                    // 355
                                                                                                                       //
	BreathalyzerDetail.prototype.handleScanButton = function handleScanButton() {                                         //
		console.log("handleScanButton");                                                                                     // 357
		var preferredUuid = Session.get('preferredBreathalyzerUuid');                                                        // 358
		Meteor.setTimeout(this.handleStopScan.bind(this), 15000);                                                            // 359
		ScanAndConnect(preferredUuid);                                                                                       // 360
	};                                                                                                                    // 361
                                                                                                                       //
	BreathalyzerDetail.prototype.handleSelection = function handleSelection(selected) {                                   //
		console.log("handleSelection:" + selected);                                                                          // 363
		preferredUuid = Session.set('preferredBreathalyzerUuid', selected);                                                  // 364
		Connect(selected);                                                                                                   // 365
	};                                                                                                                    // 366
                                                                                                                       //
	BreathalyzerDetail.prototype.handleDoneButton = function handleDoneButton() {                                         //
		console.log("handleDoneButton");                                                                                     // 368
		Disconnect();                                                                                                        // 369
		this.props.lastStep();                                                                                               // 370
		// Initialize();                                                                                                     //
	};                                                                                                                    // 372
                                                                                                                       //
	return BreathalyzerDetail;                                                                                            //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(BreathalyzerDetail));                                                         //
                                                                                                                       //
function Initialize() {                                                                                                // 374
	BACInitialize();                                                                                                      // 375
}                                                                                                                      // 376
BreathalyzerDetail.propTypes = {                                                                                       // 377
	hasUser: React.PropTypes.object,                                                                                      // 378
	lastStep: React.PropTypes.func.isRequired,                                                                            // 379
	cancelStep: React.PropTypes.func.isRequired                                                                           // 380
};                                                                                                                     // 377
ReactMixin(BreathalyzerDetail.prototype, ReactMeteorData);                                                             // 382
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"BreathalyzerPost.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","material-ui/Card","material-ui/RaisedButton","material-ui/FlatButton",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/breathalyzer/BreathalyzerPost.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Initialize:function(){return Initialize}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Card,CardHeader,CardMedia,CardTitle,CardText,CardActions;module.import('material-ui/Card',{"Card":function(v){Card=v},"CardHeader":function(v){CardHeader=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var RaisedButton;module.import('material-ui/RaisedButton',{"default":function(v){RaisedButton=v}});var FlatButton;module.import('material-ui/FlatButton',{"default":function(v){FlatButton=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
Session.setDefault('BreathalyzerPostState', {                                                                          // 9
	stepIndex: 0                                                                                                          // 10
});                                                                                                                    // 9
                                                                                                                       //
var BreathalyzerPost = function (_React$Component) {                                                                   //
	_inherits(BreathalyzerPost, _React$Component);                                                                        //
                                                                                                                       //
	function BreathalyzerPost() {                                                                                         //
		_classCallCheck(this, BreathalyzerPost);                                                                             //
                                                                                                                       //
		return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                    //
	}                                                                                                                     //
                                                                                                                       //
	BreathalyzerPost.prototype.getMeteorData = function getMeteorData() {                                                 //
		var data = Session.get('BreathalyzerPostState');                                                                     // 16
		if (typeof data === 'undefined') {                                                                                   // 17
			Initialize();                                                                                                       // 18
		}                                                                                                                    // 19
		return data;                                                                                                         // 20
	};                                                                                                                    // 21
                                                                                                                       //
	BreathalyzerPost.prototype.render = function render() {                                                               //
		var lastStep = this.props.lastStep;                                                                                  // 25
		var cancelStep = this.props.cancelStep;                                                                              // 26
		var hasUser = this.props.hasUser;                                                                                    // 27
		return React.createElement(                                                                                          // 28
			Card,                                                                                                               // 29
			null,                                                                                                               // 29
			React.createElement(CardHeader, { title: 'Results and Progress' }),                                                 // 30
			React.createElement(                                                                                                // 31
				CardText,                                                                                                          // 31
				null,                                                                                                              // 31
				'Present the results. If BAC > 0 then time to sober. Positive feedback about the trendline. Reinforce positive steps. Encourage better behavior if bad behavior is evidenced. Think about resources to show that this point. Perhaps this should be in the context of the home page?'
			),                                                                                                                  // 31
			React.createElement(                                                                                                // 40
				CardActions,                                                                                                       // 40
				null,                                                                                                              // 40
				React.createElement(FlatButton, { label: 'Cancel',                                                                 // 41
					disableTouchRipple: true,                                                                                         // 42
					disableFocusRipple: true,                                                                                         // 43
					onClick: this.props.cancelStep                                                                                    // 44
				}),                                                                                                                // 41
				React.createElement(RaisedButton, {                                                                                // 46
					disableTouchRipple: true,                                                                                         // 47
					disableFocusRipple: true,                                                                                         // 48
					primary: true,                                                                                                    // 49
					style: { marginRight: 12 },                                                                                       // 50
					label: 'Done', onClick: this.props.lastStep })                                                                    // 51
			)                                                                                                                   // 40
		);                                                                                                                   // 29
	};                                                                                                                    // 55
                                                                                                                       //
	return BreathalyzerPost;                                                                                              //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(BreathalyzerPost));                                                           //
                                                                                                                       //
                                                                                                                       //
function Initialize() {                                                                                                // 58
	console.log("BreathalyzerPost Initialize");                                                                           // 59
	data = {                                                                                                              // 60
		stepIndex: 0                                                                                                         // 61
	};                                                                                                                    // 60
	Session.set('BreathalyzerPostState', data);                                                                           // 63
	console.log("BreathalyzerPost Initialize Return");                                                                    // 64
}                                                                                                                      // 65
                                                                                                                       //
BreathalyzerPost.propTypes = {                                                                                         // 67
	hasUser: React.PropTypes.object,                                                                                      // 68
	lastStep: React.PropTypes.func.isRequired,                                                                            // 69
	cancelStep: React.PropTypes.func.isRequired                                                                           // 70
};                                                                                                                     // 67
ReactMixin(BreathalyzerPost.prototype, ReactMeteorData);                                                               // 72
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"BreathalyzerPre.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","material-ui/Stepper","material-ui/Slider","material-ui/RaisedButton","material-ui/FlatButton","../questions/SliderStep",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/breathalyzer/BreathalyzerPre.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Initialize:function(){return Initialize}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Step,Stepper,StepButton,StepContent,StepLabel;module.import('material-ui/Stepper',{"Step":function(v){Step=v},"Stepper":function(v){Stepper=v},"StepButton":function(v){StepButton=v},"StepContent":function(v){StepContent=v},"StepLabel":function(v){StepLabel=v}});var Slider;module.import('material-ui/Slider',{"default":function(v){Slider=v}});var RaisedButton;module.import('material-ui/RaisedButton',{"default":function(v){RaisedButton=v}});var FlatButton;module.import('material-ui/FlatButton',{"default":function(v){FlatButton=v}});var SliderStep;module.import('../questions/SliderStep',{"default":function(v){SliderStep=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       //
Session.setDefault('BreathalyzerPreState', {                                                                           // 10
	firstDrinkTimeSlider: undefined,                                                                                      // 11
	lastDrinkTimeSlider: undefined,                                                                                       // 12
	lastDrinkNumberSlider: undefined,                                                                                     // 13
	estimatedBACSlider: undefined,                                                                                        // 14
	stepIndex: 0,                                                                                                         // 15
	finished: false                                                                                                       // 16
});                                                                                                                    // 10
                                                                                                                       //
/**                                                                                                                    //
 * A basic vertical non-linear implementation                                                                          //
 */                                                                                                                    //
                                                                                                                       //
var BreathalyzerPre = function (_React$Component) {                                                                    //
	_inherits(BreathalyzerPre, _React$Component);                                                                         //
                                                                                                                       //
	function BreathalyzerPre() {                                                                                          //
		_classCallCheck(this, BreathalyzerPre);                                                                              //
                                                                                                                       //
		return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                    //
	}                                                                                                                     //
                                                                                                                       //
	BreathalyzerPre.prototype.getMeteorData = function getMeteorData() {                                                  //
		var data = Session.get('BreathalyzerPreState');                                                                      // 25
		if (typeof data === 'undefined') {                                                                                   // 26
			data = {                                                                                                            // 27
				firstDrinkTimeSlider: undefined,                                                                                   // 28
				lastDrinkTimeSlider: undefined,                                                                                    // 29
				lastDrinkNumberSlider: undefined,                                                                                  // 30
				estimatedBACSlider: undefined,                                                                                     // 31
				stepIndex: 0,                                                                                                      // 32
				finished: false                                                                                                    // 33
			};                                                                                                                  // 27
			Session.set('BreathalyzerPreState', data);                                                                          // 35
		}                                                                                                                    // 36
		return data;                                                                                                         // 37
	};                                                                                                                    // 38
                                                                                                                       //
	BreathalyzerPre.prototype.render = function render() {                                                                //
		var lastStep = this.props.lastStep;                                                                                  // 41
		var cancelStep = this.props.cancelStep;                                                                              // 42
		var hasUser = this.props.hasUser;                                                                                    // 43
		var data = Session.get('BreathalyzerPreState');                                                                      // 44
		var stepIndex = data.stepIndex;                                                                                      // 45
		if (!(typeof data.firstDrinkTimeSlider === 'undefined' || typeof data.lastDrinkTimeSlider === 'undefined') && data.lastDrinkTimeSlider >= 0 && data.firstDrinkTimeSlider >= 0 && data.lastDrinkTimeSlider > data.firstDrinkTimeSlider) {
			console.log("First was after last, so resetting last to be 20 minutes before first.");                              // 51
			data.lastDrinkTimeSlider = data.firstDrinkTimeSlider - 20;                                                          // 52
			Session.set('BreathalyzerPreState', data);                                                                          // 53
		}                                                                                                                    // 54
		var showDone = !(typeof data.firstDrinkTimeSlider === 'undefined' || typeof data.lastDrinkTimeSlider === 'undefined' || typeof data.lastDrinkNumberSlider === 'undefined' || typeof data.estimatedBAC === 'undefined' || data.firstDrinkTimeSlider < 0 || data.lastDrinkTimeSlider < 0 || data.lastDrinkNumberSlider < 0 || data.estimatedBAC < 0);
		console.log("Show done is " + showDone);                                                                             // 63
		return React.createElement(                                                                                          // 64
			'div',                                                                                                              // 65
			{ style: { maxWidth: 380, margin: 'auto' } },                                                                       // 65
			React.createElement(                                                                                                // 66
				Stepper,                                                                                                           // 66
				{                                                                                                                  // 66
					activeStep: stepIndex,                                                                                            // 67
					linear: false,                                                                                                    // 68
					orientation: 'vertical'                                                                                           // 69
				},                                                                                                                 // 66
				React.createElement(SliderStep, {                                                                                  // 71
					stateStruct: 'BreathalyzerPreState',                                                                              // 72
					stateVariable: 'firstDrinkTimeSlider',                                                                            // 73
					stepIndexName: 'stepIndex',                                                                                       // 74
					stepIndex: 0,                                                                                                     // 75
					maxStepIndex: 3,                                                                                                  // 76
					unsetValue: typeof data.firstDrinkTimeSlider === 'undefined' || data.firstDrinkTimeSlider < 0,                    // 77
					minValue: this.max(this.getValue("BreathalyzerPreState", "lastDrinkTimeSlider", 0), 0),                           // 78
					maxValue: 1440,                                                                                                   // 79
					stepIncrement: 20,                                                                                                // 80
					unfilledPrompt: 'When did you take your first drink today?',                                                      // 81
					answerFormat: 'Your first drink was: %s',                                                                         // 82
					unSetLabel: 'Slide to select time',                                                                               // 83
					beyondLabel: 'Before %s',                                                                                         // 84
					validLabel: '%s',                                                                                                 // 85
					interpretValue: this.interpretDrinkTime.bind(this),                                                               // 86
					showDone: showDone,                                                                                               // 87
					doneStep: lastStep                                                                                                // 88
				}),                                                                                                                // 71
				React.createElement(SliderStep, {                                                                                  // 90
					stateStruct: 'BreathalyzerPreState',                                                                              // 91
					stateVariable: 'lastDrinkTimeSlider',                                                                             // 92
					stepIndexName: 'stepIndex',                                                                                       // 93
					stepIndex: 1,                                                                                                     // 94
					maxStepIndex: 3,                                                                                                  // 95
					minValue: 0,                                                                                                      // 96
					unsetValue: typeof data.lastDrinkTimeSlider === 'undefined' || data.lastDrinkTimeSlider < 0,                      // 97
					maxValue: this.getValue("BreathalyzerPreState", "firstDrinkTimeSlider", 1440),                                    // 98
					stepIncrement: 20,                                                                                                // 99
					unfilledPrompt: 'When did you take your last drink today?',                                                       // 100
					answerFormat: 'Your last drink was: %s',                                                                          // 101
					unSetLabel: 'Slide to select time',                                                                               // 102
					beyondLabel: 'Before %s',                                                                                         // 103
					validLabel: '%s',                                                                                                 // 104
					interpretValue: this.interpretDrinkTime.bind(this),                                                               // 105
					showDone: showDone,                                                                                               // 106
					doneStep: lastStep                                                                                                // 107
				}),                                                                                                                // 90
				React.createElement(SliderStep, {                                                                                  // 109
					stateStruct: 'BreathalyzerPreState',                                                                              // 110
					stateVariable: 'lastDrinkNumberSlider',                                                                           // 111
					stepIndexName: 'stepIndex',                                                                                       // 112
					stepIndex: 2,                                                                                                     // 113
					maxStepIndex: 3,                                                                                                  // 114
					unsetValue: typeof data.lastDrinkNumberSlider === 'undefined' || data.lastDrinkNumberSlider < 0,                  // 115
					minValue: 0,                                                                                                      // 116
					maxValue: 15,                                                                                                     // 117
					stepIncrement: 1,                                                                                                 // 118
					unfilledPrompt: 'How many drinks did you have today?',                                                            // 119
					answerFormat: 'You had %s',                                                                                       // 120
					unSetLabel: 'Slide to select number of drinks',                                                                   // 121
					beyondLabel: '%s or more of your usual drinks',                                                                   // 122
					validLabel: '%s of your usual drinks',                                                                            // 123
					interpretValue: this.echoValue.bind(this),                                                                        // 124
					showDone: showDone,                                                                                               // 125
					doneStep: lastStep                                                                                                // 126
				}),                                                                                                                // 109
				React.createElement(SliderStep, {                                                                                  // 128
					stateStruct: 'BreathalyzerPreState',                                                                              // 129
					stateVariable: 'estimatedBAC',                                                                                    // 130
					stepIndexName: 'stepIndex',                                                                                       // 131
					stepIndex: 3,                                                                                                     // 132
					maxStepIndex: 3,                                                                                                  // 133
					unsetValue: typeof data.estimatedBAC === 'undefined' || data.estimatedBAC < 0,                                    // 134
					minValue: 0.0,                                                                                                    // 135
					maxValue: 0.15,                                                                                                   // 136
					stepIncrement: 0.01,                                                                                              // 137
					unfilledPrompt: 'What is your estimated blood alcohol level?',                                                    // 138
					answerFormat: 'Your estimate of %s',                                                                              // 139
					unSetLabel: 'Slide to estimate a level',                                                                          // 140
					beyondLabel: 'BAC: %0.2f or more',                                                                                // 141
					validLabel: 'BAC: %0.2f',                                                                                         // 142
					interpretValue: this.echoValue.bind(this),                                                                        // 143
					showDone: showDone,                                                                                               // 144
					doneStep: lastStep                                                                                                // 145
				})                                                                                                                 // 128
			),                                                                                                                  // 66
			React.createElement(                                                                                                // 148
				'p',                                                                                                               // 148
				null,                                                                                                              // 148
				React.createElement(FlatButton, { label: 'Cancel',                                                                 // 149
					disableTouchRipple: true,                                                                                         // 150
					disableFocusRipple: true,                                                                                         // 151
					onClick: cancelStep                                                                                               // 152
				})                                                                                                                 // 149
			)                                                                                                                   // 148
		);                                                                                                                   // 65
	};                                                                                                                    // 157
                                                                                                                       //
	BreathalyzerPre.prototype.echoValue = function echoValue(value) {                                                     //
		return value;                                                                                                        // 160
	};                                                                                                                    // 161
                                                                                                                       //
	BreathalyzerPre.prototype.max = function max(v1, v2) {                                                                //
		if (v1 < v2) return v2;                                                                                              // 164
		return v1;                                                                                                           // 165
	};                                                                                                                    // 166
                                                                                                                       //
	BreathalyzerPre.prototype.interpretDrinkTime = function interpretDrinkTime(minutesAgo) {                              //
		var now = new Date();                                                                                                // 169
		var ms = now.getTime();                                                                                              // 170
		ms = ms - minutesAgo * 1000 * 60;                                                                                    // 171
		now.setTime(ms);                                                                                                     // 172
		now.setSeconds(0);                                                                                                   // 173
		now.setMilliseconds(0);                                                                                              // 174
		now.setMinutes(10 * Math.floor(now.getMinutes() / 10));                                                              // 175
		return now.toLocaleTimeString();                                                                                     // 176
	};                                                                                                                    // 177
                                                                                                                       //
	BreathalyzerPre.prototype.getValue = function getValue(structName, fieldName, def) {                                  //
		var v = Session.get(structName);                                                                                     // 179
		if (typeof v === 'undefined') {                                                                                      // 180
			return def;                                                                                                         // 181
		}                                                                                                                    // 182
		if (typeof v[fieldName] === 'undefined') {                                                                           // 183
			return def;                                                                                                         // 184
		}                                                                                                                    // 185
		return v[fieldName];                                                                                                 // 186
	};                                                                                                                    // 187
                                                                                                                       //
	return BreathalyzerPre;                                                                                               //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(BreathalyzerPre));                                                            //
                                                                                                                       //
                                                                                                                       //
function Initialize() {                                                                                                // 190
	var data = {                                                                                                          // 191
		firstDrinkTimeSlider: undefined,                                                                                     // 192
		lastDrinkTimeSlider: undefined,                                                                                      // 193
		lastDrinkNumberSlider: undefined,                                                                                    // 194
		estimatedBACSlider: undefined,                                                                                       // 195
		stepIndex: 0,                                                                                                        // 196
		finished: false                                                                                                      // 197
	};                                                                                                                    // 191
	Session.set('BreathalyzerPreState', data);                                                                            // 199
}                                                                                                                      // 200
                                                                                                                       //
BreathalyzerPre.propTypes = {                                                                                          // 203
	hasUser: React.PropTypes.object,                                                                                      // 204
	lastStep: React.PropTypes.func.isRequired,                                                                            // 205
	cancelStep: React.PropTypes.func.isRequired                                                                           // 206
};                                                                                                                     // 203
ReactMixin(BreathalyzerPre.prototype, ReactMeteorData);                                                                // 208
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"conversations":{"AddPostToConversation.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","meteor/themeteorchef:bert","react-bootstrap","react-toolbox/lib/card","react-toolbox/lib/input","../../../api/posts/methods.js","/imports/ui/components/GlassCard","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/conversations/AddPostToConversation.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AddPostToConversation:function(){return AddPostToConversation}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var FormGroup;module.import('react-bootstrap',{"FormGroup":function(v){FormGroup=v}});var CardTitle,CardText;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var insertPost;module.import('../../../api/posts/methods.js',{"insertPost":function(v){insertPost=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       //
// const handleInsertPost = (event, topicId) => {                                                                      //
//   const target = event.target;                                                                                      //
//   const title = target.value.trim();                                                                                //
//                                                                                                                     //
//   if (title !== '' && event.keyCode === 13) {                                                                       //
//     //console.log('title', title);                                                                                  //
//     let newPost = {                                                                                                 //
//       title: title,                                                                                                 //
//       createdAt: new Date(),                                                                                        //
//       createdBy: {                                                                                                  //
//         display: Meteor.user().fullName(),                                                                          //
//         reference: Meteor.userId()                                                                                  //
//       },                                                                                                            //
//       topicId: topicId                                                                                              //
//     };                                                                                                              //
//     if (Meteor.user().profile && Meteor.user().profile.avatar) {                                                    //
//                                                                                                                     //
//     }                                                                                                               //
//                                                                                                                     //
//     insertPost.call(newPost, (error) => {                                                                           //
//       if (error) {                                                                                                  //
//         Bert.alert(error.reason, 'danger');                                                                         //
//       } else {                                                                                                      //
//         target.value = '';                                                                                          //
//         Bert.alert('Post added!', 'success');                                                                       //
//       }                                                                                                             //
//     });                                                                                                             //
//   }                                                                                                                 //
// };                                                                                                                  //
                                                                                                                       //
var AddPostToConversation = function (_React$Component) {                                                              // 44
  _inherits(AddPostToConversation, _React$Component);                                                                  // 44
                                                                                                                       //
  function AddPostToConversation() {                                                                                   // 44
    _classCallCheck(this, AddPostToConversation);                                                                      // 44
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 44
  }                                                                                                                    // 44
                                                                                                                       //
  AddPostToConversation.prototype.getMeteorData = function getMeteorData() {                                           // 44
                                                                                                                       //
    var data = {                                                                                                       // 47
      style: {}                                                                                                        // 48
    };                                                                                                                 // 47
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 53
      data.style.color = 'black';                                                                                      // 54
      data.style.background = 'white';                                                                                 // 55
    } else {                                                                                                           // 56
      data.style.color = 'white';                                                                                      // 57
      data.style.background = 'black';                                                                                 // 58
    }                                                                                                                  // 59
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 62
      data.style.filter = 'blur(3px)';                                                                                 // 63
      data.style.webkitFilter = 'blur(3px)';                                                                           // 64
    }                                                                                                                  // 65
                                                                                                                       //
    return data;                                                                                                       // 67
  };                                                                                                                   // 68
                                                                                                                       //
  AddPostToConversation.prototype.handleInsertPost = function handleInsertPost(topicId, event) {                       // 44
    var target = event.target;                                                                                         // 71
    // console.log("this", this);                                                                                      //
    // console.log("topicId", topicId);                                                                                //
    // console.log("event.keyCode", event.keyCode);                                                                    //
                                                                                                                       //
    var title = this.refs.addPostToConversationInput.refs.input.value.trim();                                          // 77
                                                                                                                       //
    //console.log("handleInsertPost");                                                                                 //
    //console.log("Meteor.user()", Meteor.user());                                                                     //
                                                                                                                       //
    if (title !== '' && event.keyCode === 13) {                                                                        // 83
      //console.log('title', title);                                                                                   //
      var newPost = {                                                                                                  // 85
        title: title,                                                                                                  // 86
        createdAt: new Date(),                                                                                         // 87
        createdBy: {                                                                                                   // 88
          display: Meteor.user().fullName(),                                                                           // 89
          reference: Meteor.userId()                                                                                   // 90
        },                                                                                                             // 88
        topicId: topicId                                                                                               // 92
      };                                                                                                               // 85
                                                                                                                       //
      if (Meteor.user().profile && Meteor.user().profile.avatar) {                                                     // 95
        newPost.createdBy.avatar = Meteor.user().profile.avatar;                                                       // 96
      }                                                                                                                // 97
                                                                                                                       //
      //console.log("newPost", newPost);                                                                               //
                                                                                                                       //
      insertPost.call(newPost, function (error) {                                                                      // 101
        if (error) {                                                                                                   // 102
          Bert.alert(error.reason, 'danger');                                                                          // 103
        } else {                                                                                                       // 104
          target.value = '';                                                                                           // 105
          Bert.alert('Post added!', 'success');                                                                        // 106
        }                                                                                                              // 107
      });                                                                                                              // 108
    }                                                                                                                  // 109
  };                                                                                                                   // 110
                                                                                                                       //
  AddPostToConversation.prototype.render = function render() {                                                         // 44
    return React.createElement(                                                                                        // 113
      GlassCard,                                                                                                       // 114
      null,                                                                                                            // 114
      React.createElement(                                                                                             // 115
        CardText,                                                                                                      // 115
        null,                                                                                                          // 115
        React.createElement(                                                                                           // 116
          FormGroup,                                                                                                   // 116
          null,                                                                                                        // 116
          React.createElement(Input, {                                                                                 // 117
            multiline: true,                                                                                           // 118
            label: 'Add Post',                                                                                         // 119
            name: 'addPost',                                                                                           // 120
            type: 'textarea',                                                                                          // 121
            onKeyUp: this.handleInsertPost.bind(this, this.props.topicId),                                             // 122
            rows: '5',                                                                                                 // 123
            ref: 'addPostToConversationInput'                                                                          // 124
          })                                                                                                           // 117
        )                                                                                                              // 116
      )                                                                                                                // 115
    );                                                                                                                 // 114
  };                                                                                                                   // 130
                                                                                                                       //
  return AddPostToConversation;                                                                                        // 44
}(React.Component);                                                                                                    // 44
                                                                                                                       //
AddPostToConversation.propTypes = {};                                                                                  // 134
ReactMixin(AddPostToConversation.prototype, ReactMeteorData);                                                          // 135
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ConversationPosts.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/card","/imports/ui/components/GlassCard","react-toolbox/lib/button","meteor/themeteorchef:bert","/imports/api/posts/methods","/imports/ui/components/Spacer","/imports/ui/components/DynamicSpacer","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/conversations/ConversationPosts.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({ConversationPosts:function(){return ConversationPosts}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var removePost;module.import('/imports/api/posts/methods',{"removePost":function(v){removePost=v}});var Spacer;module.import('/imports/ui/components/Spacer',{"default":function(v){Spacer=v}});var DynamicSpacer;module.import('/imports/ui/components/DynamicSpacer',{"DynamicSpacer":function(v){DynamicSpacer=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       //
                                                                                                                       // 15
                                                                                                                       //
var ConversationPosts = function (_React$Component) {                                                                  // 17
  _inherits(ConversationPosts, _React$Component);                                                                      // 17
                                                                                                                       //
  function ConversationPosts() {                                                                                       // 17
    _classCallCheck(this, ConversationPosts);                                                                          // 17
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 17
  }                                                                                                                    // 17
                                                                                                                       //
  ConversationPosts.prototype.getMeteorData = function getMeteorData() {                                               // 17
    //console.log("getMeteorData() this.props", this.props);                                                           //
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 24
      style: {                                                                                                         // 25
        overflowY: 'scroll',                                                                                           // 26
        WebkitTransform: 'translate3d(0px,0px,0px)',                                                                   // 27
        WebkitOverflowScrolling: 'touch',                                                                              // 28
        opacity: Session.get('globalOpacity')                                                                          // 29
      },                                                                                                               // 25
      state: {                                                                                                         // 31
        checkbox: false,                                                                                               // 32
        canManagePost: false                                                                                           // 33
      },                                                                                                               // 31
      posts: []                                                                                                        // 35
    };                                                                                                                 // 24
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 38
      data.style.color = 'black';                                                                                      // 39
      data.style.background = 'white';                                                                                 // 40
    } else {                                                                                                           // 41
      data.style.color = 'white';                                                                                      // 42
      data.style.background = 'black';                                                                                 // 43
    }                                                                                                                  // 44
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 47
      data.style.filter = 'blur(3px)';                                                                                 // 48
      data.style.webkitFilter = 'blur(3px)';                                                                           // 49
    }                                                                                                                  // 50
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 53
      data.style.backdropFilter = 'blur(5px)';                                                                         // 54
    }                                                                                                                  // 55
                                                                                                                       //
    // another mixin                                                                                                   //
    if (Session.get('appWidth') > 768) {                                                                               // 58
      Session.set('hasPageVerticalPadding', true);                                                                     // 59
      Session.set('mainPanelIsCard', true);                                                                            // 60
    } else {                                                                                                           // 61
      Session.set('hasPageVerticalPadding', false);                                                                    // 62
      Session.set('mainPanelIsCard', false);                                                                           // 63
    }                                                                                                                  // 64
                                                                                                                       //
    if (Posts.find({                                                                                                   // 66
      topicId: this.props.topicId                                                                                      // 67
    }).count() > 0) {                                                                                                  // 66
      data.posts = Posts.find({                                                                                        // 69
        topicId: this.props.topicId                                                                                    // 70
      }, { sort: { createdAt: 1 } }).fetch();                                                                          // 69
    }                                                                                                                  // 72
    //console.log('data.posts', data.posts);                                                                           //
                                                                                                                       //
    return data;                                                                                                       // 75
  };                                                                                                                   // 76
                                                                                                                       //
  ConversationPosts.prototype.render = function render() {                                                             // 17
    var self = this;                                                                                                   // 79
                                                                                                                       //
    return React.createElement(                                                                                        // 81
      'div',                                                                                                           // 82
      { className: 'conversation' },                                                                                   // 82
      this.data.posts.map(function (item, i) {                                                                         // 83
        var createdAt = '';                                                                                            // 84
        var createdBy = '';                                                                                            // 85
        var createdByAvatar = '/thumbnail-blank.png'; //https://media.licdn.com/mpr/mpr/shrink_100_100/AAEAAQAAAAAAAAKeAAAAJDJkM2RmNTMzLWI4OGUtNDZmOC1iNTliLWYwOTc1ZWM0YmIyZg.jpg
        if (item.createdAt) {                                                                                          // 87
          createdAt = moment(item.createdAt).format('YYYY, MMMM Do (dddd) hh:mm a');                                   // 88
        }                                                                                                              // 89
        if (item.createdBy && item.createdBy.display) {                                                                // 90
          createdBy = item.createdBy.display;                                                                          // 91
        }                                                                                                              // 92
        if (item.createdBy && item.createdBy.avatar) {                                                                 // 93
          createdByAvatar = item.createdBy.avatar;                                                                     // 94
        }                                                                                                              // 95
        return React.createElement(                                                                                    // 96
          'div',                                                                                                       // 97
          { className: 'postCard', key: i },                                                                           // 97
          React.createElement(                                                                                         // 98
            GlassCard,                                                                                                 // 98
            null,                                                                                                      // 98
            React.createElement(CardTitle, {                                                                           // 99
              avatar: createdByAvatar,                                                                                 // 100
              title: createdBy,                                                                                        // 101
              subtitle: createdAt                                                                                      // 102
            }),                                                                                                        // 99
            React.createElement(                                                                                       // 105
              CardText,                                                                                                // 105
              null,                                                                                                    // 105
              item.title                                                                                               // 106
            ),                                                                                                         // 105
            self.renderCardActions(i, item)                                                                            // 108
          ),                                                                                                           // 98
          React.createElement(DynamicSpacer, null)                                                                     // 111
        );                                                                                                             // 97
      })                                                                                                               // 115
    );                                                                                                                 // 82
  };                                                                                                                   // 119
                                                                                                                       //
  ConversationPosts.prototype.renderCardActions = function renderCardActions(i, item) {                                // 17
    // console.log("self", self);                                                                                      //
    // console.log("canManagePost", canManagePost);                                                                    //
    // console.log("i", i);                                                                                            //
    // console.log("item", item);                                                                                      //
                                                                                                                       //
    // <Button className='editButton' label='Edit' style={{color: 'lightgray'}} />                                     //
                                                                                                                       //
    if (item && item.createdBy && item.createdBy.reference) {                                                          // 129
      if (item.createdBy.reference === Meteor.userId()) {                                                              // 130
        return React.createElement(                                                                                    // 131
          CardActions,                                                                                                 // 132
          null,                                                                                                        // 132
          React.createElement(Button, { className: 'deleteButton', onMouseUp: this.handleDeleteButton.bind(self, i, item), label: 'Delete', style: { color: 'lightgray' } })
        );                                                                                                             // 132
      }                                                                                                                // 136
    }                                                                                                                  // 137
  };                                                                                                                   // 138
                                                                                                                       //
  ConversationPosts.prototype.handleDeleteButton = function handleDeleteButton(index, post) {                          // 17
    //console.log("handleDeleteButton");                                                                               //
                                                                                                                       //
    removePost.call({                                                                                                  // 143
      _id: post._id                                                                                                    // 144
    }, function (error) {                                                                                              // 143
      if (error) {                                                                                                     // 146
        Bert.alert(error.reason, 'danger');                                                                            // 147
      } else {                                                                                                         // 148
        Bert.alert('Post removed!', 'success');                                                                        // 149
      }                                                                                                                // 150
    });                                                                                                                // 151
  };                                                                                                                   // 152
                                                                                                                       //
  return ConversationPosts;                                                                                            // 17
}(React.Component);                                                                                                    // 17
                                                                                                                       //
ConversationPosts.propTypes = {};                                                                                      // 156
ConversationPosts.defaultProps = {};                                                                                   // 157
ReactMixin(ConversationPosts.prototype, ReactMeteorData);                                                              // 158
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"devices":{"DeviceDetail.js":["babel-runtime/helpers/typeof","babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/input","react-toolbox/lib/button","react-bootstrap","../../containers/documents-list.js","../../components/AddDocument.js","../../components/PageContainer","/imports/ui/components/GlassCard","react-toolbox/lib/card","react-toolbox/lib/tabs","../../../api/devices/methods","meteor/themeteorchef:bert","react-toolbox/lib/date_picker",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/devices/DeviceDetail.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof;module.import('babel-runtime/helpers/typeof',{"default":function(v){_typeof=v}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Row,Col;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v}});var DocumentsList;module.import('../../containers/documents-list.js',{"default":function(v){DocumentsList=v}});var AddDocument;module.import('../../components/AddDocument.js',{"default":function(v){AddDocument=v}});var PageContainer;module.import('../../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var insertDevice,updateDevice,removeDeviceById;module.import('../../../api/devices/methods',{"insertDevice":function(v){insertDevice=v},"updateDevice":function(v){updateDevice=v},"removeDeviceById":function(v){removeDeviceById=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var DatePicker;module.import('react-toolbox/lib/date_picker',{"default":function(v){DatePicker=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
                                                                                                                       // 16
                                                                                                                       //
                                                                                                                       // 18
                                                                                                                       // 19
                                                                                                                       //
                                                                                                                       // 21
//import { DatePicker, DatePickerDialog, Calendar, CalendarDay, CalendarMonth } from 'react-toolbox/lib/date_picker';  //
                                                                                                                       //
var defaultState = false;                                                                                              // 24
                                                                                                                       //
Session.setDefault('deviceDetailState', defaultState);                                                                 // 26
                                                                                                                       //
var DeviceDetail = function (_React$Component) {                                                                       //
  _inherits(DeviceDetail, _React$Component);                                                                           //
                                                                                                                       //
  function DeviceDetail() {                                                                                            //
    _classCallCheck(this, DeviceDetail);                                                                               //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  DeviceDetail.prototype.getMeteorData = function getMeteorData() {                                                    //
    var data = {                                                                                                       // 31
      deviceId: false,                                                                                                 // 32
      device: {                                                                                                        // 33
        deviceName: "",                                                                                                // 34
        deviceProductId: "",                                                                                           // 35
        patientId: ""                                                                                                  // 36
      }                                                                                                                // 33
    };                                                                                                                 // 31
                                                                                                                       //
    if (Session.get('selectedDevice')) {                                                                               // 40
      data.deviceId = Session.get('selectedDevice');                                                                   // 41
                                                                                                                       //
      var selectedDevice = Devices.findOne({ _id: Session.get('selectedDevice') });                                    // 43
      if (selectedDevice) {                                                                                            // 44
        data.device = {                                                                                                // 45
          id: selectedDevice._id,                                                                                      // 46
          deviceName: selectedDevice.deviceName,                                                                       // 47
          deviceProductId: selectedDevice.productId,                                                                   // 48
          patientId: selectedDevice.patientId                                                                          // 49
        };                                                                                                             // 45
      }                                                                                                                // 51
    }                                                                                                                  // 52
                                                                                                                       //
    if (Session.get('deviceDetailState')) {                                                                            // 54
      data.device = Session.get('deviceDetailState');                                                                  // 55
    }                                                                                                                  // 56
                                                                                                                       //
    return data;                                                                                                       // 58
  };                                                                                                                   // 59
                                                                                                                       //
  DeviceDetail.prototype.render = function render() {                                                                  //
    console.log("In device detail render");                                                                            // 62
    return React.createElement(                                                                                        // 63
      'div',                                                                                                           // 64
      { className: 'deviceDetail' },                                                                                   // 64
      React.createElement(                                                                                             // 65
        CardText,                                                                                                      // 65
        null,                                                                                                          // 65
        'No devices'                                                                                                   // 65
      )                                                                                                                // 65
    );                                                                                                                 // 64
    if (this.data && this.data.device && this.data.device.deviceName && this.data.device.deviceProductId && this.data.device.patientId) {
      console.log("In device detail render with device" + this.data.device.deviceName);                                // 71
      return React.createElement(                                                                                      // 72
        'div',                                                                                                         // 73
        { className: 'deviceDetail' },                                                                                 // 73
        React.createElement(                                                                                           // 74
          CardText,                                                                                                    // 74
          null,                                                                                                        // 74
          React.createElement(Input, { ref: 'name', type: 'text', label: 'name', name: 'name', value: this.data.device.deviceName, onChange: this.changeState.bind(this, 'name') }),
          React.createElement(Input, { ref: 'productid', type: 'text', label: 'productid', name: 'productid', value: this.data.device.deviceProductId, onChange: this.changeState.bind(this, 'productid') }),
          React.createElement(Input, { ref: 'patientid', type: 'text', label: 'patientid', name: 'patientid', value: this.data.device.patientId, onChange: this.changeState.bind(this, 'patientid') })
        ),                                                                                                             // 74
        React.createElement(                                                                                           // 79
          CardActions,                                                                                                 // 79
          null,                                                                                                        // 79
          this.determineButtons(this.data.deviceId)                                                                    // 80
        )                                                                                                              // 79
      );                                                                                                               // 73
    } else {                                                                                                           // 84
      console.log("In device detail render with no device");                                                           // 85
      return React.createElement(                                                                                      // 86
        'div',                                                                                                         // 87
        { className: 'deviceDetail' },                                                                                 // 87
        React.createElement(                                                                                           // 88
          CardText,                                                                                                    // 88
          null,                                                                                                        // 88
          'No devices'                                                                                                 // 88
        )                                                                                                              // 88
      );                                                                                                               // 87
    }                                                                                                                  // 93
  };                                                                                                                   // 94
                                                                                                                       //
  DeviceDetail.prototype.determineButtons = function determineButtons(deviceId) {                                      //
    if (deviceId) {                                                                                                    // 97
      return React.createElement(                                                                                      // 98
        'div',                                                                                                         // 99
        null,                                                                                                          // 99
        React.createElement(Button, { label: 'Save', onClick: this.handleSaveButton.bind(this) }),                     // 100
        React.createElement(Button, { label: 'Delete', onClick: this.handleDeleteButton.bind(this) })                  // 101
      );                                                                                                               // 99
    } else {                                                                                                           // 104
      return React.createElement(Button, { label: 'Save', onClick: this.handleSaveButton.bind(this) });                // 105
    }                                                                                                                  // 108
  };                                                                                                                   // 109
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  DeviceDetail.prototype.changeState = function changeState(field, value) {                                            //
                                                                                                                       //
    //console.log("changeState", value);                                                                               //
                                                                                                                       //
    // by default, assume there's no other data and we're creating a new device                                        //
    var deviceUpdate = {                                                                                               // 116
      id: "",                                                                                                          // 117
      deviceName: "",                                                                                                  // 118
      deviceProductId: "",                                                                                             // 119
      patientId: ""                                                                                                    // 120
    };                                                                                                                 // 116
                                                                                                                       //
    // if there's an existing device, use them                                                                         //
    if (Session.get('selectedDevice')) {                                                                               // 124
      deviceUpdate = this.data.device;                                                                                 // 125
    }                                                                                                                  // 126
                                                                                                                       //
    if (_typeof(Session.get('deviceDetailState')) === "object") {                                                      // 128
      deviceUpdate = Session.get('deviceDetailState');                                                                 // 129
    }                                                                                                                  // 130
                                                                                                                       //
    deviceUpdate[field] = value;                                                                                       // 132
    console.log("deviceUpdate", deviceUpdate);                                                                         // 133
    Session.set('deviceDetailState', deviceUpdate);                                                                    // 134
  };                                                                                                                   // 135
                                                                                                                       //
  DeviceDetail.prototype.openTab = function openTab(index) {                                                           //
    // set which tab is selected                                                                                       //
    var state = Session.get('deviceCardState');                                                                        // 138
    state["index"] = index;                                                                                            // 139
    Session.set('deviceCardState', state);                                                                             // 140
  };                                                                                                                   // 141
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  DeviceDetail.prototype.handleSaveButton = function handleSaveButton() {                                              //
    var _this2 = this;                                                                                                 // 144
                                                                                                                       //
    console.log("this", this);                                                                                         // 145
                                                                                                                       //
    var deviceFormData = {                                                                                             // 147
      'deviceName': [{ 'text': this.refs.name.refs.input.value }],                                                     // 148
      'deviceProductId': [{ 'text': this.refs.productid.refs.input.value }],                                           // 149
      'devicePatientId': [{ 'text': this.refs.patientid.refs.input.value }]                                            // 150
    };                                                                                                                 // 147
                                                                                                                       //
    if (this.refs.active.refs.input.value === "true") {                                                                // 153
      deviceFormData.active = true;                                                                                    // 154
    } else {                                                                                                           // 155
      deviceFormData.active = false;                                                                                   // 156
    }                                                                                                                  // 157
                                                                                                                       //
    console.log("deviceFormData", deviceFormData);                                                                     // 159
                                                                                                                       //
    if (Session.get('selectedDevice')) {                                                                               // 162
      console.log("update practioner");                                                                                // 163
      //Meteor.users.insert(deviceFormData);                                                                           //
      updateDevice.call({ _id: Session.get('selectedDevice'), update: deviceFormData }, function (error) {             // 165
        if (error) {                                                                                                   // 167
          console.log("error", error);                                                                                 // 168
          Bert.alert(error.reason, 'danger');                                                                          // 169
        } else {                                                                                                       // 170
          Bert.alert('Device updated!', 'success');                                                                    // 171
          _this2.openTab(1);                                                                                           // 172
        }                                                                                                              // 173
      });                                                                                                              // 174
    } else {                                                                                                           // 175
                                                                                                                       //
      console.log("create a new device", deviceFormData);                                                              // 177
                                                                                                                       //
      //Meteor.users.insert(deviceFormData);                                                                           //
      insertDevice.call(deviceFormData, function (error) {                                                             // 180
        if (error) {                                                                                                   // 181
          Bert.alert(error.reason, 'danger');                                                                          // 182
        } else {                                                                                                       // 183
          Bert.alert('Device added!', 'success');                                                                      // 184
          _this2.openTab(1);                                                                                           // 185
        }                                                                                                              // 186
      });                                                                                                              // 187
    }                                                                                                                  // 188
  };                                                                                                                   // 189
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  DeviceDetail.prototype.handleCancelButton = function handleCancelButton() {                                          //
    console.log("handleCancelButton");                                                                                 // 193
  };                                                                                                                   // 194
                                                                                                                       //
  DeviceDetail.prototype.handleDeleteButton = function handleDeleteButton() {                                          //
    var _this3 = this;                                                                                                 // 196
                                                                                                                       //
    removeDeviceById.call({ _id: Session.get('selectedDevice') }, function (error) {                                   // 197
      if (error) {                                                                                                     // 199
        Bert.alert(error.reason, 'danger');                                                                            // 200
      } else {                                                                                                         // 201
        Bert.alert('Device deleted!', 'success');                                                                      // 202
        _this3.openTab(1);                                                                                             // 203
      }                                                                                                                // 204
    });                                                                                                                // 205
  };                                                                                                                   // 206
                                                                                                                       //
  return DeviceDetail;                                                                                                 //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(DeviceDetail));                                                               //
                                                                                                                       //
                                                                                                                       //
DeviceDetail.propTypes = {                                                                                             // 210
  hasUser: React.PropTypes.object                                                                                      // 211
};                                                                                                                     // 210
ReactMixin(DeviceDetail.prototype, ReactMeteorData);                                                                   // 213
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"DevicesDeck.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-toolbox/lib/card","react-toolbox/lib/button","react","react-mixin","/imports/ui/components/GlassCard","meteor/react-meteor-data","/imports/api/devices/methods.js","/imports/ui/components/DynamicSpacer","meteor/meteor","meteor/themeteorchef:bert",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/devices/DevicesDeck.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var removeDevice;module.import('/imports/api/devices/methods.js',{"removeDevice":function(v){removeDevice=v}});var DynamicSpacer;module.import('/imports/ui/components/DynamicSpacer',{"DynamicSpacer":function(v){DynamicSpacer=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       //
var DevicesDeck = function (_React$Component) {                                                                        //
  _inherits(DevicesDeck, _React$Component);                                                                            //
                                                                                                                       //
  function DevicesDeck() {                                                                                             //
    _classCallCheck(this, DevicesDeck);                                                                                //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  DevicesDeck.prototype.getMeteorData = function getMeteorData() {                                                     //
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 20
      style: {                                                                                                         // 21
        opacity: Session.get('globalOpacity')                                                                          // 22
      },                                                                                                               // 21
      state: {                                                                                                         // 24
        checkbox: false                                                                                                // 25
      },                                                                                                               // 24
      devices: []                                                                                                      // 27
    };                                                                                                                 // 20
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 30
      data.style.color = 'black';                                                                                      // 31
      data.style.background = 'white';                                                                                 // 32
    } else {                                                                                                           // 33
      data.style.color = 'white';                                                                                      // 34
      data.style.background = 'black';                                                                                 // 35
    }                                                                                                                  // 36
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 39
      data.style.filter = 'blur(3px)';                                                                                 // 40
      data.style.webkitFilter = 'blur(3px)';                                                                           // 41
    }                                                                                                                  // 42
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 45
      data.style.backdropFilter = 'blur(5px)';                                                                         // 46
    }                                                                                                                  // 47
                                                                                                                       //
    if (this.props.userId) {                                                                                           // 49
      if (Devices.find({ 'createdBy.reference': this.props.userId }).count() > 0) {                                    // 50
        data.devices = Devices.find({ 'createdBy.reference': this.props.userId }, { sort: { createdAt: -1 } }).fetch();
      }                                                                                                                // 52
    } else {                                                                                                           // 53
      if (Devices.find({ 'createdBy.reference': Meteor.userId() }).count() > 0) {                                      // 54
        data.devices = Devices.find({ 'createdBy.reference': Meteor.userId() }, { sort: { createdAt: -1 } }).fetch();  // 55
      }                                                                                                                // 56
    }                                                                                                                  // 57
                                                                                                                       //
    //console.log('data.devices', data.devices);                                                                       //
                                                                                                                       //
    return data;                                                                                                       // 61
  };                                                                                                                   // 62
                                                                                                                       //
  DevicesDeck.prototype.render = function render() {                                                                   //
    var self = this;                                                                                                   // 65
                                                                                                                       //
    if (!this.data.devices || this.data.devices.length == 0) {                                                         // 67
      return React.createElement(                                                                                      // 68
        'div',                                                                                                         // 69
        { className: 'devicessDeck' },                                                                                 // 69
        React.createElement(                                                                                           // 70
          CardText,                                                                                                    // 70
          null,                                                                                                        // 70
          'This patient has no devices.'                                                                               // 70
        )                                                                                                              // 70
      );                                                                                                               // 69
    } else {                                                                                                           // 75
      return React.createElement(                                                                                      // 76
        'div',                                                                                                         // 77
        { className: 'devicesDeck' },                                                                                  // 77
        this.data.devices.map(function (item, i) {                                                                     // 78
          var createdAt = '';                                                                                          // 79
          var createdBy = '';                                                                                          // 80
          var createdByAvatar = '/thumbnail-blank.png';                                                                // 81
                                                                                                                       //
          if (item.createdAt) {                                                                                        // 83
            createdAt = moment(item.createdAt).format('YYYY, MMMM Do (dddd) hh:mm a');                                 // 84
          }                                                                                                            // 85
          if (item.createdBy && item.createdBy.display) {                                                              // 86
            createdBy = item.createdBy.display;                                                                        // 87
          }                                                                                                            // 88
          if (item.createdBy && item.createdBy.avatar) {                                                               // 89
            createdByAvatar = item.createdBy.avatar;                                                                   // 90
          }                                                                                                            // 91
                                                                                                                       //
          return React.createElement(                                                                                  // 93
            'div',                                                                                                     // 94
            { className: 'deviceCard', key: i },                                                                       // 94
            React.createElement(                                                                                       // 95
              GlassCard,                                                                                               // 95
              null,                                                                                                    // 95
              React.createElement(CardTitle, {                                                                         // 96
                avatar: createdByAvatar,                                                                               // 97
                title: createdBy,                                                                                      // 98
                subtitle: createdAt                                                                                    // 99
              }),                                                                                                      // 96
              React.createElement(                                                                                     // 101
                CardText,                                                                                              // 101
                { className: 'deviceName' },                                                                           // 101
                item.deviceName                                                                                        // 102
              ),                                                                                                       // 101
              React.createElement(                                                                                     // 104
                CardText,                                                                                              // 104
                { className: 'deviceProductId' },                                                                      // 104
                item.deviceProductId                                                                                   // 105
              ),                                                                                                       // 104
              React.createElement(                                                                                     // 107
                CardText,                                                                                              // 107
                { className: 'patientId' },                                                                            // 107
                item.patientId                                                                                         // 108
              ),                                                                                                       // 107
              self.renderCardActions(i, item)                                                                          // 110
            ),                                                                                                         // 95
            React.createElement(DynamicSpacer, null)                                                                   // 112
          );                                                                                                           // 94
        })                                                                                                             // 115
      );                                                                                                               // 77
    }                                                                                                                  // 118
  };                                                                                                                   // 119
                                                                                                                       //
  // <CardActions>                                                                                                     //
  //   <Button className='editButton' label='Edit' style={{color: 'lightgray'}} />                                     //
  //   <Button className='deleteButton' onMouseUp={self.handleDeleteButton.bind(self, i, item)} label='Delete' style={{color: 'lightgray'}} />
  // </CardActions>                                                                                                    //
                                                                                                                       //
  DevicesDeck.prototype.handleDeleteButton = function handleDeleteButton(index, device) {                              //
    console.log('handleDeleteButton');                                                                                 // 128
                                                                                                                       //
    removeDevice.call({                                                                                                // 130
      _id: device._id                                                                                                  // 131
    }, function (error) {                                                                                              // 130
      if (error) {                                                                                                     // 133
        Bert.alert(error.reason, 'danger');                                                                            // 134
      } else {                                                                                                         // 135
        Bert.alert('Device removed!', 'success');                                                                      // 136
      }                                                                                                                // 137
    });                                                                                                                // 138
  };                                                                                                                   // 139
                                                                                                                       //
  DevicesDeck.prototype.renderCardActions = function renderCardActions(i, item) {                                      //
                                                                                                                       //
    // <Button className='editButton' label='Edit' style={{color: 'lightgray'}} />                                     //
                                                                                                                       //
    if (item && item.createdBy && item.createdBy.reference) {                                                          // 145
      if (item.createdBy.reference === Meteor.userId()) {                                                              // 146
        return React.createElement(                                                                                    // 147
          CardActions,                                                                                                 // 148
          null,                                                                                                        // 148
          React.createElement(Button, { className: 'deleteButton', onMouseUp: this.handleDeleteButton.bind(self, i, item), label: 'Delete', style: { color: 'lightgray' } })
        );                                                                                                             // 148
      }                                                                                                                // 152
    }                                                                                                                  // 153
  };                                                                                                                   // 154
                                                                                                                       //
  return DevicesDeck;                                                                                                  //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(DevicesDeck));                                                                //
                                                                                                                       //
                                                                                                                       //
DevicesDeck.propTypes = {};                                                                                            // 159
DevicesDeck.defaultProps = {};                                                                                         // 160
ReactMixin(DevicesDeck.prototype, ReactMeteorData);                                                                    // 161
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"forums":{"AddForumTopic.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/card","react-bootstrap","react-toolbox/lib/input","meteor/themeteorchef:bert","/imports/ui/components/GlassCard","meteor/meteor","meteor/session","/imports/api/topics/methods","/imports/api/posts/methods","react-toolbox/lib/button","react-router",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/forums/AddForumTopic.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AddForumTopic:function(){return AddForumTopic}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var CardTitle,CardText;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v}});var FormGroup;module.import('react-bootstrap',{"FormGroup":function(v){FormGroup=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var insertTopic;module.import('/imports/api/topics/methods',{"insertTopic":function(v){insertTopic=v}});var insertPost;module.import('/imports/api/posts/methods',{"insertPost":function(v){insertPost=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       //
                                                                                                                       // 14
                                                                                                                       // 15
                                                                                                                       //
                                                                                                                       // 17
                                                                                                                       // 18
                                                                                                                       //
Session.setDefault('topicName', false);                                                                                // 20
Session.setDefault('postContent', false);                                                                              // 21
                                                                                                                       //
var AddForumTopic = function (_React$Component) {                                                                      // 23
  _inherits(AddForumTopic, _React$Component);                                                                          // 23
                                                                                                                       //
  function AddForumTopic() {                                                                                           // 23
    _classCallCheck(this, AddForumTopic);                                                                              // 23
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 23
  }                                                                                                                    // 23
                                                                                                                       //
  AddForumTopic.prototype.getMeteorData = function getMeteorData() {                                                   // 23
    var data = {                                                                                                       // 25
      style: {},                                                                                                       // 26
      state: {                                                                                                         // 27
        topicName: '',                                                                                                 // 28
        postContent: ''                                                                                                // 29
      }                                                                                                                // 27
    };                                                                                                                 // 25
                                                                                                                       //
    if (Session.get('topicName')) {                                                                                    // 33
      data.state.topicName = Session.get('topicName');                                                                 // 34
    }                                                                                                                  // 35
    if (Session.get('postContent')) {                                                                                  // 36
      data.state.postContent = Session.get('postContent');                                                             // 37
    }                                                                                                                  // 38
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 42
      data.style.color = 'black';                                                                                      // 43
      data.style.background = 'white';                                                                                 // 44
    } else {                                                                                                           // 45
      data.style.color = 'white';                                                                                      // 46
      data.style.background = 'black';                                                                                 // 47
    }                                                                                                                  // 48
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 51
      data.style.filter = 'blur(3px)';                                                                                 // 52
      data.style.webkitFilter = 'blur(3px)';                                                                           // 53
    }                                                                                                                  // 54
                                                                                                                       //
    return data;                                                                                                       // 56
  };                                                                                                                   // 57
                                                                                                                       //
  AddForumTopic.prototype.handleInsertPost = function handleInsertPost() {                                             // 23
    var _this2 = this;                                                                                                 // 59
                                                                                                                       //
    console.log("handleInsertPost");                                                                                   // 61
                                                                                                                       //
    var newTopic = {                                                                                                   // 64
      name: this.refs.topicName.refs.input.value.trim(),                                                               // 65
      createdAt: new Date(),                                                                                           // 66
      createdBy: {                                                                                                     // 67
        display: Meteor.user().fullName(),                                                                             // 68
        reference: Meteor.userId()                                                                                     // 69
      }                                                                                                                // 67
    };                                                                                                                 // 64
                                                                                                                       //
    if (Meteor.user().profile && Meteor.user().profile.avatar) {                                                       // 73
      newTopic.createdBy.avatar = Meteor.user().profile.avatar;                                                        // 74
    }                                                                                                                  // 75
                                                                                                                       //
    insertTopic.call(newTopic, function (error, topicId) {                                                             // 77
      if (error) {                                                                                                     // 78
        Bert.alert(error.reason, 'danger');                                                                            // 79
      }                                                                                                                // 80
      if (topicId) {                                                                                                   // 81
        Bert.alert('Topic added!', 'success');                                                                         // 82
        console.log("topicId", topicId);                                                                               // 83
                                                                                                                       //
        var newPost = {                                                                                                // 85
          topicId: topicId,                                                                                            // 86
          title: _this2.refs.postContent.refs.input.value.trim(),                                                      // 87
          createdAt: new Date(),                                                                                       // 88
          createdBy: {                                                                                                 // 89
            display: Meteor.user().fullName(),                                                                         // 90
            reference: Meteor.userId()                                                                                 // 91
          }                                                                                                            // 89
        };                                                                                                             // 85
        if (Meteor.user().profile && Meteor.user().profile.avatar) {                                                   // 94
          newPost.createdBy.avatar = Meteor.user().profile.avatar;                                                     // 95
        }                                                                                                              // 96
                                                                                                                       //
        console.log("newPost", newPost);                                                                               // 98
                                                                                                                       //
        insertPost.call(newPost, function (error) {                                                                    // 100
          if (error) {                                                                                                 // 101
            Bert.alert(error.reason, 'danger');                                                                        // 102
          } else {                                                                                                     // 103
            Bert.alert('Post added!', 'success');                                                                      // 104
            Session.set('topicName', false);                                                                           // 105
            Session.set('postContent', false);                                                                         // 106
            browserHistory.push('/topic/' + topicId);                                                                  // 107
          }                                                                                                            // 108
        });                                                                                                            // 109
      }                                                                                                                // 110
    });                                                                                                                // 111
                                                                                                                       //
    //}                                                                                                                //
  };                                                                                                                   // 115
                                                                                                                       //
  AddForumTopic.prototype.render = function render() {                                                                 // 23
    return React.createElement(                                                                                        // 117
      GlassCard,                                                                                                       // 118
      null,                                                                                                            // 118
      React.createElement(CardTitle, {                                                                                 // 119
        title: 'New Forum Topic'                                                                                       // 120
      }),                                                                                                              // 119
      React.createElement(                                                                                             // 122
        CardText,                                                                                                      // 122
        null,                                                                                                          // 122
        React.createElement(                                                                                           // 123
          FormGroup,                                                                                                   // 123
          null,                                                                                                        // 123
          React.createElement(Input, {                                                                                 // 124
            label: 'Topic description',                                                                                // 125
            name: 'topicName',                                                                                         // 126
            ref: 'topicName',                                                                                          // 127
            type: 'textarea',                                                                                          // 128
            value: this.data.state.topicName,                                                                          // 129
            onChange: this.changeTopic.bind(this)                                                                      // 130
          }),                                                                                                          // 124
          React.createElement(Input, {                                                                                 // 132
            multiline: true,                                                                                           // 133
            label: 'Post content',                                                                                     // 134
            name: 'postContent',                                                                                       // 135
            ref: 'postContent',                                                                                        // 136
            type: 'textarea',                                                                                          // 137
            value: this.data.state.postContent,                                                                        // 138
            onChange: this.changePost.bind(this),                                                                      // 139
            rows: '5'                                                                                                  // 140
          }),                                                                                                          // 132
          React.createElement(                                                                                         // 142
            Button,                                                                                                    // 142
            { onMouseUp: this.handleInsertPost.bind(this), raised: true, primary: true },                              // 142
            'New Topic'                                                                                                // 142
          )                                                                                                            // 142
        )                                                                                                              // 123
      )                                                                                                                // 122
    );                                                                                                                 // 118
  };                                                                                                                   // 148
                                                                                                                       //
  AddForumTopic.prototype.changeTopic = function changeTopic() {                                                       // 23
    Session.set('topicName', this.refs.topicName.refs.input.value);                                                    // 151
  };                                                                                                                   // 152
                                                                                                                       //
  AddForumTopic.prototype.changePost = function changePost() {                                                         // 23
    Session.set('postContent', this.refs.postContent.refs.input.value);                                                // 155
  };                                                                                                                   // 156
                                                                                                                       //
  return AddForumTopic;                                                                                                // 23
}(React.Component);                                                                                                    // 23
                                                                                                                       //
AddForumTopic.propTypes = {};                                                                                          // 160
ReactMixin(AddForumTopic.prototype, ReactMeteorData);                                                                  // 161
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ForumTopicsTable.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-bootstrap","react-router","react-toolbox/lib/avatar","react","react-mixin","meteor/react-meteor-data","meteor/session","/imports/api/topics/topics","react-toolbox/lib/button","/imports/api/topics/methods",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/forums/ForumTopicsTable.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({ForumTopicsTable:function(){return ForumTopicsTable}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var Table;module.import('react-bootstrap',{"Table":function(v){Table=v}});var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});var Avatar;module.import('react-toolbox/lib/avatar',{"default":function(v){Avatar=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var Topics;module.import('/imports/api/topics/topics',{"Topics":function(v){Topics=v}});var IconButton;module.import('react-toolbox/lib/button',{"default":function(v){IconButton=v}});var removeTopicById;module.import('/imports/api/topics/methods',{"removeTopicById":function(v){removeTopicById=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       //
var ForumTopicsTable = function (_React$Component) {                                                                   // 14
  _inherits(ForumTopicsTable, _React$Component);                                                                       // 14
                                                                                                                       //
  function ForumTopicsTable() {                                                                                        // 14
    _classCallCheck(this, ForumTopicsTable);                                                                           // 14
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 14
  }                                                                                                                    // 14
                                                                                                                       //
  ForumTopicsTable.prototype.getMeteorData = function getMeteorData() {                                                // 14
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 20
      style: {                                                                                                         // 21
        opacity: Session.get('globalOpacity')                                                                          // 22
      },                                                                                                               // 21
      state: {                                                                                                         // 24
        isAdmin: false                                                                                                 // 25
      },                                                                                                               // 24
      selected: [],                                                                                                    // 27
      topics: []                                                                                                       // 28
    };                                                                                                                 // 20
                                                                                                                       //
    if (Meteor.user() && Meteor.user().roles && Meteor.user().roles[0] === 'admin') {                                  // 31
      data.state.isAdmin = true;                                                                                       // 32
    }                                                                                                                  // 33
                                                                                                                       //
    if (Topics.find().count() > 0) {                                                                                   // 35
      data.topics = Topics.find({}, { sort: { activity: -1 } }).map(function (record) {                                // 36
        return {                                                                                                       // 37
          _id: record._id,                                                                                             // 38
          name: record.name,                                                                                           // 39
          cateogry: record.cateogry,                                                                                   // 40
          replies: record.replies,                                                                                     // 41
          views: record.views,                                                                                         // 42
          // activity: record.activity ?  moment(record.activity).format('YYYY-MM-DD hh:mm:ss') : '',                  //
          activity: record.activity ? moment(record.activity).fromNow() : '',                                          // 44
          createdAt: moment(record.createdAt).format('YYYY-MM-DD'),                                                    // 45
          createdByAvatar: record.createdBy ? record.createdBy.avatar : '/thumbnail-blank.png',                        // 46
          photo: record.photo ? record.photo[0].url : '/thumbnail-blank.png'                                           // 47
        };                                                                                                             // 37
      });                                                                                                              // 49
    }                                                                                                                  // 50
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 52
      data.style.color = 'black';                                                                                      // 53
      data.style.background = 'white';                                                                                 // 54
    } else {                                                                                                           // 55
      data.style.color = 'white';                                                                                      // 56
      data.style.background = 'black';                                                                                 // 57
    }                                                                                                                  // 58
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 61
      data.style.filter = 'blur(3px)';                                                                                 // 62
      data.style.webkitFilter = 'blur(3px)';                                                                           // 63
    }                                                                                                                  // 64
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 67
      data.style.backdropFilter = 'blur(5px)';                                                                         // 68
    }                                                                                                                  // 69
                                                                                                                       //
    // another mixin                                                                                                   //
    if (Session.get('appWidth') > 768) {                                                                               // 72
      Session.set('hasPageVerticalPadding', true);                                                                     // 73
      Session.set('mainPanelIsCard', true);                                                                            // 74
    } else {                                                                                                           // 75
      Session.set('hasPageVerticalPadding', false);                                                                    // 76
      Session.set('mainPanelIsCard', false);                                                                           // 77
    }                                                                                                                  // 78
                                                                                                                       //
    //console.log("data", data);                                                                                       //
                                                                                                                       //
    return data;                                                                                                       // 82
  };                                                                                                                   // 83
                                                                                                                       //
  ForumTopicsTable.prototype.rowClick = function rowClick(id) {                                                        // 14
                                                                                                                       //
    //console.log('/topic/' + id);                                                                                     //
                                                                                                                       //
    browserHistory.push('/topic/' + id);                                                                               // 89
                                                                                                                       //
    // // set the user                                                                                                 //
    // Session.set('selectedPatient', id);                                                                             //
    //                                                                                                                 //
    // // set which tab is selected                                                                                    //
    // let state = Session.get('patientCardState');                                                                    //
    // state['index'] = 2;                                                                                             //
    // Session.set('patientCardState', state);                                                                         //
  };                                                                                                                   // 98
                                                                                                                       //
  ForumTopicsTable.prototype.renderAdminControls = function renderAdminControls(isAdmin, i) {                          // 14
    if (isAdmin) {                                                                                                     // 101
      return React.createElement(                                                                                      // 102
        'td',                                                                                                          // 103
        null,                                                                                                          // 103
        React.createElement(IconButton, { icon: 'clear', onClick: this.removeTopic.bind(this, this.data.topics[i]._id) })
      );                                                                                                               // 103
    }                                                                                                                  // 107
  };                                                                                                                   // 108
                                                                                                                       //
  ForumTopicsTable.prototype.renderAdminHeaders = function renderAdminHeaders(isAdmin) {                               // 14
    if (isAdmin) {                                                                                                     // 110
      return React.createElement(                                                                                      // 111
        'th',                                                                                                          // 112
        null,                                                                                                          // 112
        'Remove'                                                                                                       // 112
      );                                                                                                               // 112
    }                                                                                                                  // 114
  };                                                                                                                   // 115
                                                                                                                       //
  ForumTopicsTable.prototype.render = function render() {                                                              // 14
    var tableRows = [];                                                                                                // 118
    for (var i = 0; i < this.data.topics.length; i++) {                                                                // 119
      tableRows.push(React.createElement(                                                                              // 120
        'tr',                                                                                                          // 121
        { key: i, className: 'patientRow', style: { cursor: 'pointer' } },                                             // 121
        React.createElement(                                                                                           // 123
          'td',                                                                                                        // 123
          { onClick: this.rowClick.bind('this', this.data.topics[i]._id) },                                            // 123
          this.data.topics[i].name                                                                                     // 123
        ),                                                                                                             // 123
        React.createElement(                                                                                           // 124
          'td',                                                                                                        // 124
          { onClick: this.rowClick.bind('this', this.data.topics[i]._id) },                                            // 124
          ' ',                                                                                                         // 124
          this.data.topics[i].category                                                                                 // 124
        ),                                                                                                             // 124
        React.createElement(                                                                                           // 125
          'td',                                                                                                        // 125
          { onClick: this.rowClick.bind('this', this.data.topics[i]._id) },                                            // 125
          React.createElement(                                                                                         // 126
            Avatar,                                                                                                    // 126
            null,                                                                                                      // 126
            React.createElement('img', { src: this.data.topics[i].createdByAvatar })                                   // 126
          )                                                                                                            // 126
        ),                                                                                                             // 125
        React.createElement(                                                                                           // 129
          'td',                                                                                                        // 129
          { onClick: this.rowClick.bind('this', this.data.topics[i]._id) },                                            // 129
          this.data.topics[i].createdAt                                                                                // 129
        ),                                                                                                             // 129
        React.createElement(                                                                                           // 130
          'td',                                                                                                        // 130
          { onClick: this.rowClick.bind('this', this.data.topics[i]._id) },                                            // 130
          this.data.topics[i].replies                                                                                  // 130
        ),                                                                                                             // 130
        React.createElement(                                                                                           // 131
          'td',                                                                                                        // 131
          { onClick: this.rowClick.bind('this', this.data.topics[i]._id) },                                            // 131
          this.data.topics[i].views                                                                                    // 131
        ),                                                                                                             // 131
        React.createElement(                                                                                           // 132
          'td',                                                                                                        // 132
          { onClick: this.rowClick.bind('this', this.data.topics[i]._id) },                                            // 132
          this.data.topics[i].activity                                                                                 // 132
        ),                                                                                                             // 132
        this.renderAdminControls(this.data.state.isAdmin, i)                                                           // 133
      ));                                                                                                              // 121
    }                                                                                                                  // 136
                                                                                                                       //
    return React.createElement(                                                                                        // 138
      Table,                                                                                                           // 139
      { responses: true, hover: true },                                                                                // 139
      React.createElement(                                                                                             // 140
        'thead',                                                                                                       // 140
        null,                                                                                                          // 140
        React.createElement(                                                                                           // 141
          'tr',                                                                                                        // 141
          null,                                                                                                        // 141
          React.createElement(                                                                                         // 142
            'th',                                                                                                      // 142
            null,                                                                                                      // 142
            'Topic'                                                                                                    // 142
          ),                                                                                                           // 142
          React.createElement(                                                                                         // 143
            'th',                                                                                                      // 143
            null,                                                                                                      // 143
            'Category'                                                                                                 // 143
          ),                                                                                                           // 143
          React.createElement(                                                                                         // 144
            'th',                                                                                                      // 144
            null,                                                                                                      // 144
            'CreatedBy'                                                                                                // 144
          ),                                                                                                           // 144
          React.createElement(                                                                                         // 145
            'th',                                                                                                      // 145
            null,                                                                                                      // 145
            'Created On'                                                                                               // 145
          ),                                                                                                           // 145
          React.createElement(                                                                                         // 146
            'th',                                                                                                      // 146
            null,                                                                                                      // 146
            'Replies'                                                                                                  // 146
          ),                                                                                                           // 146
          React.createElement(                                                                                         // 147
            'th',                                                                                                      // 147
            null,                                                                                                      // 147
            'Views'                                                                                                    // 147
          ),                                                                                                           // 147
          React.createElement(                                                                                         // 148
            'th',                                                                                                      // 148
            null,                                                                                                      // 148
            'Last Activity'                                                                                            // 148
          ),                                                                                                           // 148
          this.renderAdminHeaders(this.data.state.isAdmin)                                                             // 149
        )                                                                                                              // 141
      ),                                                                                                               // 140
      React.createElement(                                                                                             // 152
        'tbody',                                                                                                       // 152
        null,                                                                                                          // 152
        tableRows                                                                                                      // 153
      )                                                                                                                // 152
    );                                                                                                                 // 139
  };                                                                                                                   // 157
                                                                                                                       //
  ForumTopicsTable.prototype.removeTopic = function removeTopic(topicId, event) {                                      // 14
    event.preventDefault();                                                                                            // 160
    console.log("removeTopic", topicId);                                                                               // 161
                                                                                                                       //
    removeTopicById.call({                                                                                             // 163
      _id: topicId                                                                                                     // 164
    }, function (error) {                                                                                              // 163
      if (error) {                                                                                                     // 166
        Bert.alert(error.reason, 'danger');                                                                            // 167
      } else {                                                                                                         // 168
        Bert.alert('Topic removed!', 'success');                                                                       // 169
      }                                                                                                                // 170
    });                                                                                                                // 171
  };                                                                                                                   // 172
                                                                                                                       //
  return ForumTopicsTable;                                                                                             // 14
}(React.Component);                                                                                                    // 14
                                                                                                                       //
ForumTopicsTable.propTypes = {};                                                                                       // 176
ForumTopicsTable.defaultProps = {};                                                                                    // 177
ReactMixin(ForumTopicsTable.prototype, ReactMeteorData);                                                               // 178
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"observations":{"ObservationDetail.js":["babel-runtime/helpers/typeof","babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/input","react-toolbox/lib/button","react-bootstrap","../../containers/documents-list.js","../../components/AddDocument.js","../../components/PageContainer","/imports/ui/components/GlassCard","react-toolbox/lib/card","react-toolbox/lib/tabs","../../workflows/observations/ObservationTable","../../../api/observations/methods","meteor/themeteorchef:bert","react-toolbox/lib/date_picker",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/observations/ObservationDetail.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof;module.import('babel-runtime/helpers/typeof',{"default":function(v){_typeof=v}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Row,Col;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v}});var DocumentsList;module.import('../../containers/documents-list.js',{"default":function(v){DocumentsList=v}});var AddDocument;module.import('../../components/AddDocument.js',{"AddDocument":function(v){AddDocument=v}});var PageContainer;module.import('../../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var ObservationTable;module.import('../../workflows/observations/ObservationTable',{"default":function(v){ObservationTable=v}});var insertObservation,updateObservation,removeObservationById;module.import('../../../api/observations/methods',{"insertObservation":function(v){insertObservation=v},"updateObservation":function(v){updateObservation=v},"removeObservationById":function(v){removeObservationById=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var DatePicker;module.import('react-toolbox/lib/date_picker',{"default":function(v){DatePicker=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
                                                                                                                       // 17
                                                                                                                       // 18
                                                                                                                       //
                                                                                                                       // 20
                                                                                                                       // 21
                                                                                                                       //
                                                                                                                       // 23
//import { DatePicker, DatePickerDialog, Calendar, CalendarDay, CalendarMonth } from 'react-toolbox/lib/date_picker';  //
                                                                                                                       //
var defaultState = false;                                                                                              // 26
                                                                                                                       //
Session.setDefault('observationDetailState', defaultState);                                                            // 28
                                                                                                                       //
var ObservationDetail = function (_React$Component) {                                                                  //
  _inherits(ObservationDetail, _React$Component);                                                                      //
                                                                                                                       //
  function ObservationDetail() {                                                                                       //
    _classCallCheck(this, ObservationDetail);                                                                          //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  ObservationDetail.prototype.getMeteorData = function getMeteorData() {                                               //
    var data = {                                                                                                       // 33
      observationId: false,                                                                                            // 34
      observation: {                                                                                                   // 35
        observationType: "",                                                                                           // 36
        observationValue: "",                                                                                          // 37
        observationUnits: "",                                                                                          // 38
        observationStatus: "",                                                                                         // 39
        patientId: ""                                                                                                  // 40
      }                                                                                                                // 35
    };                                                                                                                 // 33
                                                                                                                       //
    if (Session.get('selectedObservation')) {                                                                          // 44
      data.observationId = Session.get('selectedObservation');                                                         // 45
                                                                                                                       //
      var selectedObservation = Observations.findOne({ _id: Session.get('selectedObservation') });                     // 47
      if (selectedObservation) {                                                                                       // 48
        data.observation = {                                                                                           // 49
          id: selectedObservation._id,                                                                                 // 50
          observationType: selectedObservation.observationType,                                                        // 51
          observationValue: selectedObservation.observationValue,                                                      // 52
          observationUnits: selectedObservation.observationUnits,                                                      // 53
          observationStatus: selectedObservation.observationStatus,                                                    // 54
          patientId: selectedObservation.patientId                                                                     // 55
        };                                                                                                             // 49
      }                                                                                                                // 57
    }                                                                                                                  // 58
                                                                                                                       //
    if (Session.get('observationDetailState')) {                                                                       // 60
      data.observation = Session.get('observationDetailState');                                                        // 61
    }                                                                                                                  // 62
                                                                                                                       //
    //console.log("data", data);                                                                                       //
                                                                                                                       //
    return data;                                                                                                       // 66
  };                                                                                                                   // 67
                                                                                                                       //
  ObservationDetail.prototype.render = function render() {                                                             //
    if (this.data.observation.patientid) {                                                                             // 70
      console.log("In observationDetail with patientid " + this.data.observation.patientid);                           // 71
      return React.createElement(                                                                                      // 72
        'div',                                                                                                         // 73
        { className: 'observatonDetail' },                                                                             // 73
        React.createElement(                                                                                           // 74
          CardText,                                                                                                    // 74
          null,                                                                                                        // 74
          'Should have displayed observations for ',                                                                   // 74
          this.data.observation.patientid                                                                              // 75
        )                                                                                                              // 74
      );                                                                                                               // 73
      return React.createElement(                                                                                      // 79
        'div',                                                                                                         // 80
        { className: 'observationDetail' },                                                                            // 80
        React.createElement(                                                                                           // 81
          CardText,                                                                                                    // 81
          null,                                                                                                        // 81
          React.createElement(Input, { ref: 'patientid', type: 'text', label: 'patientid', type: 'patientid', value: this.data.observation.patientId, onChange: this.changeState.bind(this, 'patientid') }),
          React.createElement(Input, { ref: 'type', type: 'text', label: 'type', type: 'type', value: this.data.observation.observationType, onChange: this.changeState.bind(this, 'type') }),
          React.createElement(Input, { ref: 'value', type: 'text', label: 'value', type: 'value', value: this.data.observation.observationValue, onChange: this.changeState.bind(this, 'value') }),
          React.createElement(Input, { ref: 'units', type: 'text', label: 'units', type: 'units', value: this.data.observation.observationValue, onChange: this.changeState.bind(this, 'units') }),
          React.createElement(Input, { ref: 'status', type: 'text', label: 'status', type: 'status', value: this.data.observation.observationValue, onChange: this.changeState.bind(this, 'status') }),
          React.createElement(Input, { ref: 'source', type: 'text', label: 'source', type: 'source', value: this.data.observation.observationValue, onChange: this.changeState.bind(this, 'source') })
        ),                                                                                                             // 81
        React.createElement(                                                                                           // 89
          CardActions,                                                                                                 // 89
          null,                                                                                                        // 89
          this.determineButtons(this.data.observationId)                                                               // 90
        )                                                                                                              // 89
      );                                                                                                               // 80
    } else {                                                                                                           // 94
      console.log("In observationDetail with null patientid");                                                         // 95
      return React.createElement(                                                                                      // 96
        'div',                                                                                                         // 97
        { className: 'observatonDetail' },                                                                             // 97
        React.createElement(                                                                                           // 98
          CardText,                                                                                                    // 98
          null,                                                                                                        // 98
          'No observations'                                                                                            // 98
        )                                                                                                              // 98
      );                                                                                                               // 97
    }                                                                                                                  // 103
  };                                                                                                                   // 104
                                                                                                                       //
  ObservationDetail.prototype.determineButtons = function determineButtons(observationId) {                            //
    if (observationId) {                                                                                               // 106
      return React.createElement(                                                                                      // 107
        'div',                                                                                                         // 108
        null,                                                                                                          // 108
        React.createElement(Button, { label: 'Save', onClick: this.handleSaveButton.bind(this) }),                     // 109
        React.createElement(Button, { label: 'Delete', onClick: this.handleDeleteButton.bind(this) })                  // 110
      );                                                                                                               // 108
    } else {                                                                                                           // 113
      return React.createElement(Button, { label: 'Save', onClick: this.handleSaveButton.bind(this) });                // 114
    }                                                                                                                  // 117
  };                                                                                                                   // 118
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  ObservationDetail.prototype.changeState = function changeState(field, value) {                                       //
                                                                                                                       //
    //console.log("changeState", value);                                                                               //
                                                                                                                       //
    // by default, assume there's no other data and we're creating a new observation                                   //
    var observationUpdate = {                                                                                          // 125
      id: "",                                                                                                          // 126
      observationType: "",                                                                                             // 127
      observationValue: "",                                                                                            // 128
      patientId: ""                                                                                                    // 129
    };                                                                                                                 // 125
                                                                                                                       //
    // if there's an existing observation, use them                                                                    //
    if (Session.get('selectedObservation')) {                                                                          // 133
      observationUpdate = this.data.observation;                                                                       // 134
    }                                                                                                                  // 135
                                                                                                                       //
    if (_typeof(Session.get('observationDetailState')) === "object") {                                                 // 137
      observationUpdate = Session.get('observationDetailState');                                                       // 138
    }                                                                                                                  // 139
                                                                                                                       //
    observationUpdate[field] = value;                                                                                  // 141
    console.log("observationUpdate", observationUpdate);                                                               // 142
    Session.set('observationDetailState', observationUpdate);                                                          // 143
  };                                                                                                                   // 144
                                                                                                                       //
  ObservationDetail.prototype.openTab = function openTab(index) {                                                      //
    // set which tab is selected                                                                                       //
    var state = Session.get('observationCardState');                                                                   // 147
    state["index"] = index;                                                                                            // 148
    Session.set('observationCardState', state);                                                                        // 149
  };                                                                                                                   // 150
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  ObservationDetail.prototype.handleSaveButton = function handleSaveButton() {                                         //
    var _this2 = this;                                                                                                 // 153
                                                                                                                       //
    console.log("this", this);                                                                                         // 154
                                                                                                                       //
    var observationFormData = {                                                                                        // 156
      'observationType': [{ 'text': this.refs.type.refs.input.value }],                                                // 157
      'observationValue': [{ 'text': this.refs.value.refs.input.value }],                                              // 158
      'observationUnits': [{ 'text': this.refs.units.refs.input.value }],                                              // 159
      'observationStatus': [{ 'text': this.refs.status.refs.input.value }],                                            // 160
      'observationSource': [{ 'text': this.refs.source.refs.input.value }],                                            // 161
      'observationPatientId': [{ 'text': this.refs.patientid.refs.input.value }]                                       // 162
    };                                                                                                                 // 156
                                                                                                                       //
    if (this.refs.active.refs.input.value === "true") {                                                                // 165
      observationFormData.active = true;                                                                               // 166
    } else {                                                                                                           // 167
      observationFormData.active = false;                                                                              // 168
    }                                                                                                                  // 169
                                                                                                                       //
    console.log("observationFormData", observationFormData);                                                           // 171
                                                                                                                       //
    if (Session.get('selectedObservation')) {                                                                          // 174
      console.log("update practioner");                                                                                // 175
      //Meteor.users.insert(observationFormData);                                                                      //
      updateObservation.call({ _id: Session.get('selectedObservation'), update: observationFormData }, function (error) {
        if (error) {                                                                                                   // 179
          console.log("error", error);                                                                                 // 180
          Bert.alert(error.reason, 'danger');                                                                          // 181
        } else {                                                                                                       // 182
          Bert.alert('Observation updated!', 'success');                                                               // 183
          _this2.openTab(1);                                                                                           // 184
        }                                                                                                              // 185
      });                                                                                                              // 186
    } else {                                                                                                           // 187
                                                                                                                       //
      console.log("create a new observation", observationFormData);                                                    // 189
                                                                                                                       //
      //Meteor.users.insert(observationFormData);                                                                      //
      insertObservation.call(observationFormData, function (error) {                                                   // 192
        if (error) {                                                                                                   // 193
          Bert.alert(error.reason, 'danger');                                                                          // 194
        } else {                                                                                                       // 195
          Bert.alert('Observation added!', 'success');                                                                 // 196
          _this2.openTab(1);                                                                                           // 197
        }                                                                                                              // 198
      });                                                                                                              // 199
    }                                                                                                                  // 200
  };                                                                                                                   // 201
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  ObservationDetail.prototype.handleCancelButton = function handleCancelButton() {                                     //
    console.log("handleCancelButton");                                                                                 // 205
  };                                                                                                                   // 206
                                                                                                                       //
  ObservationDetail.prototype.handleDeleteButton = function handleDeleteButton() {                                     //
    var _this3 = this;                                                                                                 // 208
                                                                                                                       //
    removeObservationById.call({ _id: Session.get('selectedObservation') }, function (error) {                         // 209
      if (error) {                                                                                                     // 211
        Bert.alert(error.reason, 'danger');                                                                            // 212
      } else {                                                                                                         // 213
        Bert.alert('Observation deleted!', 'success');                                                                 // 214
        _this3.openTab(1);                                                                                             // 215
      }                                                                                                                // 216
    });                                                                                                                // 217
  };                                                                                                                   // 218
                                                                                                                       //
  return ObservationDetail;                                                                                            //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(ObservationDetail));                                                          //
                                                                                                                       //
                                                                                                                       //
ObservationDetail.propTypes = {                                                                                        // 223
  hasUser: React.PropTypes.object                                                                                      // 224
};                                                                                                                     // 223
ReactMixin(ObservationDetail.prototype, ReactMeteorData);                                                              // 226
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ObservationTable.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/app_bar","react-toolbox/lib/button","react-toolbox/lib/card","meteor/meteor","meteor/accounts-base","react-toolbox/lib/avatar","react-bootstrap",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/observations/ObservationTable.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var AppBar;module.import('react-toolbox/lib/app_bar',{"default":function(v){AppBar=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var Avatar;module.import('react-toolbox/lib/avatar',{"default":function(v){Avatar=v}});var Table;module.import('react-bootstrap',{"Table":function(v){Table=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
                                                                                                                       // 13
                                                                                                                       //
var ObservationTable = function (_React$Component) {                                                                   //
  _inherits(ObservationTable, _React$Component);                                                                       //
                                                                                                                       //
  function ObservationTable() {                                                                                        //
    _classCallCheck(this, ObservationTable);                                                                           //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  ObservationTable.prototype.getMeteorData = function getMeteorData() {                                                //
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 22
      style: {                                                                                                         // 23
        opacity: Session.get('globalOpacity')                                                                          // 24
      },                                                                                                               // 23
      selected: [],                                                                                                    // 26
      observations: Observations.find().map(function (observation) {                                                   // 27
        return {                                                                                                       // 28
          _id: observation._id,                                                                                        // 29
          observationType: observation.observationType,                                                                // 30
          observationValue: observation.observationValue,                                                              // 31
          patientId: observation.patientId,                                                                            // 32
          observationStatus: observation.observationStatus,                                                            // 33
          observationSource: observation.observationSource,                                                            // 34
          createdBy: observation.createdBy,                                                                            // 35
          createdAt: observation.createdAt                                                                             // 36
        };                                                                                                             // 28
      })                                                                                                               // 38
    };                                                                                                                 // 22
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 41
      data.style.color = "black";                                                                                      // 42
      data.style.background = "white";                                                                                 // 43
    } else {                                                                                                           // 44
      data.style.color = "white";                                                                                      // 45
      data.style.background = "black";                                                                                 // 46
    }                                                                                                                  // 47
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 50
      data.style.filter = "blur(3px)";                                                                                 // 51
      data.style.webkitFilter = "blur(3px)";                                                                           // 52
    }                                                                                                                  // 53
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 56
      data.style.backdropFilter = "blur(5px)";                                                                         // 57
    }                                                                                                                  // 58
                                                                                                                       //
    console.log("data", data);                                                                                         // 60
                                                                                                                       //
    return data;                                                                                                       // 63
  };                                                                                                                   // 64
                                                                                                                       //
  ObservationTable.prototype.handleChange = function handleChange(row, key, value) {                                   //
    var source = this.state.source;                                                                                    // 66
    source[row][key] = value;                                                                                          // 67
    this.setState({ source: source });                                                                                 // 68
  };                                                                                                                   // 69
                                                                                                                       //
  ObservationTable.prototype.handleSelect = function handleSelect(selected) {                                          //
    this.setState({ selected: selected });                                                                             // 72
  };                                                                                                                   // 73
                                                                                                                       //
  ObservationTable.prototype.getDate = function getDate() {                                                            //
    return "YYYY/MM/DD";                                                                                               // 75
  };                                                                                                                   // 76
                                                                                                                       //
  ObservationTable.prototype.noChange = function noChange() {                                                          //
    return "";                                                                                                         // 78
  };                                                                                                                   // 79
                                                                                                                       //
  ObservationTable.prototype.rowClick = function rowClick(id) {                                                        //
    // set the user                                                                                                    //
    Session.set("selectedObservation", id);                                                                            // 82
                                                                                                                       //
    // set which tab is selected                                                                                       //
    var state = Session.get('observationCardState');                                                                   // 85
    state["index"] = 2;                                                                                                // 86
    Session.set('observationCardState', state);                                                                        // 87
  };                                                                                                                   // 88
                                                                                                                       //
  ObservationTable.prototype.render = function render() {                                                              //
    var tableRows = [];                                                                                                // 90
    for (var i = 0; i < this.data.observations.length; i++) {                                                          // 91
      tableRows.push(React.createElement(                                                                              // 92
        'tr',                                                                                                          // 93
        { key: i, className: 'observationRow', style: { cursor: "pointer" }, onClick: this.rowClick.bind('this', this.data.observations[i]._id) },
        React.createElement(                                                                                           // 95
          'td',                                                                                                        // 95
          null,                                                                                                        // 95
          this.data.observations[i].observationType                                                                    // 95
        ),                                                                                                             // 95
        React.createElement(                                                                                           // 96
          'td',                                                                                                        // 96
          null,                                                                                                        // 96
          this.data.observations[i].observationValue                                                                   // 96
        ),                                                                                                             // 96
        React.createElement(                                                                                           // 97
          'td',                                                                                                        // 97
          null,                                                                                                        // 97
          this.data.observations[i].patientId                                                                          // 97
        ),                                                                                                             // 97
        React.createElement(                                                                                           // 98
          'td',                                                                                                        // 98
          null,                                                                                                        // 98
          this.data.observations[i].createdAt                                                                          // 98
        ),                                                                                                             // 98
        React.createElement(                                                                                           // 99
          'td',                                                                                                        // 99
          null,                                                                                                        // 99
          this.data.observations[i].observationStatus                                                                  // 99
        ),                                                                                                             // 99
        React.createElement(                                                                                           // 100
          'td',                                                                                                        // 100
          null,                                                                                                        // 100
          this.data.observations[i].observationSource                                                                  // 100
        ),                                                                                                             // 100
        React.createElement(                                                                                           // 101
          'td',                                                                                                        // 101
          null,                                                                                                        // 101
          React.createElement(                                                                                         // 101
            'span',                                                                                                    // 101
            { 'class': 'barcode' },                                                                                    // 101
            this.data.observations[i]._id                                                                              // 101
          )                                                                                                            // 101
        )                                                                                                              // 101
      ));                                                                                                              // 93
    }                                                                                                                  // 104
                                                                                                                       //
    return React.createElement(                                                                                        // 106
      Table,                                                                                                           // 107
      { responses: true, hover: true },                                                                                // 107
      React.createElement(                                                                                             // 108
        'thead',                                                                                                       // 108
        null,                                                                                                          // 108
        React.createElement(                                                                                           // 109
          'tr',                                                                                                        // 109
          null,                                                                                                        // 109
          React.createElement(                                                                                         // 110
            'th',                                                                                                      // 110
            null,                                                                                                      // 110
            'type'                                                                                                     // 110
          ),                                                                                                           // 110
          React.createElement(                                                                                         // 111
            'th',                                                                                                      // 111
            null,                                                                                                      // 111
            'value'                                                                                                    // 111
          ),                                                                                                           // 111
          React.createElement(                                                                                         // 112
            'th',                                                                                                      // 112
            null,                                                                                                      // 112
            'patientId'                                                                                                // 112
          ),                                                                                                           // 112
          React.createElement(                                                                                         // 113
            'th',                                                                                                      // 113
            null,                                                                                                      // 113
            'time'                                                                                                     // 113
          ),                                                                                                           // 113
          React.createElement(                                                                                         // 114
            'th',                                                                                                      // 114
            null,                                                                                                      // 114
            'status'                                                                                                   // 114
          ),                                                                                                           // 114
          React.createElement(                                                                                         // 115
            'th',                                                                                                      // 115
            null,                                                                                                      // 115
            'source'                                                                                                   // 115
          ),                                                                                                           // 115
          React.createElement(                                                                                         // 116
            'th',                                                                                                      // 116
            null,                                                                                                      // 116
            '_id'                                                                                                      // 116
          )                                                                                                            // 116
        )                                                                                                              // 109
      ),                                                                                                               // 108
      React.createElement(                                                                                             // 119
        'tbody',                                                                                                       // 119
        null,                                                                                                          // 119
        tableRows                                                                                                      // 120
      )                                                                                                                // 119
    );                                                                                                                 // 107
  };                                                                                                                   // 124
                                                                                                                       //
  return ObservationTable;                                                                                             //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(ObservationTable));                                                           //
                                                                                                                       //
                                                                                                                       //
ObservationTable.propTypes = {};                                                                                       // 128
ReactMixin(ObservationTable.prototype, ReactMeteorData);                                                               // 129
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ObservationsDeck.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-toolbox/lib/card","react-toolbox/lib/button","react","react-mixin","/imports/ui/components/GlassCard","meteor/react-meteor-data","/imports/api/observations/observations.js","/imports/api/observations/methods.js","/imports/ui/components/DynamicSpacer","meteor/meteor","meteor/themeteorchef:bert",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/observations/ObservationsDeck.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Observations;module.import('/imports/api/observations/observations.js',{"Observations":function(v){Observations=v}});var removeObservation;module.import('/imports/api/observations/methods.js',{"removeObservation":function(v){removeObservation=v}});var DynamicSpacer;module.import('/imports/ui/components/DynamicSpacer',{"DynamicSpacer":function(v){DynamicSpacer=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
var ObservationsDeck = function (_React$Component) {                                                                   //
  _inherits(ObservationsDeck, _React$Component);                                                                       //
                                                                                                                       //
  function ObservationsDeck() {                                                                                        //
    _classCallCheck(this, ObservationsDeck);                                                                           //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  ObservationsDeck.prototype.getMeteorData = function getMeteorData() {                                                //
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 21
      style: {                                                                                                         // 22
        opacity: Session.get('globalOpacity')                                                                          // 23
      },                                                                                                               // 22
      state: {                                                                                                         // 25
        checkbox: false                                                                                                // 26
      },                                                                                                               // 25
      observations: []                                                                                                 // 28
    };                                                                                                                 // 21
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 31
      data.style.color = 'black';                                                                                      // 32
      data.style.background = 'white';                                                                                 // 33
    } else {                                                                                                           // 34
      data.style.color = 'white';                                                                                      // 35
      data.style.background = 'black';                                                                                 // 36
    }                                                                                                                  // 37
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 40
      data.style.filter = 'blur(3px)';                                                                                 // 41
      data.style.webkitFilter = 'blur(3px)';                                                                           // 42
    }                                                                                                                  // 43
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 46
      data.style.backdropFilter = 'blur(5px)';                                                                         // 47
    }                                                                                                                  // 48
                                                                                                                       //
    if (this.props.userId) {                                                                                           // 50
      if (Observations.find({ 'patientId.reference': this.props.userId }).count() > 0) {                               // 51
        data.observations = Observations.find({ 'patientId.reference': this.props.userId }, { sort: { createdAt: -1 } }).fetch();
      }                                                                                                                // 53
    } else {                                                                                                           // 54
      if (Observations.find({ 'patientId.reference': Meteor.userId() }).count() > 0) {                                 // 55
        data.observations = Observations.find({ 'patientId.reference': Meteor.userId() }, { sort: { createdAt: -1 } }).fetch();
      }                                                                                                                // 57
    }                                                                                                                  // 58
                                                                                                                       //
    //console.log('data.observations', data.observations);                                                             //
                                                                                                                       //
    return data;                                                                                                       // 62
  };                                                                                                                   // 63
                                                                                                                       //
  ObservationsDeck.prototype.render = function render() {                                                              //
    var self = this;                                                                                                   // 66
    if (!this.data.observations || this.data.observations.length == 0) {                                               // 67
      return React.createElement(                                                                                      // 68
        'div',                                                                                                         // 69
        { className: 'observatonsDeck' },                                                                              // 69
        React.createElement(                                                                                           // 70
          CardText,                                                                                                    // 70
          null,                                                                                                        // 70
          'This patient has no observations.'                                                                          // 70
        )                                                                                                              // 70
      );                                                                                                               // 69
    } else {                                                                                                           // 75
      return React.createElement(                                                                                      // 76
        'div',                                                                                                         // 77
        { className: 'observationsDeck' },                                                                             // 77
        this.data.observations.map(function (item, i) {                                                                // 78
          var createdAt = '';                                                                                          // 79
          var patientId = '';                                                                                          // 80
          var patientIdAvatar = '/thumbnail-blank.png';                                                                // 81
                                                                                                                       //
          if (item.createdAt) {                                                                                        // 83
            createdAt = moment(item.createdAt).format('YYYY, MMMM Do (dddd) hh:mm a');                                 // 84
          }                                                                                                            // 85
          if (item.patientId && item.patientId.display) {                                                              // 86
            patientId = item.patientId.display;                                                                        // 87
          }                                                                                                            // 88
          if (item.patientId && item.patientId.avatar) {                                                               // 89
            patientIdAvatar = item.patientId.avatar;                                                                   // 90
          }                                                                                                            // 91
          return React.createElement(                                                                                  // 92
            'div',                                                                                                     // 93
            { className: 'observationCard', key: i },                                                                  // 93
            React.createElement(                                                                                       // 94
              GlassCard,                                                                                               // 94
              null,                                                                                                    // 94
              React.createElement(CardTitle, {                                                                         // 95
                avatar: patientIdAvatar,                                                                               // 96
                title: patientId,                                                                                      // 97
                subtitle: createdAt                                                                                    // 98
              }),                                                                                                      // 95
              React.createElement(                                                                                     // 100
                CardText,                                                                                              // 100
                { className: 'observationValue' },                                                                     // 100
                item.observationValue                                                                                  // 101
              ),                                                                                                       // 100
              self.renderCardActions(i, item)                                                                          // 103
            ),                                                                                                         // 94
            React.createElement(DynamicSpacer, null)                                                                   // 105
          );                                                                                                           // 93
        })                                                                                                             // 108
      );                                                                                                               // 77
    }                                                                                                                  // 111
  };                                                                                                                   // 112
                                                                                                                       //
  // <CardActions>                                                                                                     //
  //   <Button className='editButton' label='Edit' style={{color: 'lightgray'}} />                                     //
  //   <Button className='deleteButton' onMouseUp={self.handleDeleteButton.bind(self, i, item)} label='Delete' style={{color: 'lightgray'}} />
  // </CardActions>                                                                                                    //
                                                                                                                       //
  ObservationsDeck.prototype.handleDeleteButton = function handleDeleteButton(index, observation) {                    //
    console.log('handleDeleteButton');                                                                                 // 121
                                                                                                                       //
    removeObservation.call({                                                                                           // 123
      _id: observation._id                                                                                             // 124
    }, function (error) {                                                                                              // 123
      if (error) {                                                                                                     // 126
        Bert.alert(error.reason, 'danger');                                                                            // 127
      } else {                                                                                                         // 128
        Bert.alert('Observation removed!', 'success');                                                                 // 129
      }                                                                                                                // 130
    });                                                                                                                // 131
  };                                                                                                                   // 132
                                                                                                                       //
  ObservationsDeck.prototype.renderCardActions = function renderCardActions(i, item) {                                 //
                                                                                                                       //
    // <Button className='editButton' label='Edit' style={{color: 'lightgray'}} />                                     //
                                                                                                                       //
    if (item && item.patientId && item.patientId.reference) {                                                          // 138
      if (item.patientId.reference === Meteor.userId()) {                                                              // 139
        return React.createElement(                                                                                    // 140
          CardActions,                                                                                                 // 141
          null,                                                                                                        // 141
          React.createElement(Button, { className: 'deleteButton', onMouseUp: this.handleDeleteButton.bind(self, i, item), label: 'Delete', style: { color: 'lightgray' } })
        );                                                                                                             // 141
      }                                                                                                                // 145
    }                                                                                                                  // 146
  };                                                                                                                   // 147
                                                                                                                       //
  return ObservationsDeck;                                                                                             //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(ObservationsDeck));                                                           //
                                                                                                                       //
                                                                                                                       //
ObservationsDeck.propTypes = {};                                                                                       // 152
ObservationsDeck.defaultProps = {};                                                                                    // 153
ReactMixin(ObservationsDeck.prototype, ReactMeteorData);                                                               // 154
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"patients":{"PatientDetail.js":["babel-runtime/helpers/typeof","babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/input","react-toolbox/lib/button","react-bootstrap","../../containers/documents-list.js","../../components/AddDocument.js","../../components/PageContainer","/imports/ui/components/GlassCard","react-toolbox/lib/card","react-toolbox/lib/tabs","../../workflows/patients/PatientTable","../../../api/patients/methods","meteor/themeteorchef:bert","react-toolbox/lib/date_picker",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/patients/PatientDetail.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof;module.import('babel-runtime/helpers/typeof',{"default":function(v){_typeof=v}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Row,Col;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v}});var DocumentsList;module.import('../../containers/documents-list.js',{"default":function(v){DocumentsList=v}});var AddDocument;module.import('../../components/AddDocument.js',{"AddDocument":function(v){AddDocument=v}});var PageContainer;module.import('../../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var PatientTable;module.import('../../workflows/patients/PatientTable',{"default":function(v){PatientTable=v}});var insertPatient,updatePatient,removePatientById;module.import('../../../api/patients/methods',{"insertPatient":function(v){insertPatient=v},"updatePatient":function(v){updatePatient=v},"removePatientById":function(v){removePatientById=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var DatePicker;module.import('react-toolbox/lib/date_picker',{"default":function(v){DatePicker=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
                                                                                                                       // 17
                                                                                                                       // 18
                                                                                                                       //
                                                                                                                       // 20
                                                                                                                       // 21
                                                                                                                       //
                                                                                                                       // 23
//import { DatePicker, DatePickerDialog, Calendar, CalendarDay, CalendarMonth } from 'react-toolbox/lib/date_picker';  //
                                                                                                                       //
var defaultState = false;                                                                                              // 26
                                                                                                                       //
Session.setDefault('patientDetailState', defaultState);                                                                // 28
                                                                                                                       //
var PatientDetail = function (_React$Component) {                                                                      //
  _inherits(PatientDetail, _React$Component);                                                                          //
                                                                                                                       //
  function PatientDetail() {                                                                                           //
    _classCallCheck(this, PatientDetail);                                                                              //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  PatientDetail.prototype.getMeteorData = function getMeteorData() {                                                   //
    var data = {                                                                                                       // 33
      patientId: false,                                                                                                // 34
      patient: {                                                                                                       // 35
        id: "",                                                                                                        // 36
        name: "",                                                                                                      // 37
        gender: "",                                                                                                    // 38
        active: true,                                                                                                  // 39
        birthdate: new Date(),                                                                                         // 40
        photo: ""                                                                                                      // 41
      }                                                                                                                // 35
    };                                                                                                                 // 33
                                                                                                                       //
    if (Session.get('selectedPatient')) {                                                                              // 45
      data.patientId = Session.get('selectedPatient');                                                                 // 46
                                                                                                                       //
      var selectedPatient = Patients.findOne({ _id: Session.get('selectedPatient') });                                 // 48
      if (selectedPatient) {                                                                                           // 49
        data.patient = {                                                                                               // 50
          id: selectedPatient._id,                                                                                     // 51
          birthdate: new Date(moment(selectedPatient.birthdate)),                                                      // 52
          gender: selectedPatient.gender,                                                                              // 53
          active: selectedPatient.active.toString(),                                                                   // 54
          photo: selectedPatient.photo ? selectedPatient.photo[0].url : "",                                            // 55
          name: selectedPatient.name ? selectedPatient.name[0].text : ""                                               // 56
        };                                                                                                             // 50
      }                                                                                                                // 58
    }                                                                                                                  // 59
                                                                                                                       //
    if (Session.get('patientDetailState')) {                                                                           // 61
      data.patient = Session.get('patientDetailState');                                                                // 62
    }                                                                                                                  // 63
                                                                                                                       //
    //console.log("data", data);                                                                                       //
                                                                                                                       //
    return data;                                                                                                       // 67
  };                                                                                                                   // 68
                                                                                                                       //
  PatientDetail.prototype.render = function render() {                                                                 //
    return React.createElement(                                                                                        // 71
      'div',                                                                                                           // 72
      { className: 'patientDetail' },                                                                                  // 72
      React.createElement(                                                                                             // 73
        CardText,                                                                                                      // 73
        null,                                                                                                          // 73
        React.createElement(Input, { ref: 'name', type: 'text', label: 'name', name: 'name', value: this.data.patient.name, onChange: this.changeState.bind(this, 'name') }),
        React.createElement(Input, { ref: 'active', type: 'text', label: 'active', name: 'active', value: this.data.patient.active, onChange: this.changeState.bind(this, 'active') }),
        React.createElement(Input, { ref: 'gender', type: 'text', label: 'gender', name: 'gender', value: this.data.patient.gender, onChange: this.changeState.bind(this, 'gender') }),
        React.createElement(Input, { ref: 'photo', type: 'text', label: 'photo', name: 'photo', value: this.data.patient.photo, onChange: this.changeState.bind(this, 'photo') }),
        React.createElement(DatePicker, { ref: 'birthdate', label: 'birthdate', name: 'birthdate', value: this.data.patient.birthdate, onChange: this.changeState.bind(this, 'birthdate') })
      ),                                                                                                               // 73
      React.createElement(                                                                                             // 80
        CardActions,                                                                                                   // 80
        null,                                                                                                          // 80
        this.determineButtons(this.data.patientId)                                                                     // 81
      )                                                                                                                // 80
    );                                                                                                                 // 72
  };                                                                                                                   // 85
                                                                                                                       //
  PatientDetail.prototype.determineButtons = function determineButtons(patientId) {                                    //
    if (patientId) {                                                                                                   // 87
      return React.createElement(                                                                                      // 88
        'div',                                                                                                         // 89
        null,                                                                                                          // 89
        React.createElement(Button, { label: 'Save', onClick: this.handleSaveButton.bind(this) }),                     // 90
        React.createElement(Button, { label: 'Delete', onClick: this.handleDeleteButton.bind(this) })                  // 91
      );                                                                                                               // 89
    } else {                                                                                                           // 94
      return React.createElement(Button, { label: 'Save', onClick: this.handleSaveButton.bind(this) });                // 95
    }                                                                                                                  // 98
  };                                                                                                                   // 99
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PatientDetail.prototype.changeState = function changeState(field, value) {                                           //
                                                                                                                       //
    //console.log("changeState", value);                                                                               //
                                                                                                                       //
    // by default, assume there's no other data and we're creating a new patient                                       //
    var patientUpdate = {                                                                                              // 106
      id: "",                                                                                                          // 107
      birthdate: new Date(),                                                                                           // 108
      gender: "",                                                                                                      // 109
      active: true,                                                                                                    // 110
      name: "",                                                                                                        // 111
      photo: ""                                                                                                        // 112
    };                                                                                                                 // 106
                                                                                                                       //
    // if there's an existing patient, use them                                                                        //
    if (Session.get('selectedPatient')) {                                                                              // 116
      patientUpdate = this.data.patient;                                                                               // 117
    }                                                                                                                  // 118
                                                                                                                       //
    if (_typeof(Session.get('patientDetailState')) === "object") {                                                     // 120
      patientUpdate = Session.get('patientDetailState');                                                               // 121
    }                                                                                                                  // 122
    // if (field === "birthdate") {                                                                                    //
    //   patientUpdate[field] = new Date(value);                                                                       //
    // } else {                                                                                                        //
    //   patientUpdate[field] = value;                                                                                 //
    // }                                                                                                               //
    patientUpdate[field] = value;                                                                                      // 128
                                                                                                                       //
    console.log("patientUpdate", patientUpdate);                                                                       // 130
                                                                                                                       //
    Session.set('patientDetailState', patientUpdate);                                                                  // 132
  };                                                                                                                   // 133
                                                                                                                       //
  PatientDetail.prototype.openTab = function openTab(index) {                                                          //
    // set which tab is selected                                                                                       //
    var state = Session.get('patientCardState');                                                                       // 136
    state["index"] = index;                                                                                            // 137
    Session.set('patientCardState', state);                                                                            // 138
  };                                                                                                                   // 139
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PatientDetail.prototype.handleSaveButton = function handleSaveButton() {                                             //
    var _this2 = this;                                                                                                 // 142
                                                                                                                       //
    console.log("this", this);                                                                                         // 143
                                                                                                                       //
    var patientFormData = {                                                                                            // 145
      'name': [{                                                                                                       // 146
        'text': this.refs.name.refs.input.value                                                                        // 147
      }],                                                                                                              // 146
      'birthdate': this.refs.birthdate.props.value,                                                                    // 149
      'gender': this.refs.gender.refs.input.value,                                                                     // 150
      'photo': [{                                                                                                      // 151
        url: this.refs.photo.refs.input.value                                                                          // 152
      }]                                                                                                               // 151
    };                                                                                                                 // 145
                                                                                                                       //
    if (this.refs.active.refs.input.value === "true") {                                                                // 156
      patientFormData.active = true;                                                                                   // 157
    } else {                                                                                                           // 158
      patientFormData.active = false;                                                                                  // 159
    }                                                                                                                  // 160
                                                                                                                       //
    console.log("patientFormData", patientFormData);                                                                   // 162
                                                                                                                       //
    if (Session.get('selectedPatient')) {                                                                              // 165
      console.log("update practioner");                                                                                // 166
      //Meteor.users.insert(patientFormData);                                                                          //
      updatePatient.call({ _id: Session.get('selectedPatient'), update: patientFormData }, function (error) {          // 168
        if (error) {                                                                                                   // 170
          console.log("error", error);                                                                                 // 171
          Bert.alert(error.reason, 'danger');                                                                          // 172
        } else {                                                                                                       // 173
          Bert.alert('Patient updated!', 'success');                                                                   // 174
          _this2.openTab(1);                                                                                           // 175
        }                                                                                                              // 176
      });                                                                                                              // 177
    } else {                                                                                                           // 178
                                                                                                                       //
      console.log("create a new patient", patientFormData);                                                            // 180
                                                                                                                       //
      //Meteor.users.insert(patientFormData);                                                                          //
      insertPatient.call(patientFormData, function (error) {                                                           // 183
        if (error) {                                                                                                   // 184
          Bert.alert(error.reason, 'danger');                                                                          // 185
        } else {                                                                                                       // 186
          Bert.alert('Patient added!', 'success');                                                                     // 187
          _this2.openTab(1);                                                                                           // 188
        }                                                                                                              // 189
      });                                                                                                              // 190
    }                                                                                                                  // 191
  };                                                                                                                   // 192
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PatientDetail.prototype.handleCancelButton = function handleCancelButton() {                                         //
    console.log("handleCancelButton");                                                                                 // 196
  };                                                                                                                   // 197
                                                                                                                       //
  PatientDetail.prototype.handleDeleteButton = function handleDeleteButton() {                                         //
    var _this3 = this;                                                                                                 // 198
                                                                                                                       //
    removePatientById.call({ _id: Session.get('selectedPatient') }, function (error) {                                 // 199
      if (error) {                                                                                                     // 201
        Bert.alert(error.reason, 'danger');                                                                            // 202
      } else {                                                                                                         // 203
        Bert.alert('Patient deleted!', 'success');                                                                     // 204
        _this3.openTab(1);                                                                                             // 205
      }                                                                                                                // 206
    });                                                                                                                // 207
  };                                                                                                                   // 208
                                                                                                                       //
  return PatientDetail;                                                                                                //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(PatientDetail));                                                              //
                                                                                                                       //
                                                                                                                       //
PatientDetail.propTypes = {                                                                                            // 213
  hasUser: React.PropTypes.object                                                                                      // 214
};                                                                                                                     // 213
ReactMixin(PatientDetail.prototype, ReactMeteorData);                                                                  // 216
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PatientTable.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/app_bar","react-toolbox/lib/button","react-toolbox/lib/card","meteor/meteor","meteor/accounts-base","react-toolbox/lib/avatar","react-bootstrap",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/patients/PatientTable.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var AppBar;module.import('react-toolbox/lib/app_bar',{"default":function(v){AppBar=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var Avatar;module.import('react-toolbox/lib/avatar',{"default":function(v){Avatar=v}});var Table;module.import('react-bootstrap',{"Table":function(v){Table=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
                                                                                                                       // 13
                                                                                                                       //
// const PatientModel = {                                                                                              //
//   _id: {type: String};                                                                                              //
//   active: {type: Boolean},                                                                                          //
//   birthdate: {type: Date},                                                                                          //
//   gender: {type: String},                                                                                           //
//   name: {type: String},                                                                                             //
//   photo: {type: String}                                                                                             //
// };                                                                                                                  //
                                                                                                                       //
// const users = [                                                                                                     //
//   {name: 'Javi Jimenez', twitter: '@soyjavi', birthdate: new Date(1980, 3, 11), cats: 1},                           //
//   {name: 'Javi Velasco', twitter: '@javivelasco', birthdate: new Date(1987, 1, 1), dogs: 1, active: true},          //
//   {name: 'Jane Doe', twitter: '@jdoe', birthdate: new Date(1951, 1, 1), cats: 2, active: true},                     //
//   {name: 'John Doe', twitter: '@johndoe', birthdate: new Date(1950, 1, 1), cats: 2, active: true}                   //
// ];                                                                                                                  //
                                                                                                                       //
var PatientTable = function (_React$Component) {                                                                       //
  _inherits(PatientTable, _React$Component);                                                                           //
                                                                                                                       //
  function PatientTable() {                                                                                            //
    _classCallCheck(this, PatientTable);                                                                               //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  PatientTable.prototype.getMeteorData = function getMeteorData() {                                                    //
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 39
      style: {                                                                                                         // 40
        opacity: Session.get('globalOpacity')                                                                          // 41
      },                                                                                                               // 40
      selected: [],                                                                                                    // 43
      patients: Patients.find().map(function (person) {                                                                // 44
        return {                                                                                                       // 45
          _id: person._id,                                                                                             // 46
          active: person.active.toString(),                                                                            // 47
          gender: person.gender,                                                                                       // 48
          name: person.name ? person.name[0].text : "",                                                                // 49
          birthdate: moment(person.birthDate).format("YYYY-MM-DD"),                                                    // 50
          photo: person.photo ? person.photo[0].url : ""                                                               // 51
        };                                                                                                             // 45
      })                                                                                                               // 53
    };                                                                                                                 // 39
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 56
      data.style.color = "black";                                                                                      // 57
      data.style.background = "white";                                                                                 // 58
    } else {                                                                                                           // 59
      data.style.color = "white";                                                                                      // 60
      data.style.background = "black";                                                                                 // 61
    }                                                                                                                  // 62
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 65
      data.style.filter = "blur(3px)";                                                                                 // 66
      data.style.webkitFilter = "blur(3px)";                                                                           // 67
    }                                                                                                                  // 68
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 71
      data.style.backdropFilter = "blur(5px)";                                                                         // 72
    }                                                                                                                  // 73
                                                                                                                       //
    console.log("data", data);                                                                                         // 75
                                                                                                                       //
    return data;                                                                                                       // 78
  };                                                                                                                   // 79
                                                                                                                       //
  PatientTable.prototype.handleChange = function handleChange(row, key, value) {                                       //
    var source = this.state.source;                                                                                    // 81
    source[row][key] = value;                                                                                          // 82
    this.setState({ source: source });                                                                                 // 83
  };                                                                                                                   // 84
                                                                                                                       //
  PatientTable.prototype.handleSelect = function handleSelect(selected) {                                              //
    this.setState({ selected: selected });                                                                             // 87
  };                                                                                                                   // 88
                                                                                                                       //
  PatientTable.prototype.getDate = function getDate() {                                                                //
    return "YYYY/MM/DD";                                                                                               // 90
  };                                                                                                                   // 91
                                                                                                                       //
  PatientTable.prototype.noChange = function noChange() {                                                              //
    return "";                                                                                                         // 93
  };                                                                                                                   // 94
                                                                                                                       //
  PatientTable.prototype.rowClick = function rowClick(id) {                                                            //
    // set the user                                                                                                    //
    Session.set("selectedPatient", id);                                                                                // 97
                                                                                                                       //
    // set which tab is selected                                                                                       //
    var state = Session.get('patientCardState');                                                                       // 100
    state["index"] = 2;                                                                                                // 101
    Session.set('patientCardState', state);                                                                            // 102
  };                                                                                                                   // 103
                                                                                                                       //
  PatientTable.prototype.render = function render() {                                                                  //
    var tableRows = [];                                                                                                // 105
    for (var i = 0; i < this.data.patients.length; i++) {                                                              // 106
      tableRows.push(React.createElement(                                                                              // 107
        'tr',                                                                                                          // 108
        { key: i, className: 'patientRow', style: { cursor: "pointer" }, onClick: this.rowClick.bind('this', this.data.patients[i]._id) },
        React.createElement(                                                                                           // 110
          'td',                                                                                                        // 110
          null,                                                                                                        // 110
          React.createElement(                                                                                         // 111
            Avatar,                                                                                                    // 111
            null,                                                                                                      // 111
            React.createElement('img', { src: this.data.patients[i].photo })                                           // 111
          )                                                                                                            // 111
        ),                                                                                                             // 110
        React.createElement(                                                                                           // 114
          'td',                                                                                                        // 114
          null,                                                                                                        // 114
          this.data.patients[i].name                                                                                   // 114
        ),                                                                                                             // 114
        React.createElement(                                                                                           // 115
          'td',                                                                                                        // 115
          null,                                                                                                        // 115
          this.data.patients[i].gender                                                                                 // 115
        ),                                                                                                             // 115
        React.createElement(                                                                                           // 116
          'td',                                                                                                        // 116
          null,                                                                                                        // 116
          this.data.patients[i].birthdate                                                                              // 116
        ),                                                                                                             // 116
        React.createElement(                                                                                           // 117
          'td',                                                                                                        // 117
          null,                                                                                                        // 117
          this.data.patients[i].active                                                                                 // 117
        ),                                                                                                             // 117
        React.createElement(                                                                                           // 118
          'td',                                                                                                        // 118
          null,                                                                                                        // 118
          React.createElement(                                                                                         // 118
            'span',                                                                                                    // 118
            { 'class': 'barcode' },                                                                                    // 118
            this.data.patients[i]._id                                                                                  // 118
          )                                                                                                            // 118
        )                                                                                                              // 118
      ));                                                                                                              // 108
    }                                                                                                                  // 121
                                                                                                                       //
    return React.createElement(                                                                                        // 124
      Table,                                                                                                           // 125
      { responses: true, hover: true },                                                                                // 125
      React.createElement(                                                                                             // 126
        'thead',                                                                                                       // 126
        null,                                                                                                          // 126
        React.createElement(                                                                                           // 127
          'tr',                                                                                                        // 127
          null,                                                                                                        // 127
          React.createElement(                                                                                         // 128
            'th',                                                                                                      // 128
            null,                                                                                                      // 128
            'photo'                                                                                                    // 128
          ),                                                                                                           // 128
          React.createElement(                                                                                         // 129
            'th',                                                                                                      // 129
            null,                                                                                                      // 129
            'name'                                                                                                     // 129
          ),                                                                                                           // 129
          React.createElement(                                                                                         // 130
            'th',                                                                                                      // 130
            null,                                                                                                      // 130
            'gender'                                                                                                   // 130
          ),                                                                                                           // 130
          React.createElement(                                                                                         // 131
            'th',                                                                                                      // 131
            null,                                                                                                      // 131
            'birthdate'                                                                                                // 131
          ),                                                                                                           // 131
          React.createElement(                                                                                         // 132
            'th',                                                                                                      // 132
            null,                                                                                                      // 132
            'active'                                                                                                   // 132
          ),                                                                                                           // 132
          React.createElement(                                                                                         // 133
            'th',                                                                                                      // 133
            null,                                                                                                      // 133
            '_id'                                                                                                      // 133
          )                                                                                                            // 133
        )                                                                                                              // 127
      ),                                                                                                               // 126
      React.createElement(                                                                                             // 136
        'tbody',                                                                                                       // 136
        null,                                                                                                          // 136
        tableRows                                                                                                      // 137
      )                                                                                                                // 136
    );                                                                                                                 // 125
    // return(                                                                                                         //
    //   <Table                                                                                                        //
    //     model={PatientModel}                                                                                        //
    //     onChange={this.handleChange}                                                                                //
    //     onSelect={this.handleSelect}                                                                                //
    //     selectable                                                                                                  //
    //     selected={this.data.selected}                                                                               //
    //     source={this.data.source}                                                                                   //
    //     onChange={this.noChange}                                                                                    //
    //   />                                                                                                            //
    // );                                                                                                              //
  };                                                                                                                   // 153
                                                                                                                       //
  return PatientTable;                                                                                                 //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(PatientTable));                                                               //
                                                                                                                       //
                                                                                                                       //
PatientTable.propTypes = {};                                                                                           // 157
ReactMixin(PatientTable.prototype, ReactMeteorData);                                                                   // 158
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"posts":{"AddPost.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-bootstrap","react-toolbox/lib/card","react-toolbox/lib/input","/imports/api/posts/methods","/imports/ui/components/GlassCard","react-toolbox/lib/button","react-router","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/posts/AddPost.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AddPost:function(){return AddPost}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var FormGroup,FormControl;module.import('react-bootstrap',{"FormGroup":function(v){FormGroup=v},"FormControl":function(v){FormControl=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var insertPost;module.import('/imports/api/posts/methods',{"insertPost":function(v){insertPost=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       //
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       //
                                                                                                                       // 14
                                                                                                                       //
Session.setDefault('weblogPostContent', false);                                                                        // 16
var AddPost = function (_React$Component) {                                                                            // 17
  _inherits(AddPost, _React$Component);                                                                                // 17
                                                                                                                       //
  function AddPost() {                                                                                                 // 17
    _classCallCheck(this, AddPost);                                                                                    // 17
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 17
  }                                                                                                                    // 17
                                                                                                                       //
  AddPost.prototype.getMeteorData = function getMeteorData() {                                                         // 17
    var data = {                                                                                                       // 19
      style: {},                                                                                                       // 20
      state: {                                                                                                         // 21
        weblogPostContent: ''                                                                                          // 22
      }                                                                                                                // 21
    };                                                                                                                 // 19
                                                                                                                       //
    if (Session.get('weblogPostContent')) {                                                                            // 26
      data.state.weblogPostContent = Session.get('weblogPostContent');                                                 // 27
    }                                                                                                                  // 28
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 32
      data.style.color = 'black';                                                                                      // 33
      data.style.background = 'white';                                                                                 // 34
    } else {                                                                                                           // 35
      data.style.color = 'white';                                                                                      // 36
      data.style.background = 'black';                                                                                 // 37
    }                                                                                                                  // 38
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 41
      data.style.filter = 'blur(3px)';                                                                                 // 42
      data.style.webkitFilter = 'blur(3px)';                                                                           // 43
    }                                                                                                                  // 44
                                                                                                                       //
    return data;                                                                                                       // 46
  };                                                                                                                   // 47
                                                                                                                       //
  AddPost.prototype.render = function render() {                                                                       // 17
    return React.createElement(                                                                                        // 49
      GlassCard,                                                                                                       // 50
      { id: 'addPostCard' },                                                                                           // 50
      React.createElement(CardTitle, {                                                                                 // 51
        title: 'Weblog'                                                                                                // 52
      }),                                                                                                              // 51
      React.createElement(                                                                                             // 54
        CardText,                                                                                                      // 54
        null,                                                                                                          // 54
        React.createElement(Input, {                                                                                   // 55
          multiline: true,                                                                                             // 56
          rows: '5',                                                                                                   // 57
          name: 'weblogPostContent',                                                                                   // 58
          ref: 'weblogPostContent',                                                                                    // 59
          type: 'textarea',                                                                                            // 60
          value: this.data.state.weblogPostContent,                                                                    // 61
          onChange: this.changePost.bind(this),                                                                        // 62
          placeholder: 'Type some text and press enter to create a post...'                                            // 63
        }),                                                                                                            // 55
        React.createElement(                                                                                           // 65
          Button,                                                                                                      // 65
          { id: 'addPostButton', onMouseUp: this.handleInsertPost.bind(this), raised: true, primary: true },           // 65
          'New Post'                                                                                                   // 65
        )                                                                                                              // 65
      )                                                                                                                // 54
    );                                                                                                                 // 50
  };                                                                                                                   // 69
                                                                                                                       //
  AddPost.prototype.handleInsertPost = function handleInsertPost() {                                                   // 17
    var newPost = {                                                                                                    // 71
      title: this.refs.weblogPostContent.refs.input.value,                                                             // 72
      createdAt: new Date(),                                                                                           // 73
      createdBy: {                                                                                                     // 74
        display: Meteor.user().fullName(),                                                                             // 75
        reference: Meteor.userId()                                                                                     // 76
      }                                                                                                                // 74
    };                                                                                                                 // 71
    if (Meteor.user().profile && Meteor.user().profile.avatar) {                                                       // 79
      newPost.createdBy.avatar = Meteor.user().profile.avatar;                                                         // 80
    }                                                                                                                  // 81
                                                                                                                       //
    insertPost.call(newPost, function (error) {                                                                        // 83
      if (error) {                                                                                                     // 84
        Bert.alert(error.reason, 'danger');                                                                            // 85
      } else {                                                                                                         // 86
        Bert.alert('Post added!', 'success');                                                                          // 87
        Session.set('weblogPostContent', false);                                                                       // 88
      }                                                                                                                // 89
    });                                                                                                                // 90
  };                                                                                                                   // 91
                                                                                                                       //
  AddPost.prototype.changePost = function changePost() {                                                               // 17
    Session.set('weblogPostContent', this.refs.weblogPostContent.refs.input.value);                                    // 94
  };                                                                                                                   // 95
                                                                                                                       //
  return AddPost;                                                                                                      // 17
}(React.Component);                                                                                                    // 17
                                                                                                                       //
AddPost.propTypes = {};                                                                                                // 100
ReactMixin(AddPost.prototype, ReactMeteorData);                                                                        // 101
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Post.js":["react","react-bootstrap","meteor/themeteorchef:bert","../../../api/posts/methods.js","/imports/ui/components/GlassCard","react-toolbox/lib/card",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/posts/Post.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Post:function(){return Post}});var React;module.import('react',{"default":function(v){React=v}});var Row,Col,ListGroupItem,FormControl,Button;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v},"ListGroupItem":function(v){ListGroupItem=v},"FormControl":function(v){FormControl=v},"Button":function(v){Button=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var updatePost,removePost;module.import('../../../api/posts/methods.js',{"updatePost":function(v){updatePost=v},"removePost":function(v){removePost=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var _this = this;
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
var handleUpdatePost = function handleUpdatePost(postId, event) {                                                      // 10
  var title = event.target.value.trim();                                                                               // 11
  if (title !== '' && event.keyCode === 13) {                                                                          // 12
    updatePost.call({                                                                                                  // 13
      _id: postId,                                                                                                     // 14
      update: { title: title }                                                                                         // 15
    }, function (error) {                                                                                              // 13
      if (error) {                                                                                                     // 17
        Bert.alert(error.reason, 'danger');                                                                            // 18
      } else {                                                                                                         // 19
        Bert.alert('Post updated!', 'success');                                                                        // 20
      }                                                                                                                // 21
    });                                                                                                                // 22
  }                                                                                                                    // 23
};                                                                                                                     // 24
                                                                                                                       //
var handleRemovePost = function handleRemovePost(documentId, event) {                                                  // 26
  event.preventDefault();                                                                                              // 27
  // this should be replaced with a styled solution so for now we will                                                 //
  // disable the eslint `no-alert`                                                                                     //
  // eslint-disable-next-line no-alert                                                                                 //
  if (confirm('Are you sure? This is permanent.')) {                                                                   // 31
    removePost.call({                                                                                                  // 32
      _id: documentId                                                                                                  // 33
    }, function (error) {                                                                                              // 32
      if (error) {                                                                                                     // 35
        Bert.alert(error.reason, 'danger');                                                                            // 36
      } else {                                                                                                         // 37
        Bert.alert('Post removed!', 'success');                                                                        // 38
      }                                                                                                                // 39
    });                                                                                                                // 40
  }                                                                                                                    // 41
};                                                                                                                     // 42
                                                                                                                       //
var Post = function Post(_ref) {                                                                                       // 44
  var post = _ref.post;                                                                                                // 44
  return React.createElement(                                                                                          // 44
    ListGroupItem,                                                                                                     // 45
    { key: post._id },                                                                                                 // 45
    React.createElement(                                                                                               // 46
      Row,                                                                                                             // 46
      null,                                                                                                            // 46
      React.createElement(                                                                                             // 47
        Col,                                                                                                           // 47
        { xs: 8, sm: 10 },                                                                                             // 47
        React.createElement(FormControl, {                                                                             // 48
          type: 'text',                                                                                                // 49
          standalone: true,                                                                                            // 50
          defaultValue: post.title,                                                                                    // 51
          onKeyUp: handleUpdatePost.bind(_this, post._id)                                                              // 52
        })                                                                                                             // 48
      ),                                                                                                               // 47
      React.createElement(                                                                                             // 55
        Col,                                                                                                           // 55
        { xs: 4, sm: 2 },                                                                                              // 55
        React.createElement(                                                                                           // 56
          Button,                                                                                                      // 56
          {                                                                                                            // 56
            bsStyle: 'danger',                                                                                         // 57
            className: 'btn-block',                                                                                    // 58
            onClick: handleRemovePost.bind(_this, post._id) },                                                         // 59
          'Remove'                                                                                                     // 56
        )                                                                                                              // 56
      )                                                                                                                // 55
    )                                                                                                                  // 46
  );                                                                                                                   // 45
};                                                                                                                     // 44
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PostsDeck.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-toolbox/lib/card","react-toolbox/lib/button","react","react-mixin","/imports/ui/components/GlassCard","meteor/react-meteor-data","/imports/api/posts/methods.js","/imports/ui/components/DynamicSpacer","meteor/meteor","meteor/themeteorchef:bert",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/posts/PostsDeck.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var removePost;module.import('/imports/api/posts/methods.js',{"removePost":function(v){removePost=v}});var DynamicSpacer;module.import('/imports/ui/components/DynamicSpacer',{"DynamicSpacer":function(v){DynamicSpacer=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       //
var PostsDeck = function (_React$Component) {                                                                          //
  _inherits(PostsDeck, _React$Component);                                                                              //
                                                                                                                       //
  function PostsDeck() {                                                                                               //
    _classCallCheck(this, PostsDeck);                                                                                  //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  PostsDeck.prototype.getMeteorData = function getMeteorData() {                                                       //
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 20
      style: {                                                                                                         // 21
        opacity: Session.get('globalOpacity')                                                                          // 22
      },                                                                                                               // 21
      state: {                                                                                                         // 24
        checkbox: false                                                                                                // 25
      },                                                                                                               // 24
      posts: []                                                                                                        // 27
    };                                                                                                                 // 20
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 30
      data.style.color = 'black';                                                                                      // 31
      data.style.background = 'white';                                                                                 // 32
    } else {                                                                                                           // 33
      data.style.color = 'white';                                                                                      // 34
      data.style.background = 'black';                                                                                 // 35
    }                                                                                                                  // 36
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 39
      data.style.filter = 'blur(3px)';                                                                                 // 40
      data.style.webkitFilter = 'blur(3px)';                                                                           // 41
    }                                                                                                                  // 42
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 45
      data.style.backdropFilter = 'blur(5px)';                                                                         // 46
    }                                                                                                                  // 47
                                                                                                                       //
    if (this.props.userId) {                                                                                           // 49
      if (Posts.find({ 'createdBy.reference': this.props.userId }).count() > 0) {                                      // 50
        data.posts = Posts.find({ 'createdBy.reference': this.props.userId }, { sort: { createdAt: -1 } }).fetch();    // 51
      }                                                                                                                // 52
    } else {                                                                                                           // 53
      if (Posts.find({ 'createdBy.reference': Meteor.userId() }).count() > 0) {                                        // 54
        data.posts = Posts.find({ 'createdBy.reference': Meteor.userId() }, { sort: { createdAt: -1 } }).fetch();      // 55
      }                                                                                                                // 56
    }                                                                                                                  // 57
                                                                                                                       //
    //console.log('data.posts', data.posts);                                                                           //
                                                                                                                       //
    return data;                                                                                                       // 61
  };                                                                                                                   // 62
                                                                                                                       //
  PostsDeck.prototype.render = function render() {                                                                     //
    var self = this;                                                                                                   // 65
                                                                                                                       //
    return React.createElement(                                                                                        // 67
      'div',                                                                                                           // 68
      { className: 'postDeck' },                                                                                       // 68
      this.data.posts.map(function (item, i) {                                                                         // 69
        var createdAt = '';                                                                                            // 70
        var createdBy = '';                                                                                            // 71
        var createdByAvatar = '/thumbnail-blank.png'; //https://media.licdn.com/mpr/mpr/shrink_100_100/AAEAAQAAAAAAAAKeAAAAJDJkM2RmNTMzLWI4OGUtNDZmOC1iNTliLWYwOTc1ZWM0YmIyZg.jpg
                                                                                                                       //
        if (item.createdAt) {                                                                                          // 74
          createdAt = moment(item.createdAt).format('YYYY, MMMM Do (dddd) hh:mm a');                                   // 75
        }                                                                                                              // 76
        if (item.createdBy && item.createdBy.display) {                                                                // 77
          createdBy = item.createdBy.display;                                                                          // 78
        }                                                                                                              // 79
        if (item.createdBy && item.createdBy.avatar) {                                                                 // 80
          createdByAvatar = item.createdBy.avatar;                                                                     // 81
        }                                                                                                              // 82
                                                                                                                       //
        return React.createElement(                                                                                    // 84
          'div',                                                                                                       // 85
          { className: 'postCard', key: i },                                                                           // 85
          React.createElement(                                                                                         // 86
            GlassCard,                                                                                                 // 86
            null,                                                                                                      // 86
            React.createElement(CardTitle, {                                                                           // 87
              avatar: createdByAvatar,                                                                                 // 88
              title: createdBy,                                                                                        // 89
              subtitle: createdAt                                                                                      // 90
            }),                                                                                                        // 87
            React.createElement(                                                                                       // 93
              CardText,                                                                                                // 93
              { className: 'postTitle' },                                                                              // 93
              item.title                                                                                               // 94
            ),                                                                                                         // 93
            self.renderCardActions(i, item)                                                                            // 96
          ),                                                                                                           // 86
          React.createElement(DynamicSpacer, null)                                                                     // 98
        );                                                                                                             // 85
      })                                                                                                               // 101
    );                                                                                                                 // 68
  };                                                                                                                   // 105
                                                                                                                       //
  // <CardActions>                                                                                                     //
  //   <Button className='editButton' label='Edit' style={{color: 'lightgray'}} />                                     //
  //   <Button className='deleteButton' onMouseUp={self.handleDeleteButton.bind(self, i, item)} label='Delete' style={{color: 'lightgray'}} />
  // </CardActions>                                                                                                    //
                                                                                                                       //
  PostsDeck.prototype.handleDeleteButton = function handleDeleteButton(index, post) {                                  //
    console.log('handleDeleteButton');                                                                                 // 114
                                                                                                                       //
    removePost.call({                                                                                                  // 116
      _id: post._id                                                                                                    // 117
    }, function (error) {                                                                                              // 116
      if (error) {                                                                                                     // 119
        Bert.alert(error.reason, 'danger');                                                                            // 120
      } else {                                                                                                         // 121
        Bert.alert('Post removed!', 'success');                                                                        // 122
      }                                                                                                                // 123
    });                                                                                                                // 124
  };                                                                                                                   // 125
                                                                                                                       //
  PostsDeck.prototype.renderCardActions = function renderCardActions(i, item) {                                        //
                                                                                                                       //
    // <Button className='editButton' label='Edit' style={{color: 'lightgray'}} />                                     //
                                                                                                                       //
    if (item && item.createdBy && item.createdBy.reference) {                                                          // 131
      if (item.createdBy.reference === Meteor.userId()) {                                                              // 132
        return React.createElement(                                                                                    // 133
          CardActions,                                                                                                 // 134
          null,                                                                                                        // 134
          React.createElement(Button, { className: 'deleteButton', onMouseUp: this.handleDeleteButton.bind(self, i, item), label: 'Delete', style: { color: 'lightgray' } })
        );                                                                                                             // 134
      }                                                                                                                // 138
    }                                                                                                                  // 139
  };                                                                                                                   // 140
                                                                                                                       //
  return PostsDeck;                                                                                                    //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(PostsDeck));                                                                  //
                                                                                                                       //
                                                                                                                       //
PostsDeck.propTypes = {};                                                                                              // 145
PostsDeck.defaultProps = {};                                                                                           // 146
ReactMixin(PostsDeck.prototype, ReactMeteorData);                                                                      // 147
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PostsList.js":["react","react-bootstrap","./Post.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/posts/PostsList.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PostsList:function(){return PostsList}});var React;module.import('react',{"default":function(v){React=v}});var ListGroup,Alert;module.import('react-bootstrap',{"ListGroup":function(v){ListGroup=v},"Alert":function(v){Alert=v}});var Post;module.import('./Post.js',{"Post":function(v){Post=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var PostsList = function PostsList(_ref) {                                                                             // 5
  var posts = _ref.posts;                                                                                              // 5
  return posts.length > 0 ? React.createElement(                                                                       // 5
    ListGroup,                                                                                                         // 7
    { className: 'posts-list' },                                                                                       // 7
    posts.map(function (doc) {                                                                                         // 8
      return React.createElement(Post, { key: doc._id, post: doc });                                                   // 8
    })                                                                                                                 // 8
  ) : React.createElement(                                                                                             // 7
    Alert,                                                                                                             // 13
    { bsStyle: 'warning' },                                                                                            // 13
    'No posts yet.'                                                                                                    // 13
  );                                                                                                                   // 13
};                                                                                                                     // 5
                                                                                                                       //
PostsList.propTypes = {                                                                                                // 16
  posts: React.PropTypes.array                                                                                         // 17
};                                                                                                                     // 16
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"practitioners":{"PractitionerDetail.js":["babel-runtime/helpers/typeof","babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/input","react-toolbox/lib/button","react-bootstrap","../../containers/documents-list.js","../../components/AddDocument.js","../../components/PageContainer","/imports/ui/components/GlassCard","react-toolbox/lib/card","react-toolbox/lib/tabs","../../workflows/practitioners/PractitionerTable","../../../api/practitioners/methods","meteor/themeteorchef:bert",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/practitioners/PractitionerDetail.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof;module.import('babel-runtime/helpers/typeof',{"default":function(v){_typeof=v}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Row,Col;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v}});var DocumentsList;module.import('../../containers/documents-list.js',{"default":function(v){DocumentsList=v}});var AddDocument;module.import('../../components/AddDocument.js',{"AddDocument":function(v){AddDocument=v}});var PageContainer;module.import('../../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var PractitionerTable;module.import('../../workflows/practitioners/PractitionerTable',{"default":function(v){PractitionerTable=v}});var insertPractitioner,updatePractitioner,removePractitionerById;module.import('../../../api/practitioners/methods',{"insertPractitioner":function(v){insertPractitioner=v},"updatePractitioner":function(v){updatePractitioner=v},"removePractitionerById":function(v){removePractitionerById=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
                                                                                                                       // 17
                                                                                                                       // 18
                                                                                                                       //
                                                                                                                       // 20
                                                                                                                       // 21
                                                                                                                       //
var defaultState = false;                                                                                              // 24
                                                                                                                       //
Session.setDefault('practitionerDetailState', defaultState);                                                           // 26
                                                                                                                       //
var PractitionerDetail = function (_React$Component) {                                                                 //
  _inherits(PractitionerDetail, _React$Component);                                                                     //
                                                                                                                       //
  function PractitionerDetail() {                                                                                      //
    _classCallCheck(this, PractitionerDetail);                                                                         //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  PractitionerDetail.prototype.getMeteorData = function getMeteorData() {                                              //
    var data = {                                                                                                       // 31
      practitionerId: false,                                                                                           // 32
      practitioner: {                                                                                                  // 33
        id: "",                                                                                                        // 34
        username: "",                                                                                                  // 35
        gender: "",                                                                                                    // 36
        active: "",                                                                                                    // 37
        email: "",                                                                                                     // 38
        name: "",                                                                                                      // 39
        photo: ""                                                                                                      // 40
      }                                                                                                                // 33
    };                                                                                                                 // 31
                                                                                                                       //
    if (Session.get('selectedPractitioner')) {                                                                         // 44
      data.practitionerId = Session.get('selectedPractitioner');                                                       // 45
                                                                                                                       //
      var selectedPractitioner = Practitioners.findOne({ _id: Session.get('selectedPractitioner') });                  // 47
      if (selectedPractitioner) {                                                                                      // 48
        data.practitioner = {                                                                                          // 49
          id: selectedPractitioner._id,                                                                                // 50
          username: selectedPractitioner.username,                                                                     // 51
          gender: selectedPractitioner.gender,                                                                         // 52
          active: selectedPractitioner.active.toString(),                                                              // 53
          email: selectedPractitioner.emails ? selectedPractitioner.emails[0].address : "",                            // 54
          name: selectedPractitioner.name ? selectedPractitioner.name.text : "",                                       // 55
          given: selectedPractitioner.name ? selectedPractitioner.name.given : "",                                     // 56
          family: selectedPractitioner.name ? selectedPractitioner.name.family : ""                                    // 57
        };                                                                                                             // 49
      }                                                                                                                // 59
    }                                                                                                                  // 60
                                                                                                                       //
    if (Session.get('practitionerDetailState')) {                                                                      // 62
      data.practitioner = Session.get('practitionerDetailState');                                                      // 63
    }                                                                                                                  // 64
                                                                                                                       //
    return data;                                                                                                       // 66
  };                                                                                                                   // 67
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PractitionerDetail.prototype.changeState = function changeState(field, value) {                                      //
                                                                                                                       //
    console.log("changeState", value);                                                                                 // 73
                                                                                                                       //
    // by default, assume there's no other data and we're creating a new practitioner                                  //
    var practitionerUpdate = {                                                                                         // 76
      id: "",                                                                                                          // 77
      username: "",                                                                                                    // 78
      gender: "",                                                                                                      // 79
      active: "",                                                                                                      // 80
      email: "",                                                                                                       // 81
      name: "",                                                                                                        // 82
      photo: ""                                                                                                        // 83
    };                                                                                                                 // 76
                                                                                                                       //
    // if there's an existing practitioner, use them                                                                   //
    if (Session.get('selectedPractitioner')) {                                                                         // 87
      practitionerUpdate = this.data.practitioner;                                                                     // 88
    }                                                                                                                  // 89
                                                                                                                       //
    if (_typeof(Session.get('practitionerDetailState')) === "object") {                                                // 91
      practitionerUpdate = Session.get('practitionerDetailState');                                                     // 92
    }                                                                                                                  // 93
                                                                                                                       //
    practitionerUpdate[field] = value;                                                                                 // 95
    console.log("practitionerUpdate", practitionerUpdate);                                                             // 96
                                                                                                                       //
    Session.set('practitionerDetailState', practitionerUpdate);                                                        // 98
  };                                                                                                                   // 99
                                                                                                                       //
  PractitionerDetail.prototype.openTab = function openTab(index) {                                                     //
    // set which tab is selected                                                                                       //
    var state = Session.get('practitionerCardState');                                                                  // 102
    state["index"] = index;                                                                                            // 103
    Session.set('practitionerCardState', state);                                                                       // 104
  };                                                                                                                   // 105
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PractitionerDetail.prototype.handleSaveButton = function handleSaveButton() {                                        //
    var _this2 = this;                                                                                                 // 108
                                                                                                                       //
    var practitionerFormData = {                                                                                       // 109
      'name': {                                                                                                        // 110
        'text': this.refs.name.refs.input.value                                                                        // 111
      },                                                                                                               // 110
      'identifier': [],                                                                                                // 113
      'gender': this.refs.gender.refs.input.value,                                                                     // 114
      'photo': [{                                                                                                      // 115
        url: this.refs.photo.refs.input.value                                                                          // 116
      }]                                                                                                               // 115
    };                                                                                                                 // 109
                                                                                                                       //
    if (this.refs.active.refs.input.value === "true") {                                                                // 120
      practitionerFormData.active = true;                                                                              // 121
    } else {                                                                                                           // 122
      practitionerFormData.active = false;                                                                             // 123
    }                                                                                                                  // 124
                                                                                                                       //
    console.log("practitionerFormData", practitionerFormData);                                                         // 126
                                                                                                                       //
    if (Session.get('selectedPractitioner')) {                                                                         // 129
      console.log("update practioner");                                                                                // 130
      //Meteor.users.insert(practitionerFormData);                                                                     //
      updatePractitioner.call({ _id: Session.get('selectedPractitioner'), update: practitionerFormData }, function (error) {
        if (error) {                                                                                                   // 134
          Bert.alert(error.reason, 'danger');                                                                          // 135
        } else {                                                                                                       // 136
          Bert.alert('Practitioner updated!', 'success');                                                              // 137
          _this2.openTab(1);                                                                                           // 138
        }                                                                                                              // 139
      });                                                                                                              // 140
    } else {                                                                                                           // 141
                                                                                                                       //
      console.log("create a new practitioner", practitionerFormData);                                                  // 143
                                                                                                                       //
      //Meteor.users.insert(practitionerFormData);                                                                     //
      insertPractitioner.call(practitionerFormData, function (error) {                                                 // 146
        if (error) {                                                                                                   // 147
          Bert.alert(error.reason, 'danger');                                                                          // 148
        } else {                                                                                                       // 149
          Bert.alert('Practitioner added!', 'success');                                                                // 150
          _this2.openTab(1);                                                                                           // 151
        }                                                                                                              // 152
      });                                                                                                              // 153
    }                                                                                                                  // 154
  };                                                                                                                   // 155
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PractitionerDetail.prototype.handleCancelButton = function handleCancelButton() {                                    //
    console.log("handleCancelButton");                                                                                 // 159
  };                                                                                                                   // 160
                                                                                                                       //
  PractitionerDetail.prototype.handleDeleteButton = function handleDeleteButton() {                                    //
    var _this3 = this;                                                                                                 // 161
                                                                                                                       //
    removePractitionerById.call({ _id: Session.get('selectedPractitioner') }, function (error) {                       // 162
      if (error) {                                                                                                     // 164
        Bert.alert(error.reason, 'danger');                                                                            // 165
      } else {                                                                                                         // 166
        Bert.alert('Practitioner deleted!', 'success');                                                                // 167
        _this3.openTab(1);                                                                                             // 168
      }                                                                                                                // 169
    });                                                                                                                // 170
  };                                                                                                                   // 171
                                                                                                                       //
  PractitionerDetail.prototype.determineButtons = function determineButtons(practitionerId) {                          //
    if (practitionerId) {                                                                                              // 173
      return React.createElement(                                                                                      // 174
        'div',                                                                                                         // 175
        null,                                                                                                          // 175
        React.createElement(Button, { id: 'savePractitionerButton', label: 'Save', onClick: this.handleSaveButton.bind(this) }),
        React.createElement(Button, { id: 'deletePractitionerButton', label: 'Delete', onClick: this.handleDeleteButton.bind(this) })
      );                                                                                                               // 175
    } else {                                                                                                           // 180
      return React.createElement(Button, { id: 'savePractitionerButton', label: 'Save', onClick: this.handleSaveButton.bind(this) });
    }                                                                                                                  // 184
  };                                                                                                                   // 185
                                                                                                                       //
  PractitionerDetail.prototype.render = function render() {                                                            //
    return React.createElement(                                                                                        // 187
      'div',                                                                                                           // 188
      { className: 'practitionerDetail' },                                                                             // 188
      React.createElement(                                                                                             // 189
        CardText,                                                                                                      // 189
        null,                                                                                                          // 189
        React.createElement(Input, { type: 'text', ref: 'name', label: 'name', name: 'name', value: this.data.practitioner.name, onChange: this.changeState.bind(this, 'name') }),
        React.createElement(Input, { type: 'text', ref: 'gender', label: 'gender', name: 'gender', value: this.data.practitioner.gender, onChange: this.changeState.bind(this, 'gender') }),
        React.createElement(Input, { type: 'text', ref: 'photo', label: 'photo', name: 'photo', value: this.data.practitioner.photo, onChange: this.changeState.bind(this, 'photo') }),
        React.createElement(Input, { type: 'text', ref: 'active', label: 'active', name: 'active', value: this.data.practitioner.active, onChange: this.changeState.bind(this, 'active') })
      ),                                                                                                               // 189
      React.createElement(                                                                                             // 195
        CardActions,                                                                                                   // 195
        null,                                                                                                          // 195
        this.determineButtons(this.data.practitionerId)                                                                // 196
      )                                                                                                                // 195
    );                                                                                                                 // 188
  };                                                                                                                   // 200
                                                                                                                       //
  return PractitionerDetail;                                                                                           //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(PractitionerDetail));                                                         //
                                                                                                                       //
                                                                                                                       //
PractitionerDetail.propTypes = {                                                                                       // 204
  hasUser: React.PropTypes.object                                                                                      // 205
};                                                                                                                     // 204
ReactMixin(PractitionerDetail.prototype, ReactMeteorData);                                                             // 207
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PractitionerTable.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/app_bar","react-toolbox/lib/button","react-toolbox/lib/card","meteor/meteor","meteor/accounts-base","react-toolbox/lib/avatar","react-bootstrap",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/practitioners/PractitionerTable.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var AppBar;module.import('react-toolbox/lib/app_bar',{"default":function(v){AppBar=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var Avatar;module.import('react-toolbox/lib/avatar',{"default":function(v){Avatar=v}});var Table;module.import('react-bootstrap',{"Table":function(v){Table=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
                                                                                                                       // 13
                                                                                                                       //
Session.setDefault('selectedPractitioner', false);                                                                     // 18
                                                                                                                       //
var PractitionerTable = function (_React$Component) {                                                                  //
  _inherits(PractitionerTable, _React$Component);                                                                      //
                                                                                                                       //
  function PractitionerTable() {                                                                                       //
    _classCallCheck(this, PractitionerTable);                                                                          //
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  //
  }                                                                                                                    //
                                                                                                                       //
  PractitionerTable.prototype.getMeteorData = function getMeteorData() {                                               //
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 25
      style: {                                                                                                         // 26
        opacity: Session.get('globalOpacity')                                                                          // 27
      },                                                                                                               // 26
      selected: [],                                                                                                    // 29
      practitioners: Practitioners.find().map(function (practitioner) {                                                // 30
        var result = {                                                                                                 // 31
          _id: practitioner._id,                                                                                       // 32
          gender: practitioner.gender,                                                                                 // 33
          active: practitioner.active.toString(),                                                                      // 34
          name: practitioner.name ? practitioner.name.text : '',                                                       // 35
          photo: practitioner.photo ? practitioner.photo[0].url : ''                                                   // 36
        };                                                                                                             // 31
                                                                                                                       //
        if (practitioner.identifier && practitioner.identifier[0]) {                                                   // 39
          result.username = practitioner.identifier[0].value;                                                          // 40
        }                                                                                                              // 41
        return result;                                                                                                 // 42
      })                                                                                                               // 43
    };                                                                                                                 // 25
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 46
      data.style.color = 'black';                                                                                      // 47
      data.style.background = 'white';                                                                                 // 48
    } else {                                                                                                           // 49
      data.style.color = 'white';                                                                                      // 50
      data.style.background = 'black';                                                                                 // 51
    }                                                                                                                  // 52
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 55
      data.style.filter = 'blur(3px)';                                                                                 // 56
      data.style.webkitFilter = 'blur(3px)';                                                                           // 57
    }                                                                                                                  // 58
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 61
      data.style.backdropFilter = 'blur(5px)';                                                                         // 62
    }                                                                                                                  // 63
                                                                                                                       //
    //console.log("data", data);                                                                                       //
                                                                                                                       //
    return data;                                                                                                       // 67
  };                                                                                                                   // 68
                                                                                                                       //
  PractitionerTable.prototype.handleChange = function handleChange(row, key, value) {                                  //
    var source = this.state.source;                                                                                    // 70
    source[row][key] = value;                                                                                          // 71
    this.setState({ source: source });                                                                                 // 72
  };                                                                                                                   // 73
                                                                                                                       //
  PractitionerTable.prototype.handleSelect = function handleSelect(selected) {                                         //
    this.setState({ selected: selected });                                                                             // 76
  };                                                                                                                   // 77
                                                                                                                       //
  PractitionerTable.prototype.getDate = function getDate() {                                                           //
    return 'YYYY/MM/DD';                                                                                               // 79
  };                                                                                                                   // 80
                                                                                                                       //
  PractitionerTable.prototype.noChange = function noChange() {                                                         //
    return '';                                                                                                         // 82
  };                                                                                                                   // 83
                                                                                                                       //
  PractitionerTable.prototype.rowClick = function rowClick(id) {                                                       //
    // set the user                                                                                                    //
    Session.set('selectedPractitioner', id);                                                                           // 86
                                                                                                                       //
    // set which tab is selected                                                                                       //
    var state = Session.get('practitionerCardState');                                                                  // 89
    state['index'] = 2;                                                                                                // 90
    Session.set('practitionerCardState', state);                                                                       // 91
  };                                                                                                                   // 92
                                                                                                                       //
  PractitionerTable.prototype.render = function render() {                                                             //
    var tableRows = [];                                                                                                // 94
    for (var i = 0; i < this.data.practitioners.length; i++) {                                                         // 95
      tableRows.push(React.createElement(                                                                              // 96
        'tr',                                                                                                          // 97
        { className: 'practitionerRow', key: i, style: { cursor: 'pointer' }, onClick: this.rowClick.bind('this', this.data.practitioners[i]._id) },
        React.createElement(                                                                                           // 98
          'td',                                                                                                        // 98
          { className: 'avatar' },                                                                                     // 98
          React.createElement(                                                                                         // 99
            Avatar,                                                                                                    // 99
            null,                                                                                                      // 99
            React.createElement('img', { src: this.data.practitioners[i].photo })                                      // 99
          )                                                                                                            // 99
        ),                                                                                                             // 98
        React.createElement(                                                                                           // 101
          'td',                                                                                                        // 101
          { className: 'username' },                                                                                   // 101
          this.data.practitioners[i].username                                                                          // 101
        ),                                                                                                             // 101
        React.createElement(                                                                                           // 102
          'td',                                                                                                        // 102
          { className: 'name' },                                                                                       // 102
          this.data.practitioners[i].name                                                                              // 102
        ),                                                                                                             // 102
        React.createElement(                                                                                           // 103
          'td',                                                                                                        // 103
          { className: 'gender' },                                                                                     // 103
          this.data.practitioners[i].gender                                                                            // 103
        ),                                                                                                             // 103
        React.createElement(                                                                                           // 104
          'td',                                                                                                        // 104
          { className: 'active' },                                                                                     // 104
          this.data.practitioners[i].active                                                                            // 104
        ),                                                                                                             // 104
        React.createElement(                                                                                           // 105
          'td',                                                                                                        // 105
          { className: 'barcode' },                                                                                    // 105
          this.data.practitioners[i]._id                                                                               // 105
        )                                                                                                              // 105
      ));                                                                                                              // 97
    }                                                                                                                  // 107
                                                                                                                       //
    return React.createElement(                                                                                        // 110
      Table,                                                                                                           // 111
      { id: 'practitionersTable', responses: true, hover: true },                                                      // 111
      React.createElement(                                                                                             // 112
        'thead',                                                                                                       // 112
        null,                                                                                                          // 112
        React.createElement(                                                                                           // 113
          'tr',                                                                                                        // 113
          null,                                                                                                        // 113
          React.createElement(                                                                                         // 114
            'th',                                                                                                      // 114
            { className: 'avatar' },                                                                                   // 114
            'avatar'                                                                                                   // 114
          ),                                                                                                           // 114
          React.createElement(                                                                                         // 115
            'th',                                                                                                      // 115
            { className: 'username' },                                                                                 // 115
            'username'                                                                                                 // 115
          ),                                                                                                           // 115
          React.createElement(                                                                                         // 116
            'th',                                                                                                      // 116
            { className: 'name' },                                                                                     // 116
            'name'                                                                                                     // 116
          ),                                                                                                           // 116
          React.createElement(                                                                                         // 117
            'th',                                                                                                      // 117
            { className: 'gender' },                                                                                   // 117
            'gender'                                                                                                   // 117
          ),                                                                                                           // 117
          React.createElement(                                                                                         // 118
            'th',                                                                                                      // 118
            { className: 'isActive' },                                                                                 // 118
            'active'                                                                                                   // 118
          ),                                                                                                           // 118
          React.createElement(                                                                                         // 119
            'th',                                                                                                      // 119
            { className: 'barcode' },                                                                                  // 119
            '_id'                                                                                                      // 119
          )                                                                                                            // 119
        )                                                                                                              // 113
      ),                                                                                                               // 112
      React.createElement(                                                                                             // 122
        'tbody',                                                                                                       // 122
        null,                                                                                                          // 122
        tableRows                                                                                                      // 123
      )                                                                                                                // 122
    );                                                                                                                 // 111
  };                                                                                                                   // 128
                                                                                                                       //
  return PractitionerTable;                                                                                            //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(PractitionerTable));                                                          //
                                                                                                                       //
                                                                                                                       //
PractitionerTable.propTypes = {};                                                                                      // 133
ReactMixin(PractitionerTable.prototype, ReactMeteorData);                                                              // 134
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"questions":{"SliderStep.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","material-ui/Stepper","material-ui/List","material-ui/Divider","material-ui/Slider","material-ui/RaisedButton","material-ui/FlatButton","sprintf-js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/questions/SliderStep.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Step,Stepper,StepButton,StepContent,StepLabel;module.import('material-ui/Stepper',{"Step":function(v){Step=v},"Stepper":function(v){Stepper=v},"StepButton":function(v){StepButton=v},"StepContent":function(v){StepContent=v},"StepLabel":function(v){StepLabel=v}});var List,ListItem;module.import('material-ui/List',{"List":function(v){List=v},"ListItem":function(v){ListItem=v}});var Divider;module.import('material-ui/Divider',{"Divider":function(v){Divider=v}});var Slider;module.import('material-ui/Slider',{"default":function(v){Slider=v}});var RaisedButton;module.import('material-ui/RaisedButton',{"default":function(v){RaisedButton=v}});var FlatButton;module.import('material-ui/FlatButton',{"default":function(v){FlatButton=v}});var sprintf;module.import('sprintf-js',{"sprintf":function(v){sprintf=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
var SliderStep = function (_React$Component) {                                                                         //
			_inherits(SliderStep, _React$Component);                                                                            //
                                                                                                                       //
			function SliderStep(props) {                                                                                        // 14
						_classCallCheck(this, SliderStep);                                                                               // 14
                                                                                                                       //
						return _possibleConstructorReturn(this, _React$Component.call(this, props));                                     // 14
			}                                                                                                                   // 16
                                                                                                                       //
			SliderStep.prototype.getMeteorData = function getMeteorData() {                                                     //
						return {};                                                                                                       // 19
			};                                                                                                                  // 20
                                                                                                                       //
			SliderStep.prototype.render = function render() {                                                                   //
						var stateStruct = this.props.stateStruct; // The name of the session variable that contains the state structure. Hack.
						var stateVariable = this.props.stateVariable; // The name of the slider value variable within the state structure. Hack.
						var stepIndexName = this.props.stepIndexName; // The name of the step index variable within the state structure. Hack.
						var stepIndex = this.props.stepIndex; // The index of this step within the parent stepper.                       // 27
						var maxSteps = this.props.maxStepIndex; // The max step number of the parent stepper (index of last step).       // 28
						var unsetValue = this.props.unsetValue; // Do we do "unset" values as min, or not?                               // 29
						var minValue = this.props.minValue; // Minimum legal value for the slider.  Our slider will use one step below this for "unset".
						var maxValue = this.props.maxValue; // Maximum legal value for the slider.   Our slider wil use one step above this for "max".
						var stepIncrement = this.props.stepIncrement; // step increment.                                                 // 32
						var unfilledPrompt = this.props.unfilledPrompt; // The question.                                                 // 33
						var answerFormat = this.props.answerFormat; // The question.                                                     // 34
						var unSetLabel = this.props.unSetLabel; // The default label to display for an unset slider.                     // 35
						var beyondLabel = this.props.beyondLabel; // A sprintf format string for a "max" slider.                         // 36
						var validLabel = this.props.validLabel; // A sprintf format string for a standard slider value.                  // 37
						var interpretValue = this.props.interpretValue; // Function to transform the slider value to what will be displayed.
						var showDone = this.props.showDone;                                                                              // 39
						var doneStep = this.props.doneStep;                                                                              // 40
                                                                                                                       //
						var curValue = this.getData(stateStruct, stateVariable);                                                         // 42
						var isUnfilled = false;                                                                                          // 43
						var currentIndex = this.getData(stateStruct, stepIndexName);                                                     // 44
						if (typeof curValue === 'undefined') {                                                                           // 45
									console.log("Setting curvalue due to undefined with " + unsetValue);                                          // 46
									if (unsetValue) {                                                                                             // 47
												curValue = minValue - stepIncrement;                                                                       // 48
									} else {                                                                                                      // 49
												curValue = minValue;                                                                                       // 50
									}                                                                                                             // 51
									this.setData(stateStruct, stateVariable, curValue);                                                           // 52
						}                                                                                                                // 53
						if (curValue < minValue) {                                                                                       // 54
									isUnfilled = true;                                                                                            // 55
						}                                                                                                                // 56
						var getVal = this.getData(stateStruct, stateVariable);                                                           // 57
						console.log("Picking label with curValue=" + curValue + ", getVal=" + getVal + ", minVal=" + minValue);          // 58
						var valueLabel = getVal < minValue ? unSetLabel : getVal > maxValue ? sprintf(beyondLabel, interpretValue(getVal)) : sprintf(validLabel, interpretValue(getVal));
						if (isUnfilled || currentIndex == stepIndex) {                                                                   // 63
									unfilledAnswer = "";                                                                                          // 64
						} else {                                                                                                         // 65
									unfilledAnswer = sprintf(answerFormat, valueLabel);                                                           // 66
						}                                                                                                                // 67
						return React.createElement(                                                                                      // 68
									Step,                                                                                                         // 69
									{ index: stepIndex },                                                                                         // 69
									React.createElement(                                                                                          // 70
												StepButton,                                                                                                // 70
												{ onClick: this.setData.bind(this, stateStruct, stepIndexName, stepIndex), completed: !isUnfilled },       // 70
												isUnfilled || currentIndex == stepIndex ? unfilledPrompt : unfilledAnswer                                  // 71
									),                                                                                                            // 70
									React.createElement(                                                                                          // 73
												StepContent,                                                                                               // 73
												{ active: stepIndex == currentIndex },                                                                     // 73
												valueLabel,                                                                                                // 74
												React.createElement(Slider, {                                                                              // 75
															style: { width: "90%", margin: '20px 0' },                                                              // 76
															min: unsetValue ? minValue - stepIncrement : minValue,                                                  // 77
															max: maxValue + stepIncrement + 0,                                                                      // 78
															step: stepIncrement,                                                                                    // 79
															defaultValue: unsetValue ? minValue - stepIncrement : minValue,                                         // 80
															value: getVal,                                                                                          // 81
															onChange: this.setDataSlider.bind(this, stateStruct, stateVariable)                                     // 82
												}),                                                                                                        // 75
												React.createElement(                                                                                       // 84
															'div',                                                                                                  // 84
															{ style: { margin: '12px 0' } },                                                                        // 84
															React.createElement(FlatButton, { label: 'Back',                                                        // 85
																		disabled: stepIndex === 0,                                                                           // 86
																		disableTouchRipple: true,                                                                            // 87
																		disableFocusRipple: true,                                                                            // 88
																		onClick: this.handlePrev.bind(this, stateStruct, stepIndexName)                                      // 89
															}),                                                                                                     // 85
															showDone ? React.createElement(FlatButton, { label: 'Next Question',                                    // 91
																		disabled: stepIndex === maxSteps,                                                                    // 93
																		disableTouchRipple: true,                                                                            // 94
																		disableFocusRipple: true,                                                                            // 95
																		onClick: this.handleNext.bind(this, stateStruct, stepIndexName, maxSteps),                           // 96
																		style: { marginRight: 12 }                                                                           // 97
															}) : React.createElement(RaisedButton, {                                                                // 92
																		label: 'Next Question',                                                                              // 100
																		disabled: stepIndex === maxSteps,                                                                    // 101
																		disableTouchRipple: true,                                                                            // 102
																		disableFocusRipple: true,                                                                            // 103
																		primary: true,                                                                                       // 104
																		onClick: this.handleNext.bind(this, stateStruct, stepIndexName, maxSteps),                           // 105
																		style: { marginRight: 12 }                                                                           // 106
															}),                                                                                                     // 99
															showDone ? React.createElement(RaisedButton, {                                                          // 108
																		label: 'Finish Questions',                                                                           // 109
																		disableTouchRipple: true,                                                                            // 110
																		disableFocusRipple: true,                                                                            // 111
																		primary: true,                                                                                       // 112
																		onClick: doneStep,                                                                                   // 113
																		style: { marginRight: 12 }                                                                           // 114
															}) : ""                                                                                                 // 108
												)                                                                                                          // 84
									)                                                                                                             // 73
						);                                                                                                               // 69
			};                                                                                                                  // 120
                                                                                                                       //
			SliderStep.prototype.handleNext = function handleNext(stateStruct, stepIndexName, maxSteps) {                       //
						var data = Session.get(stateStruct);                                                                             // 123
						var stepIndex = data[stepIndexName];                                                                             // 124
						if (stepIndex < maxSteps) {                                                                                      // 125
									data[stepIndexName] = stepIndex + 1;                                                                          // 126
						}                                                                                                                // 127
						Session.set(stateStruct, data);                                                                                  // 128
			};                                                                                                                  // 129
                                                                                                                       //
			SliderStep.prototype.handlePrev = function handlePrev(stateStruct, stepIndexName) {                                 //
						var data = Session.get(stateStruct);                                                                             // 132
						var stepIndex = data[stepIndexName];                                                                             // 133
						if (stepIndex > 0) {                                                                                             // 134
									data[stepIndexName] = stepIndex - 1;                                                                          // 135
						}                                                                                                                // 136
						Session.set(stateStruct, data);                                                                                  // 137
			};                                                                                                                  // 138
                                                                                                                       //
			SliderStep.prototype.setDataSlider = function setDataSlider(structVar, event, ev2, val) {                           //
						var data = Session.get(structVar);                                                                               // 141
						data[event] = val;                                                                                               // 142
						var classVar = Object.assign(data);                                                                              // 143
						Session.set(structVar, classVar);                                                                                // 144
			};                                                                                                                  // 145
                                                                                                                       //
			SliderStep.prototype.setData = function setData(structVar, event, value) {                                          //
						var data = Session.get(structVar);                                                                               // 148
						data[event] = value;                                                                                             // 149
						var classVar = Object.assign(data);                                                                              // 150
						Session.set(structVar, classVar);                                                                                // 151
			};                                                                                                                  // 152
                                                                                                                       //
			SliderStep.prototype.getData = function getData(structVar, event) {                                                 //
						var data = Session.get(structVar);                                                                               // 155
						return data[event];                                                                                              // 156
			};                                                                                                                  // 157
                                                                                                                       //
			return SliderStep;                                                                                                  //
}(React.Component);                                                                                                    //
                                                                                                                       //
module.export("default",exports.default=(SliderStep));                                                                 //
                                                                                                                       //
                                                                                                                       //
SliderStep.propTypes = {                                                                                               // 160
			stateStruct: React.PropTypes.string.isRequired,                                                                     // 161
			stateVariable: React.PropTypes.string.isRequired,                                                                   // 162
			stepIndexName: React.PropTypes.string.isRequired,                                                                   // 163
			stepIndex: React.PropTypes.number.isRequired,                                                                       // 164
			maxStepIndex: React.PropTypes.number.isRequired,                                                                    // 165
			maxSteps: React.PropTypes.number.isRequired,                                                                        // 166
			minValue: React.PropTypes.number.isRequired,                                                                        // 167
			unsetValue: React.PropTypes.bool.isRequired,                                                                        // 168
			maxValue: React.PropTypes.number.isRequired,                                                                        // 169
			stepIncrement: React.PropTypes.number.isRequired,                                                                   // 170
			unfilledPrompt: React.PropTypes.string.isRequired,                                                                  // 171
			answerFormat: React.PropTypes.string.isRequired,                                                                    // 172
			unSetLabel: React.PropTypes.string.isRequired,                                                                      // 173
			beyondLabel: React.PropTypes.string.isRequired,                                                                     // 174
			validLabel: React.PropTypes.string.isRequired,                                                                      // 175
			interpretValue: React.PropTypes.func.isRequired                                                                     // 176
};                                                                                                                     // 160
                                                                                                                       //
ReactMixin(SliderStep.prototype, ReactMeteorData);                                                                     // 179
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"users":{"UserTable.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-bootstrap","react","react-mixin","meteor/react-meteor-data","meteor/meteor","meteor/accounts-base","react-toolbox/lib/avatar","react-toolbox/lib/button","react-router","meteor/themeteorchef:bert","/imports/api/users/methods",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/workflows/users/UserTable.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({UserTable:function(){return UserTable}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var Table;module.import('react-bootstrap',{"Table":function(v){Table=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var Avatar;module.import('react-toolbox/lib/avatar',{"default":function(v){Avatar=v}});var IconButton;module.import('react-toolbox/lib/button',{"default":function(v){IconButton=v}});var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var removeUserById;module.import('/imports/api/users/methods',{"removeUserById":function(v){removeUserById=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       //
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       //
                                                                                                                       // 14
                                                                                                                       //
var UserTable = function (_React$Component) {                                                                          // 16
  _inherits(UserTable, _React$Component);                                                                              // 16
                                                                                                                       //
  function UserTable() {                                                                                               // 16
    _classCallCheck(this, UserTable);                                                                                  // 16
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 16
  }                                                                                                                    // 16
                                                                                                                       //
  UserTable.prototype.getMeteorData = function getMeteorData() {                                                       // 16
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 21
      style: {                                                                                                         // 22
        opacity: Session.get('globalOpacity')                                                                          // 23
      },                                                                                                               // 22
      state: {                                                                                                         // 25
        isAdmin: false                                                                                                 // 26
      },                                                                                                               // 25
      selected: [],                                                                                                    // 28
      users: Meteor.users.find().fetch()                                                                               // 29
    };                                                                                                                 // 21
                                                                                                                       //
    if (Meteor.user() && Meteor.user().roles && Meteor.user().roles[0] === 'admin') {                                  // 32
      data.state.isAdmin = true;                                                                                       // 33
    }                                                                                                                  // 34
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 36
      data.style.color = 'black';                                                                                      // 37
      data.style.background = 'white';                                                                                 // 38
    } else {                                                                                                           // 39
      data.style.color = 'white';                                                                                      // 40
      data.style.background = 'black';                                                                                 // 41
    }                                                                                                                  // 42
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 45
      data.style.filter = 'blur(3px)';                                                                                 // 46
      data.style.webkitFilter = 'blur(3px)';                                                                           // 47
    }                                                                                                                  // 48
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 51
      data.style.backdropFilter = 'blur(5px)';                                                                         // 52
    }                                                                                                                  // 53
                                                                                                                       //
    //console.log("data", data);                                                                                       //
                                                                                                                       //
    return data;                                                                                                       // 57
  };                                                                                                                   // 58
                                                                                                                       //
  UserTable.prototype.renderAdminControls = function renderAdminControls(isAdmin, i) {                                 // 16
    if (isAdmin) {                                                                                                     // 63
      return React.createElement(                                                                                      // 64
        'td',                                                                                                          // 65
        null,                                                                                                          // 65
        React.createElement(IconButton, { icon: 'clear', onClick: this.removeUser.bind(this, this.data.users[i]._id) })
      );                                                                                                               // 65
    }                                                                                                                  // 69
  };                                                                                                                   // 70
                                                                                                                       //
  UserTable.prototype.renderAdminHeaders = function renderAdminHeaders(isAdmin) {                                      // 16
    if (isAdmin) {                                                                                                     // 72
      return React.createElement(                                                                                      // 73
        'th',                                                                                                          // 74
        null,                                                                                                          // 74
        'Remove'                                                                                                       // 74
      );                                                                                                               // 74
    }                                                                                                                  // 76
  };                                                                                                                   // 77
                                                                                                                       //
  UserTable.prototype.render = function render() {                                                                     // 16
                                                                                                                       //
    var tableRows = [];                                                                                                // 80
    for (var i = 0; i < this.data.users.length; i++) {                                                                 // 81
      tableRows.push(React.createElement(                                                                              // 82
        'tr',                                                                                                          // 83
        { key: i },                                                                                                    // 83
        React.createElement(                                                                                           // 84
          'td',                                                                                                        // 84
          null,                                                                                                        // 84
          React.createElement(                                                                                         // 85
            Avatar,                                                                                                    // 85
            null,                                                                                                      // 85
            React.createElement('img', { src: this.data.users[i].profile ? this.data.users[i].profile.avatar : '/thumbnail-blank.png' })
          )                                                                                                            // 85
        ),                                                                                                             // 84
        React.createElement(                                                                                           // 87
          'td',                                                                                                        // 87
          { onClick: this.routeToWeblog.bind(this, this.data.users[i]._id), style: { cursor: 'pointer' } },            // 87
          '/weblog/',                                                                                                  // 87
          this.data.users[i]._id                                                                                       // 87
        ),                                                                                                             // 87
        React.createElement(                                                                                           // 88
          'td',                                                                                                        // 88
          null,                                                                                                        // 88
          this.data.users[i].username                                                                                  // 88
        ),                                                                                                             // 88
        React.createElement(                                                                                           // 89
          'td',                                                                                                        // 89
          null,                                                                                                        // 89
          this.data.users[i].fullName()                                                                                // 89
        ),                                                                                                             // 89
        React.createElement(                                                                                           // 90
          'td',                                                                                                        // 90
          null,                                                                                                        // 90
          this.data.users[i].emails ? this.data.users[i].emails[0].address : ''                                        // 90
        ),                                                                                                             // 90
        this.renderAdminControls(this.data.state.isAdmin, i)                                                           // 91
      ));                                                                                                              // 83
    }                                                                                                                  // 93
                                                                                                                       //
    return React.createElement(                                                                                        // 96
      Table,                                                                                                           // 97
      { responses: true },                                                                                             // 97
      React.createElement(                                                                                             // 98
        'thead',                                                                                                       // 98
        null,                                                                                                          // 98
        React.createElement(                                                                                           // 99
          'tr',                                                                                                        // 99
          null,                                                                                                        // 99
          React.createElement(                                                                                         // 100
            'th',                                                                                                      // 100
            null,                                                                                                      // 100
            'Photo'                                                                                                    // 100
          ),                                                                                                           // 100
          React.createElement(                                                                                         // 101
            'th',                                                                                                      // 101
            null,                                                                                                      // 101
            'weblog/_id'                                                                                               // 101
          ),                                                                                                           // 101
          React.createElement(                                                                                         // 102
            'th',                                                                                                      // 102
            null,                                                                                                      // 102
            'username'                                                                                                 // 102
          ),                                                                                                           // 102
          React.createElement(                                                                                         // 103
            'th',                                                                                                      // 103
            null,                                                                                                      // 103
            'full name'                                                                                                // 103
          ),                                                                                                           // 103
          React.createElement(                                                                                         // 104
            'th',                                                                                                      // 104
            null,                                                                                                      // 104
            'email'                                                                                                    // 104
          ),                                                                                                           // 104
          this.renderAdminHeaders(this.data.state.isAdmin)                                                             // 105
        )                                                                                                              // 99
      ),                                                                                                               // 98
      React.createElement(                                                                                             // 108
        'tbody',                                                                                                       // 108
        null,                                                                                                          // 108
        tableRows                                                                                                      // 109
      )                                                                                                                // 108
    );                                                                                                                 // 97
  };                                                                                                                   // 114
                                                                                                                       //
  UserTable.prototype.handleChange = function handleChange(row, key, value) {                                          // 16
    var source = this.state.source;                                                                                    // 117
    source[row][key] = value;                                                                                          // 118
    this.setState({ source: source });                                                                                 // 119
  };                                                                                                                   // 120
                                                                                                                       //
  UserTable.prototype.handleSelect = function handleSelect(selected) {                                                 // 16
    this.setState({ selected: selected });                                                                             // 123
  };                                                                                                                   // 124
                                                                                                                       //
  UserTable.prototype.routeToWeblog = function routeToWeblog(userId) {                                                 // 16
    browserHistory.push('/weblog/' + userId);                                                                          // 126
  };                                                                                                                   // 127
                                                                                                                       //
  UserTable.prototype.removeUser = function removeUser(userId, event) {                                                // 16
    event.preventDefault();                                                                                            // 130
    console.log("removeUser", userId);                                                                                 // 131
                                                                                                                       //
    removeUserById.call({                                                                                              // 133
      _id: userId                                                                                                      // 134
    }, function (error) {                                                                                              // 133
      if (error) {                                                                                                     // 136
        Bert.alert(error.reason, 'danger');                                                                            // 137
      } else {                                                                                                         // 138
        Bert.alert('User removed!', 'success');                                                                        // 139
      }                                                                                                                // 140
    });                                                                                                                // 141
  };                                                                                                                   // 142
                                                                                                                       //
  return UserTable;                                                                                                    // 16
}(React.Component);                                                                                                    // 16
                                                                                                                       //
UserTable.propTypes = {};                                                                                              // 145
ReactMixin(UserTable.prototype, ReactMeteorData);                                                                      // 146
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}},"components":{"AboutAppCard.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-toolbox/lib/card","react-router","react-bootstrap",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/AboutAppCard.jsx                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AboutAppCard:function(){return AboutAppCard}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var CardTitle,CardText;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v}});var Link;module.import('react-router',{"Link":function(v){Link=v}});var Table;module.import('react-bootstrap',{"Table":function(v){Table=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var AboutAppCard = function (_React$Component) {                                                                       // 6
  _inherits(AboutAppCard, _React$Component);                                                                           // 6
                                                                                                                       //
  function AboutAppCard(props) {                                                                                       // 7
    _classCallCheck(this, AboutAppCard);                                                                               // 7
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 7
  }                                                                                                                    // 9
                                                                                                                       //
  AboutAppCard.prototype.render = function render() {                                                                  // 6
    return React.createElement(                                                                                        // 12
      'div',                                                                                                           // 13
      null,                                                                                                            // 13
      React.createElement(CardTitle, {                                                                                 // 14
        title: 'About This Forum'                                                                                      // 15
      }),                                                                                                              // 14
      React.createElement(                                                                                             // 17
        CardText,                                                                                                      // 17
        null,                                                                                                          // 17
        'This is the third major iteration of this bulletin-board-system; having been called \'Groupthink\' and \'Clinical Support Forum\' in past iterations.  Originally conceived as a modern interpretation of BBEdit written in Meteor.js, the intent behind this software has been to bring a forum software to the Meteor ecosystem, and to \'eat our own dogfood\'.  This is a forum for Meteor devs who want to hack on their own forum software.  Along the way, the forum has been heavily influenced by WordPress and Discourse, and is now on it\'s way to becoming it\'s own thing.',
        React.createElement('br', null),                                                                               // 19
        React.createElement('br', null),                                                                               // 19
        'FHIR (pronounced as \'fire\') refers to the Fast Healthcare Interoperability Resourse standard devopled by Health Level Seven International (HL7), a 35 year old organization that promotes interoperability between healthcare systems. FHIR is somewhat comparable in scope to GraphQL.  Meteor on FHIR stands at the intersection of the Meteor community and FHIR community, and is intended to be a forum to promote the general development of healthcare apps using full-stack Javascript.  The maintainers of the Meteor on FHIR Forum are bioinformatists and clinicians working in the healthcare industry and accademia.',
        React.createElement('br', null),                                                                               // 21
        React.createElement('br', null),                                                                               // 21
        'Version 4 will probably be released under a different brand name and MIT license compatible media assets.  In the time being, this forum software is simply known as the "Meteor on FHIR Forum", and available only under the Artistic License 2.0.',
        React.createElement('br', null),                                                                               // 24
        React.createElement('br', null),                                                                               // 24
        React.createElement(                                                                                           // 26
          'h5',                                                                                                        // 26
          { style: { borderTop: '1px solid lightgray', width: '100%' } },                                              // 26
          'Version'                                                                                                    // 26
        ),                                                                                                             // 26
        React.createElement('br', null),                                                                               // 26
        '3.0',                                                                                                         // 17
        React.createElement('br', null),                                                                               // 28
        React.createElement('br', null),                                                                               // 28
        React.createElement(                                                                                           // 30
          'h5',                                                                                                        // 30
          { style: { borderTop: '1px solid lightgray', width: '100%' } },                                              // 30
          'Keybindings'                                                                                                // 30
        ),                                                                                                             // 30
        React.createElement('br', null),                                                                               // 30
        React.createElement(                                                                                           // 31
          Table,                                                                                                       // 31
          { responses: true, hover: true },                                                                            // 31
          React.createElement(                                                                                         // 32
            'tbody',                                                                                                   // 32
            null,                                                                                                      // 32
            React.createElement(                                                                                       // 33
              'tr',                                                                                                    // 33
              { className: 'keybindingRow', style: { cursor: 'pointer' } },                                            // 33
              React.createElement(                                                                                     // 34
                'td',                                                                                                  // 34
                null,                                                                                                  // 34
                'ctrl+cmd+n'                                                                                           // 34
              ),                                                                                                       // 34
              React.createElement(                                                                                     // 35
                'td',                                                                                                  // 35
                null,                                                                                                  // 35
                'Hide/Show Navbars'                                                                                    // 35
              )                                                                                                        // 35
            ),                                                                                                         // 33
            React.createElement(                                                                                       // 37
              'tr',                                                                                                    // 37
              { className: 'keybindingRow', style: { cursor: 'pointer' } },                                            // 37
              React.createElement(                                                                                     // 38
                'td',                                                                                                  // 38
                null,                                                                                                  // 38
                'ctrl+cmd+b'                                                                                           // 38
              ),                                                                                                       // 38
              React.createElement(                                                                                     // 39
                'td',                                                                                                  // 39
                null,                                                                                                  // 39
                'Left Offset'                                                                                          // 39
              )                                                                                                        // 39
            ),                                                                                                         // 37
            React.createElement(                                                                                       // 41
              'tr',                                                                                                    // 41
              { className: 'keybindingRow', style: { cursor: 'pointer' } },                                            // 41
              React.createElement(                                                                                     // 42
                'td',                                                                                                  // 42
                null,                                                                                                  // 42
                'ctrl+cmd+m'                                                                                           // 42
              ),                                                                                                       // 42
              React.createElement(                                                                                     // 43
                'td',                                                                                                  // 43
                null,                                                                                                  // 43
                'Card Spacing'                                                                                         // 43
              )                                                                                                        // 43
            ),                                                                                                         // 41
            React.createElement(                                                                                       // 45
              'tr',                                                                                                    // 45
              { className: 'keybindingRow', style: { cursor: 'pointer' } },                                            // 45
              React.createElement(                                                                                     // 46
                'td',                                                                                                  // 46
                null,                                                                                                  // 46
                'ctrl+cmd+p'                                                                                           // 46
              ),                                                                                                       // 46
              React.createElement(                                                                                     // 47
                'td',                                                                                                  // 47
                null,                                                                                                  // 47
                'Page Top/Bottom Spacing'                                                                              // 47
              )                                                                                                        // 47
            ),                                                                                                         // 45
            React.createElement(                                                                                       // 49
              'tr',                                                                                                    // 49
              { className: 'keybindingRow', style: { cursor: 'pointer' } },                                            // 49
              React.createElement(                                                                                     // 50
                'td',                                                                                                  // 50
                null,                                                                                                  // 50
                'ctrl+cmd+c'                                                                                           // 50
              ),                                                                                                       // 50
              React.createElement(                                                                                     // 51
                'td',                                                                                                  // 51
                null,                                                                                                  // 51
                'Display as Card'                                                                                      // 51
              )                                                                                                        // 51
            )                                                                                                          // 49
          )                                                                                                            // 32
        ),                                                                                                             // 31
        React.createElement(                                                                                           // 56
          'h5',                                                                                                        // 56
          { style: { borderTop: '1px solid lightgray', width: '100%' } },                                              // 56
          'Get the Code'                                                                                               // 56
        ),                                                                                                             // 56
        React.createElement('br', null),                                                                               // 56
        React.createElement(                                                                                           // 57
          Link,                                                                                                        // 57
          { to: 'http://github.com/clinical-meteor/meteor-on-fhir' },                                                  // 57
          'http://github.com/clinical-meteor/meteor-on-fhir'                                                           // 57
        ),                                                                                                             // 57
        React.createElement('br', null),                                                                               // 58
        React.createElement('br', null),                                                                               // 58
        React.createElement(                                                                                           // 60
          'h5',                                                                                                        // 60
          { style: { borderTop: '1px solid lightgray', width: '100%' } },                                              // 60
          'Licensing'                                                                                                  // 60
        ),                                                                                                             // 60
        React.createElement('br', null),                                                                               // 60
        'This software contains media assets which are licensed directly to Abigail Watson, and therefore may not be redistributed under MIT.  In general, feel free to copy the software itself, and modify it and use it for your own use; including commercial purposes.  When doing so, swap out all media assets and rebrand the forum under a different name.',
        React.createElement('br', null),                                                                               // 61
        React.createElement(CardTitle, {                                                                               // 62
          avatar: 'https://media.licdn.com/mpr/mpr/shrink_100_100/AAEAAQAAAAAAAAKeAAAAJDJkM2RmNTMzLWI4OGUtNDZmOC1iNTliLWYwOTc1ZWM0YmIyZg.jpg',
          title: 'Abigail Watson',                                                                                     // 64
          subtitle: 'Artistic License 2.0',                                                                            // 65
          href: 'http://www.meteor.com'                                                                                // 66
        })                                                                                                             // 62
      )                                                                                                                // 17
    );                                                                                                                 // 13
  };                                                                                                                   // 72
                                                                                                                       //
  return AboutAppCard;                                                                                                 // 6
}(React.Component);                                                                                                    // 6
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"AddDocument.js":["react","react-bootstrap","meteor/themeteorchef:bert","../../api/documents/methods.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/AddDocument.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AddDocument:function(){return AddDocument}});var React;module.import('react',{"default":function(v){React=v}});var FormGroup,FormControl;module.import('react-bootstrap',{"FormGroup":function(v){FormGroup=v},"FormControl":function(v){FormControl=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var insertDocument;module.import('../../api/documents/methods.js',{"insertDocument":function(v){insertDocument=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var handleInsertDocument = function handleInsertDocument(event) {                                                      // 6
  var target = event.target;                                                                                           // 7
  var title = target.value.trim();                                                                                     // 8
                                                                                                                       //
  if (title !== '' && event.keyCode === 13) {                                                                          // 10
    insertDocument.call({                                                                                              // 11
      title: title                                                                                                     // 12
    }, function (error) {                                                                                              // 11
      if (error) {                                                                                                     // 14
        Bert.alert(error.reason, 'danger');                                                                            // 15
      } else {                                                                                                         // 16
        target.value = '';                                                                                             // 17
        Bert.alert('Document added!', 'success');                                                                      // 18
      }                                                                                                                // 19
    });                                                                                                                // 20
  }                                                                                                                    // 21
};                                                                                                                     // 22
                                                                                                                       //
var AddDocument = function AddDocument() {                                                                             // 24
  return React.createElement(                                                                                          // 24
    FormGroup,                                                                                                         // 25
    null,                                                                                                              // 25
    React.createElement(FormControl, {                                                                                 // 26
      type: 'text',                                                                                                    // 27
      onKeyUp: handleInsertDocument,                                                                                   // 28
      placeholder: 'Type a document title and press enter...'                                                          // 29
    })                                                                                                                 // 26
  );                                                                                                                   // 25
};                                                                                                                     // 24
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"AdminSidebar.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-router-bootstrap","react-toolbox/lib/list","react","react-mixin","meteor/react-meteor-data",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/AdminSidebar.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AdminSidebar:function(){return AdminSidebar}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var IndexLinkContainer;module.import('react-router-bootstrap',{"IndexLinkContainer":function(v){IndexLinkContainer=v}});var List,ListItem;module.import('react-toolbox/lib/list',{"List":function(v){List=v},"ListItem":function(v){ListItem=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       //
var AdminSidebar = function (_React$Component) {                                                                       // 8
   _inherits(AdminSidebar, _React$Component);                                                                          // 8
                                                                                                                       //
   function AdminSidebar() {                                                                                           // 8
      _classCallCheck(this, AdminSidebar);                                                                             // 8
                                                                                                                       //
      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                // 8
   }                                                                                                                   // 8
                                                                                                                       //
   AdminSidebar.prototype.getMeteorData = function getMeteorData() {                                                   // 8
      var data = {                                                                                                     // 10
         style: {                                                                                                      // 11
            position: 'fixed',                                                                                         // 12
            top: '0px',                                                                                                // 13
            width: '100%',                                                                                             // 14
            display: 'flex',                                                                                           // 15
            // height: '6.4rem',                                                                                       //
            alignItems: 'center',                                                                                      // 17
            padding: '0 2.4rem',                                                                                       // 18
            opacity: Session.get('globalOpacity')                                                                      // 19
         },                                                                                                            // 11
         listItem: {                                                                                                   // 21
            display: 'inline-block',                                                                                   // 22
            position: 'relative'                                                                                       // 23
         }                                                                                                             // 21
      };                                                                                                               // 10
                                                                                                                       //
      return data;                                                                                                     // 27
   };                                                                                                                  // 28
                                                                                                                       //
   AdminSidebar.prototype.render = function render() {                                                                 // 8
      return React.createElement(                                                                                      // 31
         List,                                                                                                         // 32
         { style: { paddingLeft: '20px', position: 'absolute' } },                                                     // 32
         React.createElement(                                                                                          // 34
            IndexLinkContainer,                                                                                        // 34
            { to: '/dashboard' },                                                                                      // 34
            React.createElement(ListItem, { eventKey: 2, caption: 'Dashboard', href: '/dashboard' })                   // 35
         ),                                                                                                            // 34
         React.createElement(                                                                                          // 38
            IndexLinkContainer,                                                                                        // 38
            { to: '/weblog' },                                                                                         // 38
            React.createElement(ListItem, { eventKey: 3, caption: 'Weblog', href: '/weblog' })                         // 39
         ),                                                                                                            // 38
         React.createElement(                                                                                          // 42
            IndexLinkContainer,                                                                                        // 42
            { to: '/forum' },                                                                                          // 42
            React.createElement(ListItem, { eventKey: 3, caption: 'Forum', href: '/forum' })                           // 43
         ),                                                                                                            // 42
         React.createElement(                                                                                          // 46
            IndexLinkContainer,                                                                                        // 46
            { to: '/' },                                                                                               // 46
            React.createElement(ListItem, { eventKey: 4, caption: 'Index', href: '/' })                                // 47
         ),                                                                                                            // 46
         React.createElement(                                                                                          // 50
            IndexLinkContainer,                                                                                        // 50
            { to: '/devices' },                                                                                        // 50
            React.createElement(ListItem, { eventKey: 11, caption: 'Devices', href: '/devices' })                      // 51
         ),                                                                                                            // 50
         React.createElement(                                                                                          // 54
            IndexLinkContainer,                                                                                        // 54
            { to: '/observations' },                                                                                   // 54
            React.createElement(ListItem, { eventKey: 12, caption: 'Observations', href: '/observations' })            // 55
         ),                                                                                                            // 54
         React.createElement(                                                                                          // 58
            IndexLinkContainer,                                                                                        // 58
            { to: '/breathalyzer' },                                                                                   // 58
            React.createElement(ListItem, { eventKey: 13, caption: 'Breathalyzer', href: '/breathalyzer' })            // 59
         ),                                                                                                            // 58
         React.createElement(                                                                                          // 62
            IndexLinkContainer,                                                                                        // 62
            { to: '/users' },                                                                                          // 62
            React.createElement(ListItem, { eventKey: 6, caption: 'Users', href: '/users' })                           // 63
         ),                                                                                                            // 62
         React.createElement(                                                                                          // 66
            IndexLinkContainer,                                                                                        // 66
            { to: '/patients' },                                                                                       // 66
            React.createElement(ListItem, { eventKey: 7, caption: 'Patients', href: '/patients' })                     // 67
         ),                                                                                                            // 66
         React.createElement(                                                                                          // 70
            IndexLinkContainer,                                                                                        // 70
            { to: '/practitioners' },                                                                                  // 70
            React.createElement(ListItem, { eventKey: 8, caption: 'Practitioners', href: '/practitioners' })           // 71
         ),                                                                                                            // 70
         React.createElement(                                                                                          // 74
            IndexLinkContainer,                                                                                        // 74
            { to: '/theming' },                                                                                        // 74
            React.createElement(ListItem, { eventKey: 9, caption: 'Theming', href: '/theming' })                       // 75
         ),                                                                                                            // 74
         React.createElement(                                                                                          // 78
            IndexLinkContainer,                                                                                        // 78
            { to: '/about' },                                                                                          // 78
            React.createElement(ListItem, { eventKey: 10, caption: 'About', href: '/about' })                          // 79
         )                                                                                                             // 78
      );                                                                                                               // 32
   };                                                                                                                  // 84
                                                                                                                       //
   return AdminSidebar;                                                                                                // 8
}(React.Component);                                                                                                    // 8
AdminSidebar.propTypes = {};                                                                                           // 86
AdminSidebar.defaultProps = {};                                                                                        // 87
ReactMixin(AdminSidebar.prototype, ReactMeteorData);                                                                   // 88
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"AuthenticatedNavigation.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-router","react-router-bootstrap","react-bootstrap","meteor/meteor","meteor/session","react-toolbox/lib/list","react-toolbox/lib/menu",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/AuthenticatedNavigation.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AuthenticatedNavigation:function(){return AuthenticatedNavigation}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});var IndexLinkContainer,LinkContainer;module.import('react-router-bootstrap',{"IndexLinkContainer":function(v){IndexLinkContainer=v},"LinkContainer":function(v){LinkContainer=v}});var Nav,NavItem,NavDropdown,Navbar;module.import('react-bootstrap',{"Nav":function(v){Nav=v},"NavItem":function(v){NavItem=v},"NavDropdown":function(v){NavDropdown=v},"Navbar":function(v){Navbar=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var List,ListItem,ListSubHeader,ListDivider,ListCheckbox;module.import('react-toolbox/lib/list',{"List":function(v){List=v},"ListItem":function(v){ListItem=v},"ListSubHeader":function(v){ListSubHeader=v},"ListDivider":function(v){ListDivider=v},"ListCheckbox":function(v){ListCheckbox=v}});var Menu,IconMenu,MenuItem,MenuDivider;module.import('react-toolbox/lib/menu',{"Menu":function(v){Menu=v},"IconMenu":function(v){IconMenu=v},"MenuItem":function(v){MenuItem=v},"MenuDivider":function(v){MenuDivider=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       //
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       //
Session.get('notificationMenuOpen', true);                                                                             // 15
                                                                                                                       //
var AuthenticatedNavigation = function (_React$Component) {                                                            // 17
  _inherits(AuthenticatedNavigation, _React$Component);                                                                // 17
                                                                                                                       //
  function AuthenticatedNavigation() {                                                                                 // 17
    _classCallCheck(this, AuthenticatedNavigation);                                                                    // 17
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 17
  }                                                                                                                    // 17
                                                                                                                       //
  AuthenticatedNavigation.prototype.getMeteorData = function getMeteorData() {                                         // 17
    var data = {                                                                                                       // 19
      style: {                                                                                                         // 20
        position: 'fixed',                                                                                             // 21
        top: '0px',                                                                                                    // 22
        width: '100%',                                                                                                 // 23
        display: 'flex',                                                                                               // 24
        // height: '6.4rem',                                                                                           //
        alignItems: 'center',                                                                                          // 26
        padding: '0 2.4rem',                                                                                           // 27
        opacity: Session.get('globalOpacity')                                                                          // 28
      },                                                                                                               // 20
      listItem: {                                                                                                      // 30
        display: 'inline-block',                                                                                       // 31
        position: 'relative'                                                                                           // 32
      },                                                                                                               // 30
      state: {                                                                                                         // 34
        notificationMenuOpen: Session.get('notificationMenuOpen')                                                      // 35
      }                                                                                                                // 34
    };                                                                                                                 // 19
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 40
      var user = Meteor.user();                                                                                        // 41
      var name = user && user.profile ? user.profile.name : '';                                                        // 42
      data.user = name.given + ' ' + name.family;                                                                      // 43
    } else {                                                                                                           // 44
      data.user = '';                                                                                                  // 45
    }                                                                                                                  // 46
                                                                                                                       //
    return data;                                                                                                       // 48
  };                                                                                                                   // 49
                                                                                                                       //
  AuthenticatedNavigation.prototype.userName = function userName() {                                                   // 17
    return this.data.user;                                                                                             // 52
  };                                                                                                                   // 53
                                                                                                                       //
  AuthenticatedNavigation.prototype.render = function render() {                                                       // 17
                                                                                                                       //
    // <ListItem                                                                                                       //
    //   avatar='https://dl.dropboxusercontent.com/u/2247264/assets/m.jpg'                                             //
    //   caption='Dr. Manhattan'                                                                                       //
    //   legend="Jonathan 'Jon' Osterman"                                                                              //
    //   rightIcon='done block'                                                                                        //
    // />                                                                                                              //
    // <ListItem                                                                                                       //
    //   avatar='https://dl.dropboxusercontent.com/u/2247264/assets/o.jpg'                                             //
    //   caption='Ozymandias'                                                                                          //
    //   legend='Adrian Veidt'                                                                                         //
    //   rightIcon='done block'                                                                                        //
    // />                                                                                                              //
    // <ListItem                                                                                                       //
    //   avatar='https://dl.dropboxusercontent.com/u/2247264/assets/r.jpg'                                             //
    //   caption='Rorschach'                                                                                           //
    //   legend='Walter Joseph Kovacs'                                                                                 //
    //   rightIcon='done block'                                                                                        //
    // />                                                                                                              //
                                                                                                                       //
    return React.createElement(                                                                                        // 76
      'div',                                                                                                           // 77
      null,                                                                                                            // 77
      React.createElement(                                                                                             // 78
        Nav,                                                                                                           // 78
        { pullRight: true },                                                                                           // 78
        React.createElement(                                                                                           // 80
          NavItem,                                                                                                     // 80
          { id: 'authenticatedNavDropdown', eventKey: 4, id: 'authenticatedUsername', onClick: this.toggleNotificationMenu },
          this.data.user                                                                                               // 81
        )                                                                                                              // 80
      ),                                                                                                               // 78
      React.createElement(                                                                                             // 84
        Nav,                                                                                                           // 84
        { id: 'authenticatedUserMenu', pullRight: true },                                                              // 84
        React.createElement(                                                                                           // 85
          IconMenu,                                                                                                    // 85
          { active: this.data.state.notificationMenuOpen, eventKey: 4, title: this.data.user, icon: 'whatshot', position: 'top-right', menuRipple: true },
          React.createElement(                                                                                         // 86
            List,                                                                                                      // 86
            { selectable: true, ripple: true, outline: true, className: 'notificationMenu' },                          // 86
            React.createElement(ListDivider, null),                                                                    // 87
            React.createElement(ListItem, { className: 'profileMenuItem', leftIcon: 'face', eventKey: 4.1, onClick: this.handleProfile, caption: 'Profile' }),
            React.createElement(ListItem, { id: 'logoutMenuItem', className: 'logoutMenuItem', leftIcon: 'power_settings_new', eventKey: 4.2, onClick: this.handleLogout, caption: 'Logout' })
          )                                                                                                            // 86
        )                                                                                                              // 85
      )                                                                                                                // 84
    );                                                                                                                 // 77
  };                                                                                                                   // 97
                                                                                                                       //
  AuthenticatedNavigation.prototype.handleLogout = function handleLogout() {                                           // 17
    Meteor.logout(function () {                                                                                        // 100
      return browserHistory.push('/login');                                                                            // 100
    });                                                                                                                // 100
  };                                                                                                                   // 101
                                                                                                                       //
  AuthenticatedNavigation.prototype.handleProfile = function handleProfile() {                                         // 17
    browserHistory.push('/myprofile');                                                                                 // 104
    $('body')[0].click();                                                                                              // 105
  };                                                                                                                   // 106
                                                                                                                       //
  AuthenticatedNavigation.prototype.toggleNotificationMenu = function toggleNotificationMenu() {                       // 17
    if (Session.get('notificationMenuOpen')) {                                                                         // 109
      Session.set('notificationMenuOpen', false);                                                                      // 110
    } else {                                                                                                           // 111
      Session.set('notificationMenuOpen', true);                                                                       // 112
    }                                                                                                                  // 113
    $('#authenticatedUserMenu .material-icons')[0].click();                                                            // 114
  };                                                                                                                   // 115
                                                                                                                       //
  return AuthenticatedNavigation;                                                                                      // 17
}(React.Component);                                                                                                    // 17
AuthenticatedNavigation.propTypes = {};                                                                                // 117
AuthenticatedNavigation.defaultProps = {};                                                                             // 120
ReactMixin(AuthenticatedNavigation.prototype, ReactMeteorData);                                                        // 123
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"AuthenticatedSidebar.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-router-bootstrap","react-toolbox/lib/list","react","react-mixin","meteor/react-meteor-data",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/AuthenticatedSidebar.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AuthenticatedSidebar:function(){return AuthenticatedSidebar}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var IndexLinkContainer;module.import('react-router-bootstrap',{"IndexLinkContainer":function(v){IndexLinkContainer=v}});var List,ListItem;module.import('react-toolbox/lib/list',{"List":function(v){List=v},"ListItem":function(v){ListItem=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       //
var AuthenticatedSidebar = function (_React$Component) {                                                               // 8
  _inherits(AuthenticatedSidebar, _React$Component);                                                                   // 8
                                                                                                                       //
  function AuthenticatedSidebar() {                                                                                    // 8
    _classCallCheck(this, AuthenticatedSidebar);                                                                       // 8
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 8
  }                                                                                                                    // 8
                                                                                                                       //
  AuthenticatedSidebar.prototype.getMeteorData = function getMeteorData() {                                            // 8
    var data = {                                                                                                       // 10
      style: {                                                                                                         // 11
        position: 'fixed',                                                                                             // 12
        top: '0px',                                                                                                    // 13
        width: '100%',                                                                                                 // 14
        display: 'flex',                                                                                               // 15
        // height: '6.4rem',                                                                                           //
        alignItems: 'center',                                                                                          // 17
        padding: '0 2.4rem',                                                                                           // 18
        opacity: Session.get('globalOpacity')                                                                          // 19
      },                                                                                                               // 11
      listItem: {                                                                                                      // 21
        display: 'inline-block',                                                                                       // 22
        position: 'relative'                                                                                           // 23
      }                                                                                                                // 21
    };                                                                                                                 // 10
                                                                                                                       //
    return data;                                                                                                       // 27
  };                                                                                                                   // 28
                                                                                                                       //
  AuthenticatedSidebar.prototype.render = function render() {                                                          // 8
    return React.createElement(                                                                                        // 31
      List,                                                                                                            // 32
      { style: { paddingLeft: '20px', position: 'absolute' } },                                                        // 32
      React.createElement(                                                                                             // 34
        IndexLinkContainer,                                                                                            // 34
        { to: '/weblog' },                                                                                             // 34
        React.createElement(ListItem, { eventKey: 3, caption: 'Weblog', href: '/weblog' })                             // 35
      ),                                                                                                               // 34
      React.createElement(                                                                                             // 38
        IndexLinkContainer,                                                                                            // 38
        { to: '/devices' },                                                                                            // 38
        React.createElement(ListItem, { eventKey: 11, caption: 'Devices', href: '/devices' })                          // 39
      ),                                                                                                               // 38
      React.createElement(                                                                                             // 42
        IndexLinkContainer,                                                                                            // 42
        { to: '/observations' },                                                                                       // 42
        React.createElement(ListItem, { eventKey: 12, caption: 'Observations', href: '/observations' })                // 43
      ),                                                                                                               // 42
      React.createElement(                                                                                             // 46
        IndexLinkContainer,                                                                                            // 46
        { to: '/breathalyzer' },                                                                                       // 46
        React.createElement(ListItem, { eventKey: 13, caption: 'Breathalyzer', href: '/breathalyzer' })                // 47
      ),                                                                                                               // 46
      React.createElement(                                                                                             // 50
        IndexLinkContainer,                                                                                            // 50
        { to: '/' },                                                                                                   // 50
        React.createElement(ListItem, { eventKey: 4, caption: 'Index', href: '/' })                                    // 51
      ),                                                                                                               // 50
      React.createElement(                                                                                             // 54
        IndexLinkContainer,                                                                                            // 54
        { to: '/about' },                                                                                              // 54
        React.createElement(ListItem, { eventKey: 10, caption: 'About', href: '/about' })                              // 55
      )                                                                                                                // 54
    );                                                                                                                 // 32
  };                                                                                                                   // 60
                                                                                                                       //
  return AuthenticatedSidebar;                                                                                         // 8
}(React.Component);                                                                                                    // 8
AuthenticatedSidebar.propTypes = {};                                                                                   // 62
AuthenticatedSidebar.defaultProps = {};                                                                                // 63
ReactMixin(AuthenticatedSidebar.prototype, ReactMeteorData);                                                           // 64
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"DynamicSpacer.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","meteor/session",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/DynamicSpacer.jsx                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({DynamicSpacer:function(){return DynamicSpacer}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       //
var DynamicSpacer = function (_React$Component) {                                                                      // 7
  _inherits(DynamicSpacer, _React$Component);                                                                          // 7
                                                                                                                       //
  function DynamicSpacer() {                                                                                           // 7
    _classCallCheck(this, DynamicSpacer);                                                                              // 7
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 7
  }                                                                                                                    // 7
                                                                                                                       //
  DynamicSpacer.prototype.getMeteorData = function getMeteorData() {                                                   // 7
    var data = {                                                                                                       // 9
      style: {                                                                                                         // 10
        // height: '0rem',                                                                                             //
        height: '1px',                                                                                                 // 12
        'WebkitTransition': 'ease .2s',                                                                                // 13
        'transition': 'ease .2s'                                                                                       // 14
      }                                                                                                                // 10
    };                                                                                                                 // 9
                                                                                                                       //
    if (Session.get('hasPageVerticalPadding')) {                                                                       // 18
      data.style.height = '3.2rem';                                                                                    // 19
    }                                                                                                                  // 20
                                                                                                                       //
    return data;                                                                                                       // 22
  };                                                                                                                   // 23
                                                                                                                       //
  DynamicSpacer.prototype.render = function render() {                                                                 // 7
    return React.createElement('div', { 'class': 'spacer', style: this.data.style });                                  // 26
  };                                                                                                                   // 29
                                                                                                                       //
  return DynamicSpacer;                                                                                                // 7
}(React.Component);                                                                                                    // 7
                                                                                                                       //
DynamicSpacer.propTypes = {};                                                                                          // 33
ReactMixin(DynamicSpacer.prototype, ReactMeteorData);                                                                  // 34
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Footer.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/button","./OpacitySlider","meteor/session","./appbar",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/Footer.jsx                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Footer:function(){return Footer}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var OpacitySlider;module.import('./OpacitySlider',{"default":function(v){OpacitySlider=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var style;module.import('./appbar',{"default":function(v){style=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       //
var Footer = function (_React$Component) {                                                                             // 12
  _inherits(Footer, _React$Component);                                                                                 // 12
                                                                                                                       //
  function Footer() {                                                                                                  // 12
    _classCallCheck(this, Footer);                                                                                     // 12
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 12
  }                                                                                                                    // 12
                                                                                                                       //
  Footer.prototype.getMeteorData = function getMeteorData() {                                                          // 12
    var data = {                                                                                                       // 14
      style: {                                                                                                         // 15
        position: 'fixed',                                                                                             // 16
        bottom: '0px',                                                                                                 // 17
        width: '100%',                                                                                                 // 18
        height: '6.4rem',                                                                                              // 19
        alignItems: 'center',                                                                                          // 20
        WebkitTransition: 'ease .2s',                                                                                  // 21
        transition: 'ease .2s',                                                                                        // 22
        opacity: Session.get('globalOpacity')                                                                          // 23
      },                                                                                                               // 15
      westStyle: {                                                                                                     // 25
        display: 'flex',                                                                                               // 26
        flexDirection: 'row',                                                                                          // 27
        position: 'absolute',                                                                                          // 28
        left: '0px',                                                                                                   // 29
        height: '6.4rem',                                                                                              // 30
        bottom: '2.4rem'                                                                                               // 31
      },                                                                                                               // 25
      eastStyle: {                                                                                                     // 33
        display: 'flex',                                                                                               // 34
        flexDirection: 'row',                                                                                          // 35
        position: 'absolute',                                                                                          // 36
        right: '0px',                                                                                                  // 37
        height: '6.4rem',                                                                                              // 38
        padding: '0 2.4rem',                                                                                           // 39
        paddingTop: '1.2rem'                                                                                           // 40
      }                                                                                                                // 33
    };                                                                                                                 // 14
                                                                                                                       //
    if (!Session.get('showNavbars')) {                                                                                 // 44
      data.style.bottom = '-100px';                                                                                    // 45
    }                                                                                                                  // 46
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 50
      data.style.color = 'black';                                                                                      // 51
      data.style.background = 'white';                                                                                 // 52
    } else {                                                                                                           // 53
      data.style.color = 'white';                                                                                      // 54
      data.style.background = 'black';                                                                                 // 55
    }                                                                                                                  // 56
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 59
      data.style.filter = 'blur(3px)';                                                                                 // 60
      data.style.webkitFilter = 'blur(3px)';                                                                           // 61
    }                                                                                                                  // 62
                                                                                                                       //
    //phone layout                                                                                                     //
    if (Session.get('appWidth') < 768) {                                                                               // 65
      data.westStyle.visibility = 'hidden';                                                                            // 66
      data.eastStyle.visibility = 'hidden';                                                                            // 67
    }                                                                                                                  // 68
                                                                                                                       //
    return data;                                                                                                       // 70
  };                                                                                                                   // 71
                                                                                                                       //
  Footer.prototype.clickOnDarkroomButton = function clickOnDarkroomButton() {                                          // 12
    Session.toggle('darkroomEnabled');                                                                                 // 74
  };                                                                                                                   // 75
                                                                                                                       //
  Footer.prototype.clickOnBlurButton = function clickOnBlurButton() {                                                  // 12
    Session.toggle('glassBlurEnabled');                                                                                // 78
  };                                                                                                                   // 79
                                                                                                                       //
  Footer.prototype.render = function render() {                                                                        // 12
    return React.createElement(                                                                                        // 82
      'footer',                                                                                                        // 83
      { id: 'appFooter', className: style.appbar, style: this.data.style },                                            // 83
      React.createElement(                                                                                             // 84
        'div',                                                                                                         // 84
        { className: 'westFooterElements', style: this.data.westStyle },                                               // 84
        React.createElement(Button, { ref: 'blurButton', className: style.button, icon: 'blur_on', floating: true, accent: true, onClick: this.clickOnBlurButton, style: { marginLeft: '40px' } }),
        React.createElement(Button, { ref: 'darkroomButton', className: style.button, icon: 'exposure', floating: true, accent: true, onClick: this.clickOnDarkroomButton, style: { marginLeft: '20px' } })
      ),                                                                                                               // 84
      React.createElement(                                                                                             // 88
        'div',                                                                                                         // 88
        { className: 'eastFooterElements', style: this.data.eastStyle },                                               // 88
        React.createElement(OpacitySlider, null)                                                                       // 89
      )                                                                                                                // 88
    );                                                                                                                 // 83
  };                                                                                                                   // 93
                                                                                                                       //
  return Footer;                                                                                                       // 12
}(React.Component);                                                                                                    // 12
                                                                                                                       //
Footer.propTypes = {};                                                                                                 // 96
Footer.defaultProps = {};                                                                                              // 97
ReactMixin(Footer.prototype, ReactMeteorData);                                                                         // 98
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"GlassApp.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","react-dom","meteor/react-meteor-data","meteor/session","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/GlassApp.jsx                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({GlassApp:function(){return GlassApp}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactDOM;module.import('react-dom',{"default":function(v){ReactDOM=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
Session.setDefault('backgroundColor', '#eeeeee');                                                                      // 9
Session.setDefault('darkroomEnabled', true);                                                                           // 10
Session.setDefault('glassBlurEnabled', false);                                                                         // 11
Session.setDefault('backgroundBlurEnabled', false);                                                                    // 12
                                                                                                                       //
var GlassApp = function (_React$Component) {                                                                           // 15
  _inherits(GlassApp, _React$Component);                                                                               // 15
                                                                                                                       //
  function GlassApp(props) {                                                                                           // 16
    _classCallCheck(this, GlassApp);                                                                                   // 16
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 16
  }                                                                                                                    // 18
                                                                                                                       //
  GlassApp.prototype.componentDidMount = function componentDidMount() {};                                              // 15
                                                                                                                       //
  GlassApp.prototype.getMeteorData = function getMeteorData() {                                                        // 15
    var data = {                                                                                                       // 23
      app: {                                                                                                           // 24
        style: {                                                                                                       // 25
          width: '100%',                                                                                               // 26
          height: '100%',                                                                                              // 27
          position: 'absolute',                                                                                        // 28
          background: 'inherit'                                                                                        // 29
        }                                                                                                              // 25
      }                                                                                                                // 24
    };                                                                                                                 // 23
                                                                                                                       //
    data.app.style = {                                                                                                 // 34
      zIndex: 1,                                                                                                       // 35
      cursor: 'pointer',                                                                                               // 36
      background: '#eeeeee'                                                                                            // 37
    };                                                                                                                 // 34
                                                                                                                       //
    // and we're on a tablet or larger device (no phone)                                                               //
    if (Meteor.user() && Meteor.user().profile && Meteor.user().profile.theme) {                                       // 41
                                                                                                                       //
      if (Meteor.user().profile.theme.backgroundColor) {                                                               // 43
        data.app.style.background = Meteor.user().profile.theme.backgroundColor;                                       // 44
      } else {                                                                                                         // 45
        data.app.style.background = 'inherit';                                                                         // 46
      }                                                                                                                // 47
                                                                                                                       //
      if (Meteor.user().profile.theme.backgroundImagePath) {                                                           // 49
        data.app.style = {                                                                                             // 50
          backgroundImage: 'url(' + Meteor.user().profile.theme.backgroundImagePath + ')',                             // 51
          WebkitBackgroundSize: 'cover',                                                                               // 52
          MozBackgroundSize: 'cover',                                                                                  // 53
          OBackgroundSize: 'cover',                                                                                    // 54
          backgroundSize: 'cover'                                                                                      // 55
        };                                                                                                             // 50
      } else {                                                                                                         // 57
        backgroundImage: 'none';                                                                                       // 58
      }                                                                                                                // 59
    }                                                                                                                  // 61
                                                                                                                       //
    data.app.style.width = '100%';                                                                                     // 63
    data.app.style.height = '100%';                                                                                    // 64
    data.app.style.position = 'absolute';                                                                              // 65
                                                                                                                       //
    return data;                                                                                                       // 67
  };                                                                                                                   // 68
                                                                                                                       //
  GlassApp.prototype.render = function render() {                                                                      // 15
    return React.createElement(                                                                                        // 71
      'div',                                                                                                           // 72
      null,                                                                                                            // 72
      React.createElement(                                                                                             // 73
        'div',                                                                                                         // 73
        { 'data-react-toolbox': 'app', style: this.data.app.style },                                                   // 73
        this.props.children                                                                                            // 74
      )                                                                                                                // 73
    );                                                                                                                 // 72
  };                                                                                                                   // 78
                                                                                                                       //
  return GlassApp;                                                                                                     // 15
}(React.Component);                                                                                                    // 15
                                                                                                                       //
ReactMixin(GlassApp.prototype, ReactMeteorData);                                                                       // 81
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"GlassCard.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","meteor/session","react-toolbox/lib/card",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/GlassCard.jsx                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({GlassCard:function(){return GlassCard}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var Card;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
var GlassCard = function (_React$Component) {                                                                          // 7
  _inherits(GlassCard, _React$Component);                                                                              // 7
                                                                                                                       //
  function GlassCard(props) {                                                                                          // 8
    _classCallCheck(this, GlassCard);                                                                                  // 8
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 8
  }                                                                                                                    // 10
                                                                                                                       //
  GlassCard.prototype.getMeteorData = function getMeteorData() {                                                       // 7
                                                                                                                       //
    var data = {                                                                                                       // 14
      style: {}                                                                                                        // 15
    };                                                                                                                 // 14
                                                                                                                       //
    if (this.props && this.props.style) {                                                                              // 18
      data.style = this.props.style;                                                                                   // 19
    }                                                                                                                  // 20
                                                                                                                       //
    if (Session.get('globalOpacity')) {                                                                                // 22
      data.style.opacity = Session.get('globalOpacity');                                                               // 23
    }                                                                                                                  // 24
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 26
      data.style.color = 'black';                                                                                      // 27
      data.style.background = 'white';                                                                                 // 28
    } else {                                                                                                           // 29
      data.style.color = 'white';                                                                                      // 30
      data.style.background = 'black';                                                                                 // 31
    }                                                                                                                  // 32
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 35
      data.style.filter = 'blur(3px)';                                                                                 // 36
      data.style.webkitFilter = 'blur(3px)';                                                                           // 37
    }                                                                                                                  // 38
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 41
      data.style.backdropFilter = 'blur(5px)';                                                                         // 42
    }                                                                                                                  // 43
                                                                                                                       //
    return data;                                                                                                       // 45
  };                                                                                                                   // 46
                                                                                                                       //
  GlassCard.prototype.render = function render() {                                                                     // 7
    return React.createElement(                                                                                        // 49
      Card,                                                                                                            // 50
      { id: this.props.id, style: this.data.style },                                                                   // 50
      this.props.children                                                                                              // 51
    );                                                                                                                 // 50
  };                                                                                                                   // 54
                                                                                                                       //
  return GlassCard;                                                                                                    // 7
}(React.Component);                                                                                                    // 7
GlassCard.propTypes = {};                                                                                              // 56
GlassCard.defaultProps = {};                                                                                           // 59
ReactMixin(GlassCard.prototype, ReactMeteorData);                                                                      // 62
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Header.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-toolbox/lib/button","react","react-mixin","meteor/meteor","meteor/react-meteor-data","meteor/session","./AuthenticatedNavigation","./PublicNavigation","./appbar",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/Header.jsx                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Header:function(){return Header}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var IconButton;module.import('react-toolbox/lib/button',{"default":function(v){IconButton=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var AuthenticatedNavigation;module.import('./AuthenticatedNavigation',{"AuthenticatedNavigation":function(v){AuthenticatedNavigation=v}});var PublicNavigation;module.import('./PublicNavigation',{"PublicNavigation":function(v){PublicNavigation=v}});var style;module.import('./appbar',{"default":function(v){style=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
var Header = function (_React$Component) {                                                                             // 14
  _inherits(Header, _React$Component);                                                                                 // 14
                                                                                                                       //
  function Header() {                                                                                                  // 14
    _classCallCheck(this, Header);                                                                                     // 14
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 14
  }                                                                                                                    // 14
                                                                                                                       //
  Header.prototype.getMeteorData = function getMeteorData() {                                                          // 14
    var data = {                                                                                                       // 16
      style: {                                                                                                         // 17
        position: 'fixed',                                                                                             // 18
        top: '0px',                                                                                                    // 19
        width: '100%',                                                                                                 // 20
        display: 'flex',                                                                                               // 21
        height: '6.4rem',                                                                                              // 22
        alignItems: 'center',                                                                                          // 23
        padding: '0 2.4rem',                                                                                           // 24
        opacity: Session.get('globalOpacity'),                                                                         // 25
        WebkitTransition: 'ease .2s',                                                                                  // 26
        transition: 'ease .2s',                                                                                        // 27
        zIndex: 100                                                                                                    // 28
      },                                                                                                               // 17
      westStyle: {                                                                                                     // 30
        display: 'flex',                                                                                               // 31
        flexDirection: 'row',                                                                                          // 32
        position: 'absolute',                                                                                          // 33
        left: '0px'                                                                                                    // 34
      },                                                                                                               // 30
      eastStyle: {                                                                                                     // 36
        display: 'flex',                                                                                               // 37
        flexDirection: 'row',                                                                                          // 38
        position: 'absolute',                                                                                          // 39
        right: '0px',                                                                                                  // 40
        height: '6.4rem',                                                                                              // 41
        paddingLeft: '1.2rem',                                                                                         // 42
        paddingRight: '1.2rem',                                                                                        // 43
        paddingTop: '0.6rem'                                                                                           // 44
      },                                                                                                               // 36
      app: {                                                                                                           // 46
        title: 'Meteor on FHIR Forum'                                                                                  // 47
      }                                                                                                                // 46
    };                                                                                                                 // 16
                                                                                                                       //
    if (Meteor.settings && Meteor.settings['public'] && Meteor.settings['public'].title) {                             // 51
      data.app.title = Meteor.settings['public'].title;                                                                // 52
    }                                                                                                                  // 53
                                                                                                                       //
    if (!Session.get('showNavbars')) {                                                                                 // 55
      data.style.top = '-60px';                                                                                        // 56
    }                                                                                                                  // 57
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 61
      data.style.color = 'black';                                                                                      // 62
      data.style.background = 'white';                                                                                 // 63
    } else {                                                                                                           // 64
      data.style.color = 'white';                                                                                      // 65
      data.style.background = 'black';                                                                                 // 66
    }                                                                                                                  // 67
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 70
      data.style.filter = 'blur(3px)';                                                                                 // 71
      data.style.webkitFilter = 'blur(3px)';                                                                           // 72
    }                                                                                                                  // 73
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 75
      data.hasUser = true;                                                                                             // 76
    } else {                                                                                                           // 77
      data.hasUser = false;                                                                                            // 78
    }                                                                                                                  // 79
                                                                                                                       //
    return data;                                                                                                       // 81
  };                                                                                                                   // 82
                                                                                                                       //
  Header.prototype.toggleSidebar = function toggleSidebar() {                                                          // 14
    Session.toggle('sidebarPinned');                                                                                   // 85
  };                                                                                                                   // 86
                                                                                                                       //
  Header.prototype.clickOnBackdropBlurButton = function clickOnBackdropBlurButton() {                                  // 14
    Session.toggle('backgroundBlurEnabled');                                                                           // 89
  };                                                                                                                   // 90
                                                                                                                       //
  Header.prototype.toggleDrawerActive = function toggleDrawerActive() {                                                // 14
    Session.toggle('drawerPinned');                                                                                    // 93
  };                                                                                                                   // 94
                                                                                                                       //
  Header.prototype.renderNavigation = function renderNavigation(hasUser) {                                             // 14
    if (hasUser) {                                                                                                     // 97
      return React.createElement(AuthenticatedNavigation, null);                                                       // 98
    } else {                                                                                                           // 99
      return React.createElement(PublicNavigation, null);                                                              // 100
    }                                                                                                                  // 101
  };                                                                                                                   // 102
                                                                                                                       //
  Header.prototype.render = function render() {                                                                        // 14
    return React.createElement(                                                                                        // 105
      'header',                                                                                                        // 106
      { className: style.appbar, flat: true, style: this.data.style },                                                 // 106
      React.createElement(                                                                                             // 107
        IconButton,                                                                                                    // 107
        { icon: 'menu', onClick: this.toggleDrawerActive, style: { zIndex: 10000, fontSize: '140%' } },                // 107
        this.data.app.title                                                                                            // 107
      ),                                                                                                               // 107
      React.createElement(                                                                                             // 108
        'div',                                                                                                         // 108
        { className: 'eastHeaderElements', style: this.data.eastStyle },                                               // 108
        this.renderNavigation(this.data.hasUser)                                                                       // 109
      )                                                                                                                // 108
    );                                                                                                                 // 106
  };                                                                                                                   // 113
                                                                                                                       //
  return Header;                                                                                                       // 14
}(React.Component);                                                                                                    // 14
                                                                                                                       //
Header.defaultProps = {};                                                                                              // 118
ReactMixin(Header.prototype, ReactMeteorData);                                                                         // 119
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"MobilePadding.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/MobilePadding.jsx                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({MobilePadding:function(){return MobilePadding}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var MobilePadding = function (_React$Component) {                                                                      // 6
  _inherits(MobilePadding, _React$Component);                                                                          // 6
                                                                                                                       //
  function MobilePadding(props) {                                                                                      // 7
    _classCallCheck(this, MobilePadding);                                                                              // 7
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 7
  }                                                                                                                    // 9
                                                                                                                       //
  MobilePadding.prototype.getMeteorData = function getMeteorData() {                                                   // 6
    var data = {                                                                                                       // 12
      style: {}                                                                                                        // 13
    };                                                                                                                 // 12
                                                                                                                       //
    //phone layout                                                                                                     //
    if (Session.get('appWidth') <= 1536) {                                                                             // 17
      data.style.width = Session.get('appWidth') - 40 + "px";                                                          // 18
      data.style.marginLeft = "20px";                                                                                  // 19
      data.style.marginRight = "20px";                                                                                 // 20
      data.style.position = "absolute";                                                                                // 21
    }                                                                                                                  // 22
                                                                                                                       //
    return data;                                                                                                       // 24
  };                                                                                                                   // 25
                                                                                                                       //
  MobilePadding.prototype.render = function render() {                                                                 // 6
    return React.createElement(                                                                                        // 28
      'div',                                                                                                           // 29
      { className: 'mobilePadding', style: this.data.style },                                                          // 29
      this.props.children                                                                                              // 30
    );                                                                                                                 // 29
  };                                                                                                                   // 33
                                                                                                                       //
  return MobilePadding;                                                                                                // 6
}(React.Component);                                                                                                    // 6
                                                                                                                       //
MobilePadding.propTypes = {};                                                                                          // 36
MobilePadding.defaultProps = {};                                                                                       // 37
ReactMixin(MobilePadding.prototype, ReactMeteorData);                                                                  // 38
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"OpacitySlider.jsx":["meteor/react-meteor-data","meteor/session","react","react-toolbox/lib/app_bar","react-toolbox/lib/button","react-toolbox/lib/slider",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/OpacitySlider.jsx                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var createContainer;module.import('meteor/react-meteor-data',{"createContainer":function(v){createContainer=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var React;module.import('react',{"default":function(v){React=v}});var AppBar;module.import('react-toolbox/lib/app_bar',{"default":function(v){AppBar=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Slider;module.import('react-toolbox/lib/slider',{"default":function(v){Slider=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
Session.setDefault('globalOpacity', 0.95);                                                                             // 8
                                                                                                                       //
var OpacitySlider = React.createClass({                                                                                // 10
  displayName: 'OpacitySlider',                                                                                        // 10
                                                                                                                       //
  mixins: [ReactMeteorData],                                                                                           // 11
  getMeteorData: function getMeteorData() {                                                                            // 12
    return {                                                                                                           // 13
      opacity: Session.get('globalOpacity')                                                                            // 14
    };                                                                                                                 // 13
  },                                                                                                                   // 16
  onChange: function onChange(value) {                                                                                 // 17
    //console.log('OpacitySlider changed...', value)                                                                   //
    Session.set('globalOpacity', value);                                                                               // 19
  },                                                                                                                   // 20
  render: function render() {                                                                                          // 21
    return React.createElement(                                                                                        // 22
      'div',                                                                                                           // 23
      { style: { width: "300px" } },                                                                                   // 23
      React.createElement(Slider, { min: 0, max: 1, step: 0.01, ref: 'opacitySlider', editable: true, value: this.data.opacity, onChange: this.onChange, style: { width: "300px" } })
    );                                                                                                                 // 23
  }                                                                                                                    // 27
});                                                                                                                    // 10
                                                                                                                       //
module.export("default",exports.default=(OpacitySlider));                                                              // 30
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PageContainer.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","meteor/session","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/PageContainer.jsx                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PageContainer:function(){return PageContainer}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var createContainer;module.import('meteor/react-meteor-data',{"createContainer":function(v){createContainer=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 9
  Session.set('appSurfaceOffset', false);                                                                              // 10
});                                                                                                                    // 11
                                                                                                                       //
var PageContainer = function (_React$Component) {                                                                      // 13
  _inherits(PageContainer, _React$Component);                                                                          // 13
                                                                                                                       //
  function PageContainer(props) {                                                                                      // 14
    _classCallCheck(this, PageContainer);                                                                              // 14
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 14
  }                                                                                                                    // 16
                                                                                                                       //
  PageContainer.prototype.getMeteorData = function getMeteorData() {                                                   // 13
    var data = {                                                                                                       // 19
      style: {                                                                                                         // 20
        // WebkitTransform: 'translate3d(0px,0px,0px)',                                                                //
        // overflowY: 'scroll',                                                                                        //
        // WebkitOverflowScrolling: 'touch',                                                                           //
        WebkitTransition: 'ease .2s',                                                                                  // 24
        transition: 'ease .2s',                                                                                        // 25
        marginBottom: "100px"                                                                                          // 26
      }                                                                                                                // 20
    };                                                                                                                 // 19
                                                                                                                       //
    if (Session.get('appWidth') > 1024) {                                                                              // 31
      data.style.position = 'relative';                                                                                // 32
      data.style.maxWidth = '1024px';                                                                                  // 33
      data.style.width = '100%';                                                                                       // 34
      if (Session.get('appSurfaceOffset')) {                                                                           // 35
        data.style.left = (Session.get('appWidth') - 1024) * 0.1618;                                                   // 36
        data.style.marginRight = '100px';                                                                              // 37
      } else {                                                                                                         // 38
        data.style.left = (Session.get('appWidth') - 1024) * 0.5;                                                      // 39
      }                                                                                                                // 40
    } else {                                                                                                           // 42
      data.style.position = 'absolute';                                                                                // 43
      data.style.width = '100%';                                                                                       // 44
    }                                                                                                                  // 45
                                                                                                                       //
    // we should assume card layout by default, meaning there's bit of padding and negative space                      //
    if (Session.get('mainPanelIsCard')) {                                                                              // 48
      data.style.padding = '20px';                                                                                     // 49
    }                                                                                                                  // 50
                                                                                                                       //
    if (Session.get('hasPagePadding')) {                                                                               // 52
      data.style.marginTop = '50px';                                                                                   // 53
      data.style.marginBottom = '50px';                                                                                // 54
    } else {                                                                                                           // 55
      data.style.marginTop = '0px';                                                                                    // 56
      data.style.marginBottom = '0px';                                                                                 // 57
    }                                                                                                                  // 58
                                                                                                                       //
    data.style.overflowY = 'scroll';                                                                                   // 60
    data.style.WebkitOverflowScrolling = 'touch';                                                                      // 61
    data.style.WebkitTransform = 'translateZ(0px)';                                                                    // 62
    data.style.WebkitTransform = 'translate3d(0, 0, 0)';                                                               // 63
    data.style.WebkitPerspective = 'translateZ(0px)';                                                                  // 64
                                                                                                                       //
    return data;                                                                                                       // 66
  };                                                                                                                   // 67
                                                                                                                       //
  PageContainer.prototype.render = function render() {                                                                 // 13
    return React.createElement(                                                                                        // 70
      'section',                                                                                                       // 71
      { style: this.data.style },                                                                                      // 71
      this.props.children                                                                                              // 72
    );                                                                                                                 // 71
  };                                                                                                                   // 75
                                                                                                                       //
  return PageContainer;                                                                                                // 13
}(React.Component);                                                                                                    // 13
                                                                                                                       //
PageContainer.propTypes = {};                                                                                          // 79
PageContainer.defaultProps = {};                                                                                       // 80
ReactMixin(PageContainer.prototype, ReactMeteorData);                                                                  // 81
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PhoneContainer.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","meteor/session","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/PhoneContainer.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PhoneContainer:function(){return PhoneContainer}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var createContainer;module.import('meteor/react-meteor-data',{"createContainer":function(v){createContainer=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 9
  Session.set('appSurfaceOffset', false);                                                                              // 10
});                                                                                                                    // 11
                                                                                                                       //
var PhoneContainer = function (_React$Component) {                                                                     // 13
  _inherits(PhoneContainer, _React$Component);                                                                         // 13
                                                                                                                       //
  function PhoneContainer(props) {                                                                                     // 14
    _classCallCheck(this, PhoneContainer);                                                                             // 14
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 14
  }                                                                                                                    // 16
                                                                                                                       //
  PhoneContainer.prototype.getMeteorData = function getMeteorData() {                                                  // 13
    var data = {                                                                                                       // 19
      style: {                                                                                                         // 20
        WebkitTransition: 'ease .2s',                                                                                  // 21
        transition: 'ease .2s'                                                                                         // 22
      }                                                                                                                // 20
    };                                                                                                                 // 19
                                                                                                                       //
    if (Session.get('appWidth') > 1024) {                                                                              // 27
      data.style.position = 'relative';                                                                                // 28
      data.style.maxWidth = '1024px';                                                                                  // 29
      data.style.width = '100%';                                                                                       // 30
      if (Session.get('appSurfaceOffset')) {                                                                           // 31
        data.style.left = (Session.get('appWidth') - 1024) * 0.1618;                                                   // 32
        data.style.marginRight = '100px';                                                                              // 33
      } else {                                                                                                         // 34
        data.style.left = (Session.get('appWidth') - 1024) * 0.5;                                                      // 35
      }                                                                                                                // 36
    } else {                                                                                                           // 38
      data.style.position = 'absolute';                                                                                // 39
      data.style.width = '100%';                                                                                       // 40
    }                                                                                                                  // 41
                                                                                                                       //
    // we should assume card layout by default, meaning there's bit of padding and negative space                      //
    if (Session.get('mainPanelIsCard')) {                                                                              // 44
      data.style.padding = '20px';                                                                                     // 45
    }                                                                                                                  // 46
                                                                                                                       //
    if (Session.get('hasPagePadding')) {                                                                               // 48
      data.style.marginTop = '50px';                                                                                   // 49
      data.style.marginBottom = '50px';                                                                                // 50
    } else {                                                                                                           // 51
      data.style.marginTop = '0px';                                                                                    // 52
      data.style.marginBottom = '0px';                                                                                 // 53
    }                                                                                                                  // 54
                                                                                                                       //
    return data;                                                                                                       // 57
  };                                                                                                                   // 58
                                                                                                                       //
  PhoneContainer.prototype.render = function render() {                                                                // 13
    return React.createElement(                                                                                        // 61
      'section',                                                                                                       // 62
      { style: this.data.style },                                                                                      // 62
      React.createElement(                                                                                             // 63
        'div',                                                                                                         // 63
        { style: { position: 'static', maxWidth: '640px' } },                                                          // 63
        this.props.children                                                                                            // 64
      )                                                                                                                // 63
    );                                                                                                                 // 62
  };                                                                                                                   // 68
                                                                                                                       //
  return PhoneContainer;                                                                                               // 13
}(React.Component);                                                                                                    // 13
                                                                                                                       //
PhoneContainer.propTypes = {};                                                                                         // 72
PhoneContainer.defaultProps = {};                                                                                      // 73
ReactMixin(PhoneContainer.prototype, ReactMeteorData);                                                                 // 74
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PrivacyPolicyCard.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-toolbox/lib/card",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/PrivacyPolicyCard.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PrivacyPolicyCard:function(){return PrivacyPolicyCard}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       //
var PrivacyPolicyCard = function (_React$Component) {                                                                  // 5
  _inherits(PrivacyPolicyCard, _React$Component);                                                                      // 5
                                                                                                                       //
  function PrivacyPolicyCard(props) {                                                                                  // 6
    _classCallCheck(this, PrivacyPolicyCard);                                                                          // 6
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 6
  }                                                                                                                    // 8
                                                                                                                       //
  PrivacyPolicyCard.prototype.render = function render() {                                                             // 5
    return React.createElement(                                                                                        // 11
      'div',                                                                                                           // 12
      null,                                                                                                            // 12
      React.createElement(CardTitle, {                                                                                 // 13
        title: 'Privacy Policy'                                                                                        // 14
      }),                                                                                                              // 13
      React.createElement(                                                                                             // 16
        CardText,                                                                                                      // 16
        null,                                                                                                          // 16
        'Privacy policy content...'                                                                                    // 16
      )                                                                                                                // 16
    );                                                                                                                 // 12
  };                                                                                                                   // 21
                                                                                                                       //
  return PrivacyPolicyCard;                                                                                            // 5
}(React.Component);                                                                                                    // 5
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PublicNavigation.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-router-bootstrap","react-bootstrap",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/PublicNavigation.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PublicNavigation:function(){return PublicNavigation}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var LinkContainer;module.import('react-router-bootstrap',{"LinkContainer":function(v){LinkContainer=v}});var Nav,NavItem;module.import('react-bootstrap',{"Nav":function(v){Nav=v},"NavItem":function(v){NavItem=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
var PublicNavigation = function (_React$Component) {                                                                   // 8
  _inherits(PublicNavigation, _React$Component);                                                                       // 8
                                                                                                                       //
  function PublicNavigation() {                                                                                        // 8
    _classCallCheck(this, PublicNavigation);                                                                           // 8
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 8
  }                                                                                                                    // 8
                                                                                                                       //
  PublicNavigation.prototype.getMeteorData = function getMeteorData() {                                                // 8
    var data = {                                                                                                       // 10
      style: {                                                                                                         // 11
        position: "fixed",                                                                                             // 12
        top: "0px",                                                                                                    // 13
        width: "100%",                                                                                                 // 14
        display: "flex",                                                                                               // 15
        // height: "6.4rem",                                                                                           //
        alignItems: "center",                                                                                          // 17
        padding: "0 2.4rem",                                                                                           // 18
        opacity: Session.get('globalOpacity')                                                                          // 19
      },                                                                                                               // 11
      listItem: {                                                                                                      // 21
        display: "inline-block",                                                                                       // 22
        position: "relative"                                                                                           // 23
      }                                                                                                                // 21
    };                                                                                                                 // 10
                                                                                                                       //
    return data;                                                                                                       // 27
  };                                                                                                                   // 28
                                                                                                                       //
  PublicNavigation.prototype.render = function render() {                                                              // 8
    return React.createElement(                                                                                        // 30
      Nav,                                                                                                             // 31
      { id: 'publicNavigation', pullRight: true },                                                                     // 31
      React.createElement(                                                                                             // 32
        LinkContainer,                                                                                                 // 32
        { to: 'signup' },                                                                                              // 32
        React.createElement(                                                                                           // 33
          NavItem,                                                                                                     // 33
          { id: 'signupLink', eventKey: 2, href: '/signup', style: this.data.listItem },                               // 33
          'Sign Up'                                                                                                    // 33
        )                                                                                                              // 33
      ),                                                                                                               // 32
      React.createElement(                                                                                             // 35
        LinkContainer,                                                                                                 // 35
        { to: 'login' },                                                                                               // 35
        React.createElement(                                                                                           // 36
          NavItem,                                                                                                     // 36
          { id: 'loginLink', eventKey: 3, href: '/login', style: this.data.listItem },                                 // 36
          'Log In'                                                                                                     // 36
        )                                                                                                              // 36
      )                                                                                                                // 35
    );                                                                                                                 // 31
  };                                                                                                                   // 40
                                                                                                                       //
  return PublicNavigation;                                                                                             // 8
}(React.Component);                                                                                                    // 8
                                                                                                                       //
ReactMixin(PublicNavigation.prototype, ReactMeteorData);                                                               // 43
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PublicSidebar.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-router-bootstrap","react-toolbox/lib/list","react","react-mixin","meteor/react-meteor-data",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/PublicSidebar.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PublicSidebar:function(){return PublicSidebar}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var IndexLinkContainer;module.import('react-router-bootstrap',{"IndexLinkContainer":function(v){IndexLinkContainer=v}});var List,ListItem;module.import('react-toolbox/lib/list',{"List":function(v){List=v},"ListItem":function(v){ListItem=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       //
var PublicSidebar = function (_React$Component) {                                                                      // 8
  _inherits(PublicSidebar, _React$Component);                                                                          // 8
                                                                                                                       //
  function PublicSidebar() {                                                                                           // 8
    _classCallCheck(this, PublicSidebar);                                                                              // 8
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 8
  }                                                                                                                    // 8
                                                                                                                       //
  PublicSidebar.prototype.getMeteorData = function getMeteorData() {                                                   // 8
    var data = {                                                                                                       // 10
      style: {                                                                                                         // 11
        position: 'fixed',                                                                                             // 12
        top: '0px',                                                                                                    // 13
        width: '100%',                                                                                                 // 14
        display: 'flex',                                                                                               // 15
        // height: '6.4rem',                                                                                           //
        alignItems: 'center',                                                                                          // 17
        padding: '0 2.4rem',                                                                                           // 18
        opacity: Session.get('globalOpacity')                                                                          // 19
      },                                                                                                               // 11
      listItem: {                                                                                                      // 21
        display: 'inline-block',                                                                                       // 22
        position: 'relative'                                                                                           // 23
      }                                                                                                                // 21
    };                                                                                                                 // 10
                                                                                                                       //
    return data;                                                                                                       // 27
  };                                                                                                                   // 28
                                                                                                                       //
  PublicSidebar.prototype.render = function render() {                                                                 // 8
    return React.createElement(                                                                                        // 31
      List,                                                                                                            // 32
      { style: { paddingLeft: '20px', position: 'absolute' } },                                                        // 32
      React.createElement(                                                                                             // 33
        IndexLinkContainer,                                                                                            // 33
        { to: '/' },                                                                                                   // 33
        React.createElement(ListItem, { eventKey: 4, caption: 'Index', href: '/' })                                    // 34
      ),                                                                                                               // 33
      React.createElement(                                                                                             // 37
        IndexLinkContainer,                                                                                            // 37
        { to: '/about' },                                                                                              // 37
        React.createElement(ListItem, { eventKey: 10, caption: 'About', href: '/about' })                              // 38
      )                                                                                                                // 37
    );                                                                                                                 // 32
  };                                                                                                                   // 43
                                                                                                                       //
  return PublicSidebar;                                                                                                // 8
}(React.Component);                                                                                                    // 8
PublicSidebar.propTypes = {};                                                                                          // 45
PublicSidebar.defaultProps = {};                                                                                       // 46
ReactMixin(PublicSidebar.prototype, ReactMeteorData);                                                                  // 47
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Spacer.jsx":["react",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/Spacer.jsx                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;module.import('react',{"default":function(v){React=v}});                                                     // 1
                                                                                                                       //
var Spacer = React.createClass({                                                                                       // 3
  displayName: 'Spacer',                                                                                               // 3
  getMeteorData: function getMeteorData() {                                                                            // 4
    return {};                                                                                                         // 5
  },                                                                                                                   // 6
  render: function render() {                                                                                          // 7
    var spacerStyle = {                                                                                                // 8
      height: '3.2rem'                                                                                                 // 9
    };                                                                                                                 // 8
    return React.createElement('div', { 'class': 'spacer', style: spacerStyle });                                      // 11
  }                                                                                                                    // 14
});                                                                                                                    // 3
module.export("default",exports.default=(Spacer));                                                                     // 16
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"appbar.scss":["./appbar.scss.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/appbar.scss                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = require("./appbar.scss.js");                                                                          // 1
                                                                                                                       // 2
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"appbar.scss.js":["meteor/modules",function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/appbar.scss.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
exports.__esModule = true;                                                                                             // 1
exports.styles = exports["default"] = undefined;                                                                       // 2
                                                                                                                       // 3
var _modules = require("meteor/modules");                                                                              // 4
                                                                                                                       // 5
var _modules2 = _interopRequireDefault(_modules);                                                                      // 6
                                                                                                                       // 7
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      // 8
                                                                                                                       // 9
_modules2["default"].addStyles("._imports_ui_components__appbar__notificationMenu {\n  min-width: 300px; }\n\n._imports_ui_components__appbar__notificationMenu {\n  min-width: 300px; }\n\n/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */\n/**\n * 1. Change the default font family in all browsers (opinionated).\n * 2. Correct the line height in all browsers.\n * 3. Prevent adjustments of font size after orientation changes in IE and iOS.\n */\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  line-height: 1.15;\n  /* 2 */\n  -ms-text-size-adjust: 100%;\n  /* 3 */\n  -webkit-text-size-adjust: 100%;\n  /* 3 */ }\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\nbody {\n  margin: 0; }\n\n/* HTML5 display definitions\n   ========================================================================== */\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n * 2. Add the correct display in IE.\n */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  /* 1 */\n  display: block; }\n\n/**\n * Add the correct display in IE 9-.\n */\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; }\n\n/**\n * Add the correct display in iOS 4-7.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline; }\n\n/**\n * Add the correct display in IE 10-.\n * 1. Add the correct display in IE.\n */\ntemplate,\n[hidden] {\n  display: none; }\n\n/* Links\n   ========================================================================== */\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\na {\n  background-color: transparent;\n  /* 1 */\n  -webkit-text-decoration-skip: objects;\n  /* 2 */ }\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers (opinionated).\n */\na:active,\na:hover {\n  outline-width: 0; }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */ }\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\nb,\nstrong {\n  font-weight: inherit; }\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n * Add the correct font style in Android 4.3-.\n */\ndfn {\n  font-style: italic; }\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/**\n * Add the correct background and color in IE 9-.\n */\nmark {\n  background-color: #ff0;\n  color: #000; }\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10-.\n */\nimg {\n  border-style: none; }\n\n/**\n * Hide the overflow in IE.\n */\nsvg:not(:root) {\n  overflow: hidden; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/**\n * Add the correct margin in IE 8.\n */\nfigure {\n  margin: 1em 40px; }\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */ }\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change font properties to `inherit` in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit;\n  /* 1 */\n  margin: 0;\n  /* 2 */ }\n\n/**\n * Restore the font weight unset by the previous rule.\n */\noptgroup {\n  font-weight: bold; }\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible; }\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none; }\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\nhtml [type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n  /* 2 */ }\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/**\n * Change the border, margin, and padding in all browsers (opinionated).\n */\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */ }\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\ntextarea {\n  overflow: auto; }\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */ }\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.\n */\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54; }\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\nhtml {\n  font-size: 62.5%; }\n\nbody {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  font-family: Roboto, sans-serif;\n  font-size: 1.6rem;\n  -webkit-touch-callout: none; }\n  body * {\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0); }\n\na, abbr, address, article, aside, audio, b, blockquote, body, caption, cite,\ncode, dd, del, dfn, dialog, div, dl, dt, em, fieldset, figure, footer, form, h1,\nh2, h3, h4, h5, h6, header, hgroup, hr, html, i, iframe, img, ins, kbd, label,\nlegend, li, mark, menu, nav, object, ol, p, pre, q, samp, section, small, span,\nstrong, sub, sup, table, tbody, td, tfoot, th, thead, time, tr, ul, var, video {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  outline: 0; }\n\n*, *:before, *:after {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0; }\n\nh1, h2, h3, h4, h5, h6, label, p, button, abbr, a, span, small {\n  font-smoothing: antialiased;\n  -webkit-font-smoothing: antialiased;\n  text-size-adjust: 100%; }\n\na {\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent; }\n\ninput:not([type=\"checkbox\"]):not([type=\"radio\"]), button {\n  outline: none;\n  appearance: none;\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0); }\n\nh1 small, h2 small, h3 small, h4 small, h5 small, h6 small {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 5.6rem;\n  font-weight: 400;\n  line-height: 1.35;\n  letter-spacing: -.02em;\n  opacity: .54; }\n\nh1 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 5.6rem;\n  font-weight: 400;\n  line-height: 1.35;\n  letter-spacing: -.02em; }\n\nh2 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 4.5rem;\n  font-weight: 400;\n  line-height: 4.8rem; }\n\nh3 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 3.4rem;\n  font-weight: 400;\n  line-height: 4rem; }\n\nh4 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 2.4rem;\n  font-weight: 400;\n  line-height: 3.2rem;\n  -moz-osx-font-smoothing: grayscale; }\n\nh5 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 2rem;\n  font-weight: 500;\n  line-height: 1;\n  letter-spacing: .02em; }\n\nh6 {\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 1.6rem;\n  font-weight: 400;\n  line-height: 2.4rem;\n  letter-spacing: .04em; }\n\np {\n  font-size: 1.4rem;\n  font-weight: 400;\n  line-height: 2.4rem;\n  letter-spacing: 0; }\n\n._imports_ui_components__appbar__appbar > ._imports_ui_components__appbar__title {\n  font-size: 1.8rem;\n  font-weight: 700;\n  position: relative; }\n\n._imports_ui_components__appbar__appbar > ._imports_ui_components__appbar__button {\n  position: absolute;\n  top: 3.6rem;\n  right: 2.8rem;\n  z-index: 200; }\n\n._imports_ui_components__appbar__thumbnail {\n  position: absolute;\n  width: 256px;\n  height: 144px; }\n/*# sourceMappingURL=appbar.scss.map */");
var styles = { "notificationMenu": "_imports_ui_components__appbar__notificationMenu", "appbar": "_imports_ui_components__appbar__appbar", "title": "_imports_ui_components__appbar__title", "button": "_imports_ui_components__appbar__button", "thumbnail": "_imports_ui_components__appbar__thumbnail" };
exports["default"] = styles;                                                                                           // 12
exports.styles = styles;                                                                                               // 13
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"document.js":["react","react-bootstrap","meteor/themeteorchef:bert","../../api/documents/methods.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/document.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Document:function(){return Document}});var React;module.import('react',{"default":function(v){React=v}});var Row,Col,ListGroupItem,FormControl,Button;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v},"ListGroupItem":function(v){ListGroupItem=v},"FormControl":function(v){FormControl=v},"Button":function(v){Button=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var updateDocument,removeDocument;module.import('../../api/documents/methods.js',{"updateDocument":function(v){updateDocument=v},"removeDocument":function(v){removeDocument=v}});var _this = this;
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var handleUpdateDocument = function handleUpdateDocument(documentId, event) {                                          // 6
  var title = event.target.value.trim();                                                                               // 7
  if (title !== '' && event.keyCode === 13) {                                                                          // 8
    updateDocument.call({                                                                                              // 9
      _id: documentId,                                                                                                 // 10
      update: { title: title }                                                                                         // 11
    }, function (error) {                                                                                              // 9
      if (error) {                                                                                                     // 13
        Bert.alert(error.reason, 'danger');                                                                            // 14
      } else {                                                                                                         // 15
        Bert.alert('Document updated!', 'success');                                                                    // 16
      }                                                                                                                // 17
    });                                                                                                                // 18
  }                                                                                                                    // 19
};                                                                                                                     // 20
                                                                                                                       //
var handleRemoveDocument = function handleRemoveDocument(documentId, event) {                                          // 22
  event.preventDefault();                                                                                              // 23
  // this should be replaced with a styled solution so for now we will                                                 //
  // disable the eslint `no-alert`                                                                                     //
  // eslint-disable-next-line no-alert                                                                                 //
  if (confirm('Are you sure? This is permanent.')) {                                                                   // 27
    removeDocument.call({                                                                                              // 28
      _id: documentId                                                                                                  // 29
    }, function (error) {                                                                                              // 28
      if (error) {                                                                                                     // 31
        Bert.alert(error.reason, 'danger');                                                                            // 32
      } else {                                                                                                         // 33
        Bert.alert('Document removed!', 'success');                                                                    // 34
      }                                                                                                                // 35
    });                                                                                                                // 36
  }                                                                                                                    // 37
};                                                                                                                     // 38
                                                                                                                       //
var Document = function Document(_ref) {                                                                               // 40
  var document = _ref.document;                                                                                        // 40
  return React.createElement(                                                                                          // 40
    ListGroupItem,                                                                                                     // 41
    { key: document._id },                                                                                             // 41
    React.createElement(                                                                                               // 42
      Row,                                                                                                             // 42
      null,                                                                                                            // 42
      React.createElement(                                                                                             // 43
        Col,                                                                                                           // 43
        { xs: 8, sm: 10 },                                                                                             // 43
        React.createElement(FormControl, {                                                                             // 44
          type: 'text',                                                                                                // 45
          standalone: true,                                                                                            // 46
          defaultValue: document.title,                                                                                // 47
          onKeyUp: handleUpdateDocument.bind(_this, document._id)                                                      // 48
        })                                                                                                             // 44
      ),                                                                                                               // 43
      React.createElement(                                                                                             // 51
        Col,                                                                                                           // 51
        { xs: 4, sm: 2 },                                                                                              // 51
        React.createElement(                                                                                           // 52
          Button,                                                                                                      // 52
          {                                                                                                            // 52
            bsStyle: 'danger',                                                                                         // 53
            className: 'btn-block',                                                                                    // 54
            onClick: handleRemoveDocument.bind(_this, document._id) },                                                 // 55
          'Remove'                                                                                                     // 52
        )                                                                                                              // 52
      )                                                                                                                // 51
    )                                                                                                                  // 42
  );                                                                                                                   // 41
};                                                                                                                     // 40
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"documents-list.js":["react","react-bootstrap","./document.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/documents-list.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({DocumentsList:function(){return DocumentsList}});var React;module.import('react',{"default":function(v){React=v}});var ListGroup,Alert;module.import('react-bootstrap',{"ListGroup":function(v){ListGroup=v},"Alert":function(v){Alert=v}});var Document;module.import('./document.js',{"Document":function(v){Document=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var DocumentsList = function DocumentsList(_ref) {                                                                     // 5
  var documents = _ref.documents;                                                                                      // 5
  return documents.length > 0 ? React.createElement(                                                                   // 5
    ListGroup,                                                                                                         // 6
    { className: 'documents-list' },                                                                                   // 6
    documents.map(function (doc) {                                                                                     // 7
      return React.createElement(Document, { key: doc._id, document: doc });                                           // 7
    })                                                                                                                 // 7
  ) : React.createElement(                                                                                             // 6
    Alert,                                                                                                             // 11
    { bsStyle: 'warning' },                                                                                            // 11
    'No documents yet.'                                                                                                // 11
  );                                                                                                                   // 11
};                                                                                                                     // 5
                                                                                                                       //
DocumentsList.propTypes = {                                                                                            // 14
  documents: React.PropTypes.array                                                                                     // 15
};                                                                                                                     // 14
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"loading.js":["react",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/components/loading.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Loading:function(){return Loading}});var React;module.import('react',{"default":function(v){React=v}});
                                                                                                                       //
var Loading = function Loading() {                                                                                     // 3
  return React.createElement(                                                                                          // 3
    "svg",                                                                                                             // 4
    {                                                                                                                  // 4
      version: "1.1",                                                                                                  // 5
      className: "loading",                                                                                            // 6
      xmlns: "http://www.w3.org/2000/svg",                                                                             // 7
      x: "0px",                                                                                                        // 8
      y: "0px",                                                                                                        // 9
      width: "40px",                                                                                                   // 10
      height: "40px",                                                                                                  // 11
      viewBox: "0 0 40 40",                                                                                            // 12
      "enable-background": "new 0 0 40 40" },                                                                          // 13
    React.createElement("path", {                                                                                      // 14
      opacity: "1.0",                                                                                                  // 15
      fill: "#eee",                                                                                                    // 16
      d: "M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946, 14.946,14.946s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201, 5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634c0-6.425, 5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834, 26.541,26.626,31.749,20.201,31.749z" }),
    React.createElement("path", {                                                                                      // 22
      fill: "#da5347",                                                                                                 // 23
      d: "M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0 C22.32,8.481,24.301,9.057,26.013,10.047z" })
  );                                                                                                                   // 4
};                                                                                                                     // 3
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"containers":{"documents-list.js":["react-komposer","../../api/documents/documents.js","../components/documents-list.js","../components/loading.js","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/containers/documents-list.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var composeWithTracker;module.import('react-komposer',{"composeWithTracker":function(v){composeWithTracker=v}});var Documents;module.import('../../api/documents/documents.js',{"Documents":function(v){Documents=v}});var DocumentsList;module.import('../components/documents-list.js',{"DocumentsList":function(v){DocumentsList=v}});var Loading;module.import('../components/loading.js',{"Loading":function(v){Loading=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
var composer = function composer(params, onData) {                                                                     // 7
  var subscription = Meteor.subscribe('documents');                                                                    // 8
  if (subscription.ready()) {                                                                                          // 9
    var documents = Documents.find().fetch();                                                                          // 10
    onData(null, { documents: documents });                                                                            // 11
  }                                                                                                                    // 12
};                                                                                                                     // 13
                                                                                                                       //
module.export("default",exports.default=(composeWithTracker(composer, Loading)(DocumentsList)));                       // 15
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"posts-list.js":["react-komposer","../../api/posts/posts.js","../workflows/posts/PostsList.js","../components/loading.js","meteor/meteor","../workflows/posts/PostsDeck.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/containers/posts-list.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var composeWithTracker;module.import('react-komposer',{"composeWithTracker":function(v){composeWithTracker=v}});var Posts;module.import('../../api/posts/posts.js',{"Posts":function(v){Posts=v}});var PostsList;module.import('../workflows/posts/PostsList.js',{"PostsList":function(v){PostsList=v}});var Loading;module.import('../components/loading.js',{"Loading":function(v){Loading=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var PostsDeck;module.import('../workflows/posts/PostsDeck.js',{"PostsDeck":function(v){PostsDeck=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
                                                                                                                       // 7
                                                                                                                       //
var composer = function composer(params, onData) {                                                                     // 9
  var subscription = Meteor.subscribe('posts');                                                                        // 10
  if (subscription.ready()) {                                                                                          // 11
    var posts = Posts.find({}, { sort: { title: -1 } }).fetch();                                                       // 12
    onData(null, { posts: posts });                                                                                    // 13
  }                                                                                                                    // 14
};                                                                                                                     // 15
                                                                                                                       //
module.export("default",exports.default=(composeWithTracker(composer, Loading)(PostsList)));                           // 17
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"layouts":{"App.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","material-ui/styles/baseThemes/lightBaseTheme","react-dom","material-ui/styles/MuiThemeProvider","material-ui/styles/getMuiTheme","/imports/ui/components/GlassApp","/imports/ui/layouts/GlassLayout","/imports/ui/components/Header","/imports/ui/components/Footer",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/layouts/App.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({App:function(){return App}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var baseTheme;module.import('material-ui/styles/baseThemes/lightBaseTheme',{"default":function(v){baseTheme=v}});var ReactDOM;module.import('react-dom',{"default":function(v){ReactDOM=v}});var MuiThemeProvider;module.import('material-ui/styles/MuiThemeProvider',{"default":function(v){MuiThemeProvider=v}});var getMuiTheme;module.import('material-ui/styles/getMuiTheme',{"default":function(v){getMuiTheme=v}});var GlassApp;module.import('/imports/ui/components/GlassApp',{"GlassApp":function(v){GlassApp=v}});var GlassLayout;module.import('/imports/ui/layouts/GlassLayout',{"GlassLayout":function(v){GlassLayout=v}});var Header;module.import('/imports/ui/components/Header',{"Header":function(v){Header=v}});var Footer;module.import('/imports/ui/components/Footer',{"Footer":function(v){Footer=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
// import { Grid } from 'react-bootstrap';                                                                             //
// import AppNavigation from '/imports/ui/containers/app-navigation';                                                  //
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       //
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       //
var App = function (_React$Component) {                                                                                // 15
  _inherits(App, _React$Component);                                                                                    // 15
                                                                                                                       //
  function App(props) {                                                                                                // 16
    _classCallCheck(this, App);                                                                                        // 16
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 16
  }                                                                                                                    // 18
                                                                                                                       //
  App.prototype.getChildContext = function getChildContext() {                                                         // 15
    return { muiTheme: getMuiTheme(baseTheme) };                                                                       // 21
  };                                                                                                                   // 22
                                                                                                                       //
  //    const App = () => (                                                                                            //
  //<MuiThemeProvider>                                                                                                 //
  //<MyAwesomeReactComponent />                                                                                        //
  //</MuiThemeProvider>                                                                                                //
  //		       );                                                                                                        //
                                                                                                                       //
  //ReactDOM.render(                                                                                                   //
  //		    <App />,                                                                                                     //
  //		    document.getElementById('app')                                                                               //
  //		    );                                                                                                           //
                                                                                                                       //
  App.prototype.render = function render() {                                                                           // 15
    return React.createElement(                                                                                        // 36
      MuiThemeProvider,                                                                                                // 37
      null,                                                                                                            // 37
      React.createElement(                                                                                             // 38
        GlassApp,                                                                                                      // 38
        null,                                                                                                          // 38
        React.createElement(                                                                                           // 39
          GlassLayout,                                                                                                 // 39
          null,                                                                                                        // 39
          React.createElement(Header, null),                                                                           // 40
          this.props.children,                                                                                         // 41
          React.createElement(Footer, null)                                                                            // 42
        )                                                                                                              // 39
      )                                                                                                                // 38
    );                                                                                                                 // 37
  };                                                                                                                   // 47
                                                                                                                       //
  return App;                                                                                                          // 15
}(React.Component);                                                                                                    // 15
                                                                                                                       //
App.propTypes = {                                                                                                      // 50
  children: React.PropTypes.element.isRequired                                                                         // 51
};                                                                                                                     // 50
App.childContextTypes = {                                                                                              // 53
  muiTheme: React.PropTypes.object.isRequired                                                                          // 54
};                                                                                                                     // 53
App.defaultProps = {};                                                                                                 // 56
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"GlassLayout.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","meteor/meteor","meteor/session","react-toolbox/lib/button","react-toolbox/lib/card","/imports/api/User","/imports/ui/layouts/Layout","/imports/ui/layouts/NavDrawer","/imports/ui/layouts/Panel","/imports/ui/layouts/Sidebar","react-router-bootstrap","/imports/ui/components/PublicSidebar","/imports/ui/components/AuthenticatedSidebar","/imports/ui/components/AdminSidebar",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/layouts/GlassLayout.jsx                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({GlassLayout:function(){return GlassLayout}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var IconButton;module.import('react-toolbox/lib/button',{"default":function(v){IconButton=v}});var CardTitle;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v}});var User;module.import('/imports/api/User',{"default":function(v){User=v}});var Layout;module.import('/imports/ui/layouts/Layout',{"default":function(v){Layout=v}});var NavDrawer;module.import('/imports/ui/layouts/NavDrawer',{"default":function(v){NavDrawer=v}});var Panel;module.import('/imports/ui/layouts/Panel',{"default":function(v){Panel=v}});var Sidebar;module.import('/imports/ui/layouts/Sidebar',{"default":function(v){Sidebar=v}});var IndexLinkContainer;module.import('react-router-bootstrap',{"IndexLinkContainer":function(v){IndexLinkContainer=v}});var PublicSidebar;module.import('/imports/ui/components/PublicSidebar',{"PublicSidebar":function(v){PublicSidebar=v}});var AuthenticatedSidebar;module.import('/imports/ui/components/AuthenticatedSidebar',{"AuthenticatedSidebar":function(v){AuthenticatedSidebar=v}});var AdminSidebar;module.import('/imports/ui/components/AdminSidebar',{"AdminSidebar":function(v){AdminSidebar=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
                                                                                                                       // 16
                                                                                                                       // 17
                                                                                                                       // 18
                                                                                                                       //
Session.setDefault('backgroundImagePath', 'url(\"images\/ForestInMist.jpg\")');                                        // 20
Session.setDefault('backgroundColor', '#cccccc');                                                                      // 21
Session.setDefault('darkroomEnabled', false);                                                                          // 22
Session.setDefault('glassBlurEnabled', false);                                                                         // 23
Session.setDefault('backgroundBlurEnabled', false);                                                                    // 24
                                                                                                                       //
Session.setDefault('drawerActive', false);                                                                             // 26
Session.setDefault('drawerPinned', false);                                                                             // 27
Session.setDefault('sidebarPinned', false);                                                                            // 28
                                                                                                                       //
var GlassLayout = function (_React$Component) {                                                                        // 30
  _inherits(GlassLayout, _React$Component);                                                                            // 30
                                                                                                                       //
  function GlassLayout(props) {                                                                                        // 31
    _classCallCheck(this, GlassLayout);                                                                                // 31
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 31
  }                                                                                                                    // 33
                                                                                                                       //
  GlassLayout.prototype.getMeteorData = function getMeteorData() {                                                     // 30
                                                                                                                       //
    var currentUser = new User(Meteor.user());                                                                         // 36
                                                                                                                       //
    var data = {                                                                                                       // 38
      state: {                                                                                                         // 39
        drawerActive: Session.get('drawerActive'),                                                                     // 40
        drawerPinned: Session.get('drawerPinned'),                                                                     // 41
        sidebarPinned: Session.get('sidebarPinned'),                                                                   // 42
        isAdmin: false                                                                                                 // 43
      },                                                                                                               // 39
      style: {                                                                                                         // 45
        'width': '100%',                                                                                               // 46
        'height': '100%',                                                                                              // 47
        'position': 'absolute',                                                                                        // 48
        'background': '#cccccc'                                                                                        // 49
      },                                                                                                               // 45
      card: {                                                                                                          // 51
        title: 'Please log in',                                                                                        // 52
        subtitle: 'Basic User',                                                                                        // 53
        avatar: '/noAvatar.png'                                                                                        // 54
      }                                                                                                                // 51
    };                                                                                                                 // 38
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 58
      data.card.title = currentUser.fullName();                                                                        // 59
      if (Meteor.user().profile) {                                                                                     // 60
        data.card.subtitle = Meteor.user().profile.birthdate;                                                          // 61
        data.card.avatar = Meteor.user().profile.avatar;                                                               // 62
        data.card.subtitle = 'Basic User';                                                                             // 63
      }                                                                                                                // 64
      if (Meteor.user().roles && Meteor.user().roles[0] === 'admin') {                                                 // 65
        data.card.subtitle = 'Admin';                                                                                  // 66
        data.state.isAdmin = true;                                                                                     // 67
      }                                                                                                                // 68
    }                                                                                                                  // 69
                                                                                                                       //
    if (Session.get('backgroundColor')) {                                                                              // 71
      data.style.background = Session.get('backgroundColor');                                                          // 72
    }                                                                                                                  // 73
                                                                                                                       //
    // if (Session.get('backgroundImagePath')) {                                                                       //
    //   data.style.WebkitBackgroundSize = 'cover';                                                                    //
    //   data.style.MozBackgroundSize = 'cover';                                                                       //
    //   data.style.OBackgroundSize = 'cover';                                                                         //
    //   data.style.backgroundSize = 'cover';                                                                          //
    //   data.style.backgroundImagePath = Session.get('backgroundImagePath');                                          //
    // }                                                                                                               //
                                                                                                                       //
    return data;                                                                                                       // 83
  };                                                                                                                   // 84
                                                                                                                       //
  GlassLayout.prototype.toggleDrawerActive = function toggleDrawerActive() {                                           // 30
    Session.toggle('drawerPinned');                                                                                    // 86
  };                                                                                                                   // 87
                                                                                                                       //
  GlassLayout.prototype.toggleSidebar = function toggleSidebar() {                                                     // 30
    Session.toggle('sidebarPinned');                                                                                   // 89
  };                                                                                                                   // 90
                                                                                                                       //
  GlassLayout.prototype.renderSidebar = function renderSidebar(isAdmin) {                                              // 30
    if (Meteor.user()) {                                                                                               // 92
      if (isAdmin) {                                                                                                   // 93
        return React.createElement(AdminSidebar, null);                                                                // 94
      } else {                                                                                                         // 95
        return React.createElement(AuthenticatedSidebar, null);                                                        // 96
      }                                                                                                                // 97
    } else {                                                                                                           // 98
      return React.createElement(PublicSidebar, null);                                                                 // 99
    }                                                                                                                  // 100
  };                                                                                                                   // 101
                                                                                                                       //
  GlassLayout.prototype.render = function render() {                                                                   // 30
                                                                                                                       //
    return React.createElement(                                                                                        // 104
      Layout,                                                                                                          // 105
      null,                                                                                                            // 105
      React.createElement(                                                                                             // 106
        NavDrawer,                                                                                                     // 106
        { active: this.data.state.drawerActive,                                                                        // 106
          pinned: this.data.state.drawerPinned, permanentAt: 'xxxl',                                                   // 107
          onOverlayClick: this.toggleDrawerActive                                                                      // 108
        },                                                                                                             // 106
        React.createElement(                                                                                           // 111
          IndexLinkContainer,                                                                                          // 111
          { to: '/myprofile' },                                                                                        // 111
          React.createElement(CardTitle, {                                                                             // 112
            avatar: this.data.card.avatar,                                                                             // 113
            title: this.data.card.title,                                                                               // 114
            subtitle: this.data.card.subtitle                                                                          // 115
          })                                                                                                           // 112
        ),                                                                                                             // 111
        this.renderSidebar(this.data.state.isAdmin)                                                                    // 119
      ),                                                                                                               // 106
      React.createElement(                                                                                             // 122
        Panel,                                                                                                         // 122
        { pinned: this.data.state.drawerPinned },                                                                      // 122
        React.createElement(                                                                                           // 123
          'div',                                                                                                       // 123
          { style: { flex: 1, overflowY: 'auto', width: '100%' } },                                                    // 123
          this.props.children                                                                                          // 124
        )                                                                                                              // 123
      ),                                                                                                               // 122
      React.createElement(                                                                                             // 127
        Sidebar,                                                                                                       // 127
        { pinned: this.data.state.sidebarPinned, width: 5 },                                                           // 127
        React.createElement(                                                                                           // 128
          'div',                                                                                                       // 128
          null,                                                                                                        // 128
          React.createElement(IconButton, { icon: 'close', onClick: this.toggleSidebar })                              // 128
        ),                                                                                                             // 128
        React.createElement(                                                                                           // 129
          'div',                                                                                                       // 129
          { style: { flex: 1 } },                                                                                      // 129
          React.createElement(                                                                                         // 130
            'p',                                                                                                       // 130
            null,                                                                                                      // 130
            'Supplemental content goes here.'                                                                          // 130
          )                                                                                                            // 130
        )                                                                                                              // 129
      )                                                                                                                // 127
    );                                                                                                                 // 105
  };                                                                                                                   // 135
                                                                                                                       //
  return GlassLayout;                                                                                                  // 30
}(React.Component);                                                                                                    // 30
                                                                                                                       //
GlassLayout.propTypes = {};                                                                                            // 140
GlassLayout.defaultProps = {};                                                                                         // 141
ReactMixin(GlassLayout.prototype, ReactMeteorData);                                                                    // 142
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Layout.js":["react","classnames","./style",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/layouts/Layout.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;module.import('react',{"default":function(v){React=v}});var classnames;module.import('classnames',{"default":function(v){classnames=v}});var style;module.import('./style',{"default":function(v){style=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var Layout = function Layout(_ref) {                                                                                   // 5
  var className = _ref.className;                                                                                      // 5
  var children = _ref.children;                                                                                        // 5
  return React.createElement(                                                                                          // 5
    'div',                                                                                                             // 6
    { 'data-react-toolbox': 'layout', className: classnames(style.root, className), style: { position: "absolute", overflowY: "scroll" } },
    children                                                                                                           // 7
  );                                                                                                                   // 6
};                                                                                                                     // 5
                                                                                                                       //
var ALLOWED = ['Panel', 'NavDrawer|Panel', 'NavDrawer|Panel|Sidebar', 'Panel|Sidebar'];                                // 11
                                                                                                                       //
function getChildName(child) {                                                                                         // 18
  if (child.type) {                                                                                                    // 19
    return child.type.name || child.type;                                                                              // 20
  }                                                                                                                    // 21
  if (!child.constructor || !child.constructor.name) {                                                                 // 22
    return 'UNKNOWN';                                                                                                  // 23
  }                                                                                                                    // 24
  return child.constructor.name;                                                                                       // 25
}                                                                                                                      // 26
                                                                                                                       //
Layout.propTypes = {                                                                                                   // 28
  children: function children(props, propName, componentName) {                                                        // 29
    // Accept only [NavDrawer]Pane[Sidebar]                                                                            //
    var children = props[propName];                                                                                    // 31
    if (React.Children.count(children) > 3) {                                                                          // 32
      return new Error('`' + componentName + '` ' + 'should have a Pane for a child, optionally preceded and/or followed by a Drawer.');
    }                                                                                                                  // 37
                                                                                                                       //
    var names = React.Children.map(children, getChildName).join('|');                                                  // 39
    if (!~ALLOWED.indexOf(names)) {                                                                                    // 40
      return new Error('`' + componentName + '` ' + 'should have a Panel for a child, optionally preceded by a NavDrawer and/or followed by a Sidebar.');
    }                                                                                                                  // 45
  },                                                                                                                   // 46
                                                                                                                       //
  className: React.PropTypes.string                                                                                    // 47
};                                                                                                                     // 28
                                                                                                                       //
Layout.defaultProps = {                                                                                                // 50
  className: ''                                                                                                        // 51
};                                                                                                                     // 50
                                                                                                                       //
module.export("default",exports.default=(Layout));                                                                     // 54
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"NavDrawer.js":["react","classnames","./style","../../ui/components/Header",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/layouts/NavDrawer.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;module.import('react',{"default":function(v){React=v}});var classnames;module.import('classnames',{"default":function(v){classnames=v}});var style;module.import('./style',{"default":function(v){style=v}});var Header;module.import('../../ui/components/Header',{"default":function(v){Header=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var NavDrawer = function NavDrawer(props) {                                                                            // 6
  var _classnames, _classnames2;                                                                                       // 6
                                                                                                                       //
  var rootClasses = classnames([style.navDrawer], (_classnames = {}, _classnames[style['permanent-' + props.permanentAt]] = props.permanentAt, _classnames[style.wide] = props.width === 'wide', _classnames[style.active] = props.active, _classnames[style.pinned] = props.pinned, _classnames), props.className);
                                                                                                                       //
  var drawerClasses = classnames(style.drawerContent, (_classnames2 = {}, _classnames2[style.scrollY] = props.scrollY, _classnames2));
                                                                                                                       //
  return React.createElement(                                                                                          // 18
    'div',                                                                                                             // 19
    { 'data-react-toolbox': 'nav-drawer', className: rootClasses, onClick: props.onOverlayClick },                     // 19
    React.createElement(                                                                                               // 20
      'div',                                                                                                           // 20
      { 'data-react-toolbox': 'nav-drawer-scrim', className: style.scrim },                                            // 20
      React.createElement(                                                                                             // 21
        'aside',                                                                                                       // 21
        { 'data-react-toolbox': 'nav-drawer-content', className: drawerClasses, style: { width: "28rem", maxWidth: "28rem", justifyContent: "flex-start" } },
        props.children                                                                                                 // 22
      )                                                                                                                // 21
    )                                                                                                                  // 20
  );                                                                                                                   // 19
};                                                                                                                     // 27
                                                                                                                       //
NavDrawer.propTypes = {                                                                                                // 29
  active: React.PropTypes.bool,                                                                                        // 30
  children: React.PropTypes.any,                                                                                       // 31
  className: React.PropTypes.string,                                                                                   // 32
  onOverlayClick: React.PropTypes.func,                                                                                // 33
  permanentAt: React.PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl', 'xxxl']),                                         // 34
  pinned: React.PropTypes.bool,                                                                                        // 35
  scrollY: React.PropTypes.bool,                                                                                       // 36
  width: React.PropTypes.oneOf(['normal', 'wide'])                                                                     // 37
};                                                                                                                     // 29
                                                                                                                       //
NavDrawer.defaultProps = {                                                                                             // 40
  active: false,                                                                                                       // 41
  className: '',                                                                                                       // 42
  scrollY: false,                                                                                                      // 43
  width: 'normal'                                                                                                      // 44
};                                                                                                                     // 40
                                                                                                                       //
module.export("default",exports.default=(NavDrawer));                                                                  // 47
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Panel.js":["react","classnames",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/layouts/Panel.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;module.import('react',{"default":function(v){React=v}});var classnames;module.import('classnames',{"default":function(v){classnames=v}});
                                                                                                                       // 2
// import style from './style';                                                                                        //
                                                                                                                       //
var Panel = function Panel(_ref) {                                                                                     // 5
  var _classnames;                                                                                                     // 5
                                                                                                                       //
  var children = _ref.children;                                                                                        // 5
  var className = _ref.className;                                                                                      // 5
  var scrollY = _ref.scrollY;                                                                                          // 5
                                                                                                                       //
  if (typeof style === "undefined") {                                                                                  // 6
    style = {};                                                                                                        // 7
  }                                                                                                                    // 8
  var _className = classnames(style.panel, (_classnames = {}, _classnames[style.scrollY] = scrollY, _classnames), className);
                                                                                                                       //
  return React.createElement(                                                                                          // 13
    'div',                                                                                                             // 14
    { 'data-react-toolbox': 'panel', className: _className, style: { height: "inherit", width: "100%" } },             // 14
    children                                                                                                           // 15
  );                                                                                                                   // 14
};                                                                                                                     // 18
                                                                                                                       //
Panel.propTypes = {                                                                                                    // 20
  children: React.PropTypes.any,                                                                                       // 21
  className: React.PropTypes.string,                                                                                   // 22
  scrollY: React.PropTypes.bool                                                                                        // 23
};                                                                                                                     // 20
                                                                                                                       //
Panel.defaultProps = {                                                                                                 // 26
  className: '',                                                                                                       // 27
  scrollY: false                                                                                                       // 28
};                                                                                                                     // 26
                                                                                                                       //
module.export("default",exports.default=(Panel));                                                                      // 31
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Sidebar.js":["classnames","react","./style",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/layouts/Sidebar.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var classnames;module.import('classnames',{"default":function(v){classnames=v}});var React;module.import('react',{"default":function(v){React=v}});var style;module.import('./style',{"default":function(v){style=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var Sidebar = function Sidebar(props) {                                                                                // 5
  var _classnames, _classnames2;                                                                                       // 5
                                                                                                                       //
  var wrapperClasses = classnames(style.sidebar, style['width-' + props.width], (_classnames = {}, _classnames[style.pinned] = props.pinned, _classnames), props.className);
                                                                                                                       //
  var innerClasses = classnames(style.sidebarContent, (_classnames2 = {}, _classnames2[style.scrollY] = props.scrollY, _classnames2));
                                                                                                                       //
  return React.createElement(                                                                                          // 14
    'div',                                                                                                             // 15
    { 'data-react-toolbox': 'sidebar', className: wrapperClasses },                                                    // 15
    React.createElement(                                                                                               // 16
      'aside',                                                                                                         // 16
      { 'data-react-toolbox': 'sidebar-content', className: innerClasses },                                            // 16
      props.children                                                                                                   // 17
    )                                                                                                                  // 16
  );                                                                                                                   // 15
};                                                                                                                     // 21
                                                                                                                       //
Sidebar.propTypes = {                                                                                                  // 23
  children: React.PropTypes.any,                                                                                       // 24
  className: React.PropTypes.string,                                                                                   // 25
  pinned: React.PropTypes.bool,                                                                                        // 26
  scrollY: React.PropTypes.bool,                                                                                       // 27
  width: React.PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 33, 50, 66, 75, 100])                       // 28
};                                                                                                                     // 23
                                                                                                                       //
Sidebar.defaultProps = {                                                                                               // 31
  className: '',                                                                                                       // 32
  pinned: false,                                                                                                       // 33
  scrollY: false,                                                                                                      // 34
  width: 5                                                                                                             // 35
};                                                                                                                     // 31
                                                                                                                       //
module.export("default",exports.default=(Sidebar));                                                                    // 38
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"style.scss":["./style.scss.js",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/layouts/style.scss                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = require("./style.scss.js");                                                                           // 1
                                                                                                                       // 2
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"style.scss.js":["meteor/modules",function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/layouts/style.scss.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
exports.__esModule = true;                                                                                             // 1
exports.styles = exports["default"] = undefined;                                                                       // 2
                                                                                                                       // 3
var _modules = require("meteor/modules");                                                                              // 4
                                                                                                                       // 5
var _modules2 = _interopRequireDefault(_modules);                                                                      // 6
                                                                                                                       // 7
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      // 8
                                                                                                                       // 9
_modules2["default"].addStyles("._imports_ui_layouts__style__notificationMenu {\n  min-width: 300px; }\n\n._imports_ui_layouts__style__root {\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  align-items: stretch;\n  justify-content: space-between;\n  overflow-y: hidden; }\n  ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer {\n    width: 0;\n    min-width: 0;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.35s;\n    transition-property: width, min-width; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer ._imports_ui_layouts__style__scrim {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      z-index: 300;\n      width: 0;\n      height: 100%;\n      background-color: transparent;\n      transition: background-color 0.35s cubic-bezier(0.4, 0, 0.2, 1), width 10ms linear 0.35s; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer ._imports_ui_layouts__style__drawerContent {\n      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n      display: flex;\n      width: 28rem;\n      max-width: calc(100% - 5.6rem);\n      height: 100%;\n      flex-direction: column;\n      align-items: stretch;\n      justify-content: space-between;\n      overflow-x: hidden;\n      overflow-y: hidden;\n      color: #424242;\n      pointer-events: none;\n      background-color: #fafafa;\n      border-right: 1px solid #e0e0e0;\n      transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: translateX(-100%); }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer ._imports_ui_layouts__style__drawerContent._imports_ui_layouts__style__scrollY {\n        overflow-y: auto; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__pinned {\n      transition-delay: 0.07s;\n      width: 28rem;\n      max-width: calc(100% - 5.6rem); }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__pinned > ._imports_ui_layouts__style__scrim > ._imports_ui_layouts__style__drawerContent {\n        pointer-events: all;\n        transition-delay: 0.07s;\n        transform: translateX(0); }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__active:not(._imports_ui_layouts__style__pinned) {\n      transition-delay: 0.07s; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__active:not(._imports_ui_layouts__style__pinned) > ._imports_ui_layouts__style__scrim > ._imports_ui_layouts__style__drawerContent {\n        pointer-events: all;\n        transition-delay: 0.07s;\n        transform: translateX(0); }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__active:not(._imports_ui_layouts__style__pinned) ._imports_ui_layouts__style__scrim {\n        width: 100%;\n        background-color: rgba(0, 0, 0, 0.6);\n        transition: background-color 0.35s cubic-bezier(0.4, 0, 0.2, 1); }\n    @media screen and (min-width: 600px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__pinned {\n        width: 32rem;\n        max-width: 32rem; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer ._imports_ui_layouts__style__drawerContent {\n        width: 32rem;\n        max-width: 32rem; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__wide._imports_ui_layouts__style__pinned {\n        width: 40rem;\n        max-width: 40rem; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__wide ._imports_ui_layouts__style__drawerContent {\n        width: 40rem;\n        max-width: 40rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-sm {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-sm > ._imports_ui_layouts__style__scrim > ._imports_ui_layouts__style__drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-sm._imports_ui_layouts__style__wide {\n          width: 40rem;\n          max-width: 40rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-sm._imports_ui_layouts__style__active > ._imports_ui_layouts__style__scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 960px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-md {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-md > ._imports_ui_layouts__style__scrim > ._imports_ui_layouts__style__drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-md._imports_ui_layouts__style__wide {\n          width: 40rem;\n          max-width: 40rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-md._imports_ui_layouts__style__active > ._imports_ui_layouts__style__scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 1280px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-lg {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-lg > ._imports_ui_layouts__style__scrim > ._imports_ui_layouts__style__drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-lg._imports_ui_layouts__style__wide {\n          width: 40rem;\n          max-width: 40rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-lg._imports_ui_layouts__style__active > ._imports_ui_layouts__style__scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 1440px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-xl {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-xl > ._imports_ui_layouts__style__scrim > ._imports_ui_layouts__style__drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-xl._imports_ui_layouts__style__wide {\n          width: 40rem;\n          max-width: 40rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-xl._imports_ui_layouts__style__active > ._imports_ui_layouts__style__scrim {\n          width: 0;\n          background-color: transparent; } }\n    @media screen and (min-width: 1600px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-xxl {\n        transition-delay: 0.07s;\n        width: 32rem;\n        max-width: 32rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-xxl > ._imports_ui_layouts__style__scrim > ._imports_ui_layouts__style__drawerContent {\n          pointer-events: all;\n          transition-delay: 0.07s;\n          transform: translateX(0); }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-xxl._imports_ui_layouts__style__wide {\n          width: 40rem;\n          max-width: 40rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__navDrawer._imports_ui_layouts__style__permanent-xxl._imports_ui_layouts__style__active > ._imports_ui_layouts__style__scrim {\n          width: 0;\n          background-color: transparent; } }\n  ._imports_ui_layouts__style__root ._imports_ui_layouts__style__root ._imports_ui_layouts__style__scrim {\n    z-index: 299; }\n  ._imports_ui_layouts__style__root ._imports_ui_layouts__style__root ._imports_ui_layouts__style__root ._imports_ui_layouts__style__scrim {\n    z-index: 298; }\n  ._imports_ui_layouts__style__root ._imports_ui_layouts__style__panel {\n    position: relative;\n    display: flex;\n    height: 100%;\n    flex: 1;\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: space-between;\n    overflow-y: hidden; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__panel._imports_ui_layouts__style__scrollY {\n      overflow-y: auto; }\n  ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 299;\n    width: 0;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    color: #424242;\n    background-color: #fafafa;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 0.35s;\n    transition-property: width; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar ._imports_ui_layouts__style__sidebarContent {\n      display: flex;\n      height: 100%;\n      flex-direction: column;\n      align-items: stretch;\n      justify-content: space-between;\n      overflow-y: hidden; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar ._imports_ui_layouts__style__sidebarContent._imports_ui_layouts__style__scrollY {\n        overflow-y: auto; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 5.6rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1._imports_ui_layouts__style__pinned {\n          width: 5.6rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 6.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1._imports_ui_layouts__style__pinned {\n          width: 6.4rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 6.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1._imports_ui_layouts__style__pinned {\n          width: 6.4rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 6.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-1._imports_ui_layouts__style__pinned {\n          width: 6.4rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 11.2rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2._imports_ui_layouts__style__pinned {\n          width: 11.2rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 12.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2._imports_ui_layouts__style__pinned {\n          width: 12.8rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 12.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2._imports_ui_layouts__style__pinned {\n          width: 12.8rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 12.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-2._imports_ui_layouts__style__pinned {\n          width: 12.8rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 16.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3._imports_ui_layouts__style__pinned {\n          width: 16.8rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 19.2rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3._imports_ui_layouts__style__pinned {\n          width: 19.2rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 19.2rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3._imports_ui_layouts__style__pinned {\n          width: 19.2rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 19.2rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-3._imports_ui_layouts__style__pinned {\n          width: 19.2rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 22.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4._imports_ui_layouts__style__pinned {\n          width: 22.4rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 25.6rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4._imports_ui_layouts__style__pinned {\n          width: 25.6rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 25.6rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4._imports_ui_layouts__style__pinned {\n          width: 25.6rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 25.6rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-4._imports_ui_layouts__style__pinned {\n          width: 25.6rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 28rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5._imports_ui_layouts__style__pinned {\n          width: 28rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 32rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5._imports_ui_layouts__style__pinned {\n          width: 32rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 32rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5._imports_ui_layouts__style__pinned {\n          width: 32rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 32rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-5._imports_ui_layouts__style__pinned {\n          width: 32rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 33.6rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6._imports_ui_layouts__style__pinned {\n          width: 33.6rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 38.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6._imports_ui_layouts__style__pinned {\n          width: 38.4rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 38.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6._imports_ui_layouts__style__pinned {\n          width: 38.4rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 38.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-6._imports_ui_layouts__style__pinned {\n          width: 38.4rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 39.2rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7._imports_ui_layouts__style__pinned {\n          width: 39.2rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 44.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7._imports_ui_layouts__style__pinned {\n          width: 44.8rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 44.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7._imports_ui_layouts__style__pinned {\n          width: 44.8rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 44.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-7._imports_ui_layouts__style__pinned {\n          width: 44.8rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 44.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8._imports_ui_layouts__style__pinned {\n          width: 44.8rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 51.2rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8._imports_ui_layouts__style__pinned {\n          width: 51.2rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 51.2rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8._imports_ui_layouts__style__pinned {\n          width: 51.2rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 51.2rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-8._imports_ui_layouts__style__pinned {\n          width: 51.2rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 600px) and (orientation: landscape) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 50.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9._imports_ui_layouts__style__pinned {\n          width: 50.4rem; } }\n    @media screen and (min-width: 600px) and (orientation: portrait) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 57.6rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9._imports_ui_layouts__style__pinned {\n          width: 57.6rem; } }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 57.6rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9._imports_ui_layouts__style__pinned {\n          width: 57.6rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 57.6rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-9._imports_ui_layouts__style__pinned {\n          width: 57.6rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-10 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-10._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-10 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-10 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 64rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-10._imports_ui_layouts__style__pinned {\n          width: 64rem; } }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-10 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-10 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 64rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-10._imports_ui_layouts__style__pinned {\n          width: 64rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-11 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-11._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-11 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-11 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 70.4rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-11._imports_ui_layouts__style__pinned {\n          width: 70.4rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-12 ._imports_ui_layouts__style__sidebarContent {\n      min-width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-12._imports_ui_layouts__style__pinned {\n      width: 100%; }\n    @media screen and (min-width: 840px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-12 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-12 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 76.8rem; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-12._imports_ui_layouts__style__pinned {\n          width: 76.8rem; } }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-100 {\n      position: absolute; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-100 ._imports_ui_layouts__style__sidebarContent {\n        min-width: 100%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-100._imports_ui_layouts__style__pinned {\n        width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-25 {\n      position: absolute; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-25 ._imports_ui_layouts__style__sidebarContent {\n        min-width: 100%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-25._imports_ui_layouts__style__pinned {\n        width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-33 {\n      position: absolute; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-33 ._imports_ui_layouts__style__sidebarContent {\n        min-width: 100%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-33._imports_ui_layouts__style__pinned {\n        width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-50 {\n      position: absolute; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-50 ._imports_ui_layouts__style__sidebarContent {\n        min-width: 100%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-50._imports_ui_layouts__style__pinned {\n        width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-66 {\n      position: absolute; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-66 ._imports_ui_layouts__style__sidebarContent {\n        min-width: 100%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-66._imports_ui_layouts__style__pinned {\n        width: 100%; }\n    ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-75 {\n      position: absolute; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-75 ._imports_ui_layouts__style__sidebarContent {\n        min-width: 100%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-75._imports_ui_layouts__style__pinned {\n        width: 100%; }\n    @media screen and (min-width: 720px) {\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-25 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-25 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 25%; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-25._imports_ui_layouts__style__pinned {\n          width: 25%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-33 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-33 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 33%; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-33._imports_ui_layouts__style__pinned {\n          width: 33%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-50 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-50 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 50%; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-50._imports_ui_layouts__style__pinned {\n          width: 50%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-66 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-66 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 66%; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-66._imports_ui_layouts__style__pinned {\n          width: 66%; }\n      ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-75 {\n        position: relative; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-75 ._imports_ui_layouts__style__sidebarContent {\n          min-width: 75%; }\n        ._imports_ui_layouts__style__root ._imports_ui_layouts__style__sidebar._imports_ui_layouts__style__width-75._imports_ui_layouts__style__pinned {\n          width: 75%; } }\n/*# sourceMappingURL=style.scss.map */");
var styles = { "notificationMenu": "_imports_ui_layouts__style__notificationMenu", "root": "_imports_ui_layouts__style__root", "navDrawer": "_imports_ui_layouts__style__navDrawer", "scrim": "_imports_ui_layouts__style__scrim", "drawerContent": "_imports_ui_layouts__style__drawerContent", "scrollY": "_imports_ui_layouts__style__scrollY", "pinned": "_imports_ui_layouts__style__pinned", "active": "_imports_ui_layouts__style__active", "wide": "_imports_ui_layouts__style__wide", "permanent-sm": "_imports_ui_layouts__style__permanent-sm", "permanent-md": "_imports_ui_layouts__style__permanent-md", "permanent-lg": "_imports_ui_layouts__style__permanent-lg", "permanent-xl": "_imports_ui_layouts__style__permanent-xl", "permanent-xxl": "_imports_ui_layouts__style__permanent-xxl", "panel": "_imports_ui_layouts__style__panel", "sidebar": "_imports_ui_layouts__style__sidebar", "sidebarContent": "_imports_ui_layouts__style__sidebarContent", "width-1": "_imports_ui_layouts__style__width-1", "width-2": "_imports_ui_layouts__style__width-2", "width-3": "_imports_ui_layouts__style__width-3", "width-4": "_imports_ui_layouts__style__width-4", "width-5": "_imports_ui_layouts__style__width-5", "width-6": "_imports_ui_layouts__style__width-6", "width-7": "_imports_ui_layouts__style__width-7", "width-8": "_imports_ui_layouts__style__width-8", "width-9": "_imports_ui_layouts__style__width-9", "width-10": "_imports_ui_layouts__style__width-10", "width-11": "_imports_ui_layouts__style__width-11", "width-12": "_imports_ui_layouts__style__width-12", "width-100": "_imports_ui_layouts__style__width-100", "width-25": "_imports_ui_layouts__style__width-25", "width-33": "_imports_ui_layouts__style__width-33", "width-50": "_imports_ui_layouts__style__width-50", "width-66": "_imports_ui_layouts__style__width-66", "width-75": "_imports_ui_layouts__style__width-75" };
exports["default"] = styles;                                                                                           // 12
exports.styles = styles;                                                                                               // 13
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"pages":{"AboutPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","/imports/ui/components/AboutAppCard","/imports/ui/components/GlassCard","/imports/ui/components/PhoneContainer",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/AboutPage.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({AboutPage:function(){return AboutPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var AboutAppCard;module.import('/imports/ui/components/AboutAppCard',{"AboutAppCard":function(v){AboutAppCard=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PhoneContainer;module.import('/imports/ui/components/PhoneContainer',{"PhoneContainer":function(v){PhoneContainer=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       //
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
var AboutPage = function (_React$Component) {                                                                          // 8
  _inherits(AboutPage, _React$Component);                                                                              // 8
                                                                                                                       //
  function AboutPage(props) {                                                                                          // 9
    _classCallCheck(this, AboutPage);                                                                                  // 9
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 9
  }                                                                                                                    // 11
                                                                                                                       //
  AboutPage.prototype.render = function render() {                                                                     // 8
    return React.createElement(                                                                                        // 14
      'div',                                                                                                           // 15
      { id: 'aboutPage' },                                                                                             // 15
      React.createElement(                                                                                             // 16
        PhoneContainer,                                                                                                // 16
        null,                                                                                                          // 16
        React.createElement(                                                                                           // 17
          GlassCard,                                                                                                   // 17
          null,                                                                                                        // 17
          React.createElement(AboutAppCard, null)                                                                      // 18
        )                                                                                                              // 17
      )                                                                                                                // 16
    );                                                                                                                 // 15
  };                                                                                                                   // 23
                                                                                                                       //
  return AboutPage;                                                                                                    // 8
}(React.Component);                                                                                                    // 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"BreathalyzerPage.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","material-ui/Tabs","material-ui/Stepper","material-ui/RaisedButton","material-ui/FlatButton","/imports/ui/components/PageContainer","/imports/ui/workflows/breathalyzer/BreathalyzerPre","/imports/ui/workflows/breathalyzer/BreathalyzerDetail","/imports/ui/workflows/breathalyzer/BreathalyzerPost","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/BreathalyzerPage.jsx                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({BreathalyzerPage:function(){return BreathalyzerPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Tab,Tabs;module.import('material-ui/Tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var Step,Stepper,StepLabel;module.import('material-ui/Stepper',{"Step":function(v){Step=v},"Stepper":function(v){Stepper=v},"StepLabel":function(v){StepLabel=v}});var RaisedButton;module.import('material-ui/RaisedButton',{"default":function(v){RaisedButton=v}});var FlatButton;module.import('material-ui/FlatButton',{"default":function(v){FlatButton=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var PreInitialize;module.import('/imports/ui/workflows/breathalyzer/BreathalyzerPre',{"Initialize":function(v){PreInitialize=v}});var DetailInitialize;module.import('/imports/ui/workflows/breathalyzer/BreathalyzerDetail',{"Initialize":function(v){DetailInitialize=v}});var PostInitialize;module.import('/imports/ui/workflows/breathalyzer/BreathalyzerPost',{"Initialize":function(v){PostInitialize=v}});var BreathalyzerPre;module.import('/imports/ui/workflows/breathalyzer/BreathalyzerPre',{"default":function(v){BreathalyzerPre=v}});var BreathalyzerDetail;module.import('/imports/ui/workflows/breathalyzer/BreathalyzerDetail',{"default":function(v){BreathalyzerDetail=v}});var BreathalyzerPost;module.import('/imports/ui/workflows/breathalyzer/BreathalyzerPost',{"default":function(v){BreathalyzerPost=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       // 15
                                                                                                                       // 16
                                                                                                                       //
Session.setDefault('bacTrackPage', {                                                                                   // 18
  style: {},                                                                                                           // 19
  isLoggedIn: false,                                                                                                   // 20
  finished: false,                                                                                                     // 21
  onTab: 'prelims',                                                                                                    // 22
  lastStep: undefined,                                                                                                 // 23
  doneStep: undefined,                                                                                                 // 24
  stepIndex: 0,                                                                                                        // 25
  substepsCompleted: false                                                                                             // 26
});                                                                                                                    // 18
                                                                                                                       //
var BreathalyzerPage = function (_React$Component) {                                                                   // 30
  _inherits(BreathalyzerPage, _React$Component);                                                                       // 30
                                                                                                                       //
  function BreathalyzerPage() {                                                                                        // 30
    _classCallCheck(this, BreathalyzerPage);                                                                           // 30
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 30
  }                                                                                                                    // 30
                                                                                                                       //
  BreathalyzerPage.prototype.getMeteorData = function getMeteorData() {                                                // 30
    var data = Session.get('bacTrackPage');                                                                            // 33
    if (typeof data === 'undefined') {                                                                                 // 34
      data = {                                                                                                         // 35
        style: {},                                                                                                     // 36
        isLoggedIn: false,                                                                                             // 37
        onTab: 'prelims',                                                                                              // 38
        finished: false,                                                                                               // 39
        stepIndex: 0                                                                                                   // 40
      };                                                                                                               // 35
      Session.set('bacTrackPage', data);                                                                               // 42
    }                                                                                                                  // 43
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 45
      data.isLoggedIn = true;                                                                                          // 46
    }                                                                                                                  // 47
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 51
      data.style.color = 'black';                                                                                      // 52
      data.style.background = 'white';                                                                                 // 53
    } else {                                                                                                           // 54
      data.style.color = 'white';                                                                                      // 55
      data.style.background = 'black';                                                                                 // 56
    }                                                                                                                  // 57
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 60
      data.style.filter = 'blur(3px)';                                                                                 // 61
      data.style.webkitFilter = 'blur(3px)';                                                                           // 62
    }                                                                                                                  // 63
                                                                                                                       //
    if (Session.get('appWidth') > 768) {                                                                               // 65
      Session.set('hasPageVerticalPadding', true);                                                                     // 66
      Session.set('mainPanelIsCard', true);                                                                            // 67
    } else {                                                                                                           // 68
      Session.set('hasPageVerticalPadding', false);                                                                    // 69
      Session.set('mainPanelIsCard', false);                                                                           // 70
    }                                                                                                                  // 71
    Session.set('bacTrackPage', data);                                                                                 // 72
    console.log("Finishing getMeteorData");                                                                            // 73
    return data;                                                                                                       // 74
  };                                                                                                                   // 75
                                                                                                                       //
  BreathalyzerPage.prototype.renderAuthenticatedUserControls = function renderAuthenticatedUserControls(isLoggedIn) {  // 30
                                                                                                                       //
    console.log("In renderAuthenticatedUserControls");                                                                 // 79
    // user should be able to see the addBreathalyzer component if they're logged in and looking at their              //
    // own profile; otherwise,                                                                                         //
    if (isLoggedIn) {                                                                                                  // 82
      if (!this.props.routeParams.userId) {                                                                            // 83
        var data = Session.get('bacTrackPage');                                                                        // 84
        var finished = data.finished;                                                                                  // 85
        var stepIndex = data.stepIndex;                                                                                // 86
        var contentStyle = { margin: '0 16px' };                                                                       // 87
        console.log("In renderAuthenticatedUserControls - 2");                                                         // 88
                                                                                                                       //
        return React.createElement(                                                                                    // 90
          'div',                                                                                                       // 91
          { id: 'breathalyzerPage', style: { width: '100%', maxWidth: 700, margin: 'auto' } },                         // 91
          React.createElement(                                                                                         // 93
            Stepper,                                                                                                   // 93
            { activeStep: stepIndex, linear: true },                                                                   // 93
            React.createElement(                                                                                       // 95
              Step,                                                                                                    // 95
              null,                                                                                                    // 95
              React.createElement(                                                                                     // 97
                StepLabel,                                                                                             // 97
                null,                                                                                                  // 97
                'Prelims'                                                                                              // 97
              )                                                                                                        // 97
            ),                                                                                                         // 95
            React.createElement(                                                                                       // 101
              Step,                                                                                                    // 101
              null,                                                                                                    // 101
              React.createElement(                                                                                     // 103
                StepLabel,                                                                                             // 103
                null,                                                                                                  // 103
                'Breathalyzer'                                                                                         // 103
              )                                                                                                        // 103
            ),                                                                                                         // 101
            React.createElement(                                                                                       // 107
              Step,                                                                                                    // 107
              null,                                                                                                    // 107
              React.createElement(                                                                                     // 109
                StepLabel,                                                                                             // 109
                null,                                                                                                  // 109
                'Results'                                                                                              // 109
              )                                                                                                        // 109
            )                                                                                                          // 107
          ),                                                                                                           // 93
          React.createElement(                                                                                         // 115
            'div',                                                                                                     // 115
            { style: contentStyle },                                                                                   // 115
            finished ? React.createElement(                                                                            // 116
              'p',                                                                                                     // 117
              null,                                                                                                    // 117
              React.createElement(                                                                                     // 118
                'a',                                                                                                   // 118
                { href: '#', onClick: this.reset.bind(this) },                                                         // 118
                'Click here'                                                                                           // 118
              ),                                                                                                       // 118
              ' to reset the example.'                                                                                 // 117
            ) : React.createElement(                                                                                   // 117
              'div',                                                                                                   // 125
              null,                                                                                                    // 125
              React.createElement(                                                                                     // 127
                'p',                                                                                                   // 127
                null,                                                                                                  // 127
                this.getStepContent(stepIndex)                                                                         // 128
              ),                                                                                                       // 127
              React.createElement(                                                                                     // 130
                'div',                                                                                                 // 130
                { style: { marginTop: 12 } },                                                                          // 130
                React.createElement(FlatButton, {                                                                      // 131
                  label: 'Back',                                                                                       // 132
                  disabled: stepIndex === 0,                                                                           // 133
                  onClick: this.handlePrev.bind(this),                                                                 // 134
                  style: { marginRight: 12 }                                                                           // 135
                }),                                                                                                    // 131
                React.createElement(RaisedButton, {                                                                    // 137
                  label: stepIndex === 2 ? 'Finish' : 'Next',                                                          // 138
                  primary: true,                                                                                       // 139
                  onClick: this.handleNext.bind(this)                                                                  // 140
                })                                                                                                     // 137
              )                                                                                                        // 130
            )                                                                                                          // 125
          )                                                                                                            // 115
        );                                                                                                             // 91
      }                                                                                                                // 148
    } else {                                                                                                           // 149
      return React.createElement('div', null);                                                                         // 150
    }                                                                                                                  // 154
    console.log("Finishing renderAuthenticatedUserControls");                                                          // 155
  };                                                                                                                   // 156
                                                                                                                       //
  BreathalyzerPage.prototype.render = function render() {                                                              // 30
    var data = Session.get('bacTrackPage');                                                                            // 159
    console.log('In BreathalyzerPage render');                                                                         // 160
    return React.createElement(                                                                                        // 161
      'div',                                                                                                           // 162
      { id: 'breathalyzerPage', style: { paddingTop: "15px" } },                                                       // 162
      React.createElement(                                                                                             // 163
        PageContainer,                                                                                                 // 163
        null,                                                                                                          // 163
        React.createElement(                                                                                           // 164
          Tabs,                                                                                                        // 164
          {                                                                                                            // 164
            value: data.onTab,                                                                                         // 165
            onChange: this.gotoStep.bind(this) },                                                                      // 166
          React.createElement(                                                                                         // 167
            Tab,                                                                                                       // 167
            { label: 'Prelims', value: 'prelims' },                                                                    // 167
            React.createElement(BreathalyzerPre, {                                                                     // 169
              lastStep: this.gotoStep.bind(this, 'breathalyzer'),                                                      // 170
              cancelStep: this.cancelStep.bind(this) })                                                                // 171
          ),                                                                                                           // 167
          React.createElement(                                                                                         // 173
            Tab,                                                                                                       // 173
            { label: 'Breathalyzer', value: 'breathalyzer' },                                                          // 173
            React.createElement(BreathalyzerDetail, {                                                                  // 175
              lastStep: this.gotoStep.bind(this, 'results'),                                                           // 176
              cancelStep: this.cancelStep.bind(this) })                                                                // 177
          ),                                                                                                           // 173
          React.createElement(                                                                                         // 179
            Tab,                                                                                                       // 179
            { label: 'Results', value: 'results' },                                                                    // 179
            React.createElement(BreathalyzerPost, {                                                                    // 181
              lastStep: this.doneStep.bind(this),                                                                      // 182
              cancelStep: this.cancelStep.bind(this) })                                                                // 183
          )                                                                                                            // 179
        )                                                                                                              // 164
      )                                                                                                                // 163
    );                                                                                                                 // 162
    console.log("Finishing render");                                                                                   // 189
  };                                                                                                                   // 190
                                                                                                                       //
  BreathalyzerPage.prototype.gotoStep = function gotoStep(nextStep) {                                                  // 30
    var data = Session.get('bacTrackPage');                                                                            // 193
    data.onTab = nextStep;                                                                                             // 194
    Session.set('bacTrackPage', data);                                                                                 // 195
  };                                                                                                                   // 196
                                                                                                                       //
  BreathalyzerPage.prototype.cancelStep = function cancelStep() {                                                      // 30
    var data = Session.get('bacTrackPage');                                                                            // 199
                                                                                                                       //
    if (typeof data.cancelStep === 'undefined') {                                                                      // 201
      this.reset();                                                                                                    // 202
      this.gotoStep('prelims');                                                                                        // 203
    } else {                                                                                                           // 204
      var c = data.cancelStep;                                                                                         // 205
      this.reset();                                                                                                    // 206
      c();                                                                                                             // 207
    }                                                                                                                  // 208
  };                                                                                                                   // 209
                                                                                                                       //
  BreathalyzerPage.prototype.doneStep = function doneStep() {                                                          // 30
    var data = Session.get('bacTrackPage');                                                                            // 212
    if (typeof data.doneStep === 'undefined') {                                                                        // 213
      this.gotoStep('prelims');                                                                                        // 214
    } else {                                                                                                           // 215
      data.doneStep();                                                                                                 // 216
    }                                                                                                                  // 217
  };                                                                                                                   // 218
                                                                                                                       //
  BreathalyzerPage.prototype.handleNext = function handleNext() {                                                      // 30
    var data = Session.get('bacTrackPage');                                                                            // 222
    var stepIndex = data.stepIndex;                                                                                    // 223
    data.stepIndex = stepIndex + 1;                                                                                    // 224
    data.finished = stepIndex >= 2;                                                                                    // 225
    Session.set('bacTrackPage', data);                                                                                 // 226
  };                                                                                                                   // 227
                                                                                                                       //
  BreathalyzerPage.prototype.handlePrev = function handlePrev() {                                                      // 30
    var data = Session.get('bacTrackPage');                                                                            // 230
    var stepIndex = data.stepIndex;                                                                                    // 231
    if (stepIndex > 0) {                                                                                               // 232
      data.stepIndex = stepIndex - 1;                                                                                  // 233
      Session.set('bacTrackPage', data);                                                                               // 234
    }                                                                                                                  // 235
  };                                                                                                                   // 236
                                                                                                                       //
  BreathalyzerPage.prototype.getStepContent = function getStepContent(stepIndex) {                                     // 30
    console.log("In getStepContent with " + stepIndex);                                                                // 239
    switch (stepIndex) {                                                                                               // 240
      case 0:                                                                                                          // 241
        return React.createElement(                                                                                    // 242
          'div',                                                                                                       // 243
          null,                                                                                                        // 243
          React.createElement(BreathalyzerPre, null)                                                                   // 244
        );                                                                                                             // 243
      case 1:                                                                                                          // 247
        return React.createElement(                                                                                    // 248
          'div',                                                                                                       // 249
          null,                                                                                                        // 249
          React.createElement(BreathalyzerDetail, null)                                                                // 250
        );                                                                                                             // 249
      case 2:                                                                                                          // 253
        return React.createElement(                                                                                    // 254
          'div',                                                                                                       // 255
          null,                                                                                                        // 255
          React.createElement(BreathalyzerPost, null)                                                                  // 256
        );                                                                                                             // 255
      default:                                                                                                         // 259
        return "Error";                                                                                                // 260
    }                                                                                                                  // 240
  };                                                                                                                   // 262
                                                                                                                       //
  BreathalyzerPage.prototype.setData = function setData(event, value) {                                                // 30
    var data = Session.get('bacTrackPage');                                                                            // 264
    data[event] = value;                                                                                               // 265
    Session.set('bacTrackPage', data);                                                                                 // 266
  };                                                                                                                   // 267
                                                                                                                       //
  BreathalyzerPage.prototype.reset = function reset(event) {                                                           // 30
    console.log("In reset.");                                                                                          // 270
    //event.preventDefault();                                                                                          //
    PreInitialize();                                                                                                   // 272
    DetailInitialize();                                                                                                // 273
    PostInitialize();                                                                                                  // 274
    var data = Session.get('bacTrackPage');                                                                            // 275
    data.stepIndex = 0;                                                                                                // 276
    data.finished = false;                                                                                             // 277
    data.substepscompleted = false;                                                                                    // 278
    Session.set('bacTrackPage', data);                                                                                 // 279
  };                                                                                                                   // 280
                                                                                                                       //
  return BreathalyzerPage;                                                                                             // 30
}(React.Component);                                                                                                    // 30
                                                                                                                       //
BreathalyzerPage.propTypes = {                                                                                         // 283
  children: React.PropTypes.any                                                                                        // 284
};                                                                                                                     // 283
ReactMixin(BreathalyzerPage.prototype, ReactMeteorData);                                                               // 286
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"CarePlanPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","/imports/ui/components/AboutAppCard","/imports/ui/components/GlassCard","/imports/ui/components/PhoneContainer",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/CarePlanPage.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({CarePlanPage:function(){return CarePlanPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var AboutAppCard;module.import('/imports/ui/components/AboutAppCard',{"AboutAppCard":function(v){AboutAppCard=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PhoneContainer;module.import('/imports/ui/components/PhoneContainer',{"PhoneContainer":function(v){PhoneContainer=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       //
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
var CarePlanPage = function (_React$Component) {                                                                       // 8
  _inherits(CarePlanPage, _React$Component);                                                                           // 8
                                                                                                                       //
  function CarePlanPage(props) {                                                                                       // 9
    _classCallCheck(this, CarePlanPage);                                                                               // 9
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 9
  }                                                                                                                    // 11
                                                                                                                       //
  CarePlanPage.prototype.render = function render() {                                                                  // 8
    return React.createElement(                                                                                        // 14
      'div',                                                                                                           // 15
      { id: 'carePlanPage' },                                                                                          // 15
      React.createElement(                                                                                             // 16
        PhoneContainer,                                                                                                // 16
        null,                                                                                                          // 16
        React.createElement(                                                                                           // 17
          GlassCard,                                                                                                   // 17
          null,                                                                                                        // 17
          React.createElement(AboutAppCard, null)                                                                      // 18
        )                                                                                                              // 17
      )                                                                                                                // 16
    );                                                                                                                 // 15
  };                                                                                                                   // 23
                                                                                                                       //
  return CarePlanPage;                                                                                                 // 8
}(React.Component);                                                                                                    // 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ConversationsPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","/imports/ui/components/Spacer","/imports/ui/components/PageContainer","/imports/ui/workflows/conversations/AddPostToConversation","/imports/ui/workflows/conversations/ConversationPosts","react-toolbox/lib/card","/imports/ui/components/GlassCard","/imports/ui/components/DynamicSpacer","/imports/api/topics/topics",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/ConversationsPage.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({ConversationsPage:function(){return ConversationsPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Spacer;module.import('/imports/ui/components/Spacer',{"default":function(v){Spacer=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var AddPostToConversation;module.import('/imports/ui/workflows/conversations/AddPostToConversation',{"AddPostToConversation":function(v){AddPostToConversation=v}});var ConversationPosts;module.import('/imports/ui/workflows/conversations/ConversationPosts',{"ConversationPosts":function(v){ConversationPosts=v}});var CardTitle;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var DynamicSpacer;module.import('/imports/ui/components/DynamicSpacer',{"DynamicSpacer":function(v){DynamicSpacer=v}});var Topics;module.import('/imports/api/topics/topics',{"Topics":function(v){Topics=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
                                                                                                                       // 13
                                                                                                                       //
var ConversationsPage = function (_React$Component) {                                                                  // 15
  _inherits(ConversationsPage, _React$Component);                                                                      // 15
                                                                                                                       //
  function ConversationsPage(props) {                                                                                  // 16
    _classCallCheck(this, ConversationsPage);                                                                          // 16
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 16
  }                                                                                                                    // 18
                                                                                                                       //
  ConversationsPage.prototype.componentDidMount = function componentDidMount() {                                       // 15
    console.log('Topic of conversation...', this.props.routeParams.topicId);                                           // 20
                                                                                                                       //
    Topics.update({ _id: this.props.routeParams.topicId }, { $inc: { views: 1 } });                                    // 22
  };                                                                                                                   // 23
                                                                                                                       //
  ConversationsPage.prototype.getMeteorData = function getMeteorData() {                                               // 15
    var data = {                                                                                                       // 26
      state: {                                                                                                         // 27
        topicName: ''                                                                                                  // 28
      }                                                                                                                // 27
      // style: {                                                                                                      //
      //   overflowY: 'scroll',                                                                                        //
      //   WebkitOverflowScrolling: 'touch',                                                                           //
      //   WebkitTransform: 'translateZ(0px)',                                                                         //
      //   WebkitTransform: 'translate3d(0, 0, 0)',                                                                    //
      //   WebkitPerspective: '1000'                                                                                   //
      // }                                                                                                             //
    };                                                                                                                 // 26
                                                                                                                       //
    var topic = Topics.findOne({ _id: this.props.routeParams.topicId });                                               // 40
    if (topic) {                                                                                                       // 41
      data.state.topicName = topic.name;                                                                               // 42
    }                                                                                                                  // 43
                                                                                                                       //
    return data;                                                                                                       // 45
  };                                                                                                                   // 46
                                                                                                                       //
  ConversationsPage.prototype.render = function render() {                                                             // 15
    return React.createElement(                                                                                        // 51
      'div',                                                                                                           // 52
      { id: 'ConversationsPage' },                                                                                     // 52
      React.createElement(                                                                                             // 53
        PageContainer,                                                                                                 // 53
        null,                                                                                                          // 53
        React.createElement(                                                                                           // 54
          GlassCard,                                                                                                   // 54
          null,                                                                                                        // 54
          React.createElement(CardTitle, { title: this.data.state.topicName })                                         // 55
        ),                                                                                                             // 54
        React.createElement(DynamicSpacer, null),                                                                      // 57
        React.createElement(ConversationPosts, { topicId: this.props.routeParams.topicId }),                           // 58
        React.createElement(AddPostToConversation, { topicId: this.props.routeParams.topicId })                        // 59
      )                                                                                                                // 53
    );                                                                                                                 // 52
  };                                                                                                                   // 63
                                                                                                                       //
  return ConversationsPage;                                                                                            // 15
}(React.Component);                                                                                                    // 15
                                                                                                                       //
ConversationsPage.propTypes = {};                                                                                      // 68
ReactMixin(ConversationsPage.prototype, ReactMeteorData);                                                              // 69
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"DashboardPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","/imports/ui/components/Spacer","/imports/ui/components/GlassCard","/imports/ui/components/PageContainer","/imports/api/topics/topics","/imports/api/posts/posts","/imports/api/devices/devices","/imports/api/observations/observations","meteor/meteor","/imports/api/statistics/statistics","react-highcharts",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/DashboardPage.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({DashboardPage:function(){return DashboardPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Spacer;module.import('/imports/ui/components/Spacer',{"default":function(v){Spacer=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var Topics;module.import('/imports/api/topics/topics',{"Topics":function(v){Topics=v}});var Posts;module.import('/imports/api/posts/posts',{"Posts":function(v){Posts=v}});var Devices;module.import('/imports/api/devices/devices',{"Devices":function(v){Devices=v}});var Observations;module.import('/imports/api/observations/observations',{"Observations":function(v){Observations=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Statistics;module.import('/imports/api/statistics/statistics',{"Statistics":function(v){Statistics=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       //
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       //
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       //
                                                                                                                       // 15
                                                                                                                       //
var ReactHighcharts = require('react-highcharts');                                                                     // 17
                                                                                                                       //
                                                                                                                       // 19
                                                                                                                       //
var config = {                                                                                                         // 22
  chart: {                                                                                                             // 23
    // backgroundColor: {                                                                                              //
    //   linearGradient: [0, 0, 0, 400],                                                                               //
    //   stops: [ [0, 'rgb(248, 248, 248)'],                                                                           //
    //   [1, 'rgb(255, 255, 255)'] ]                                                                                   //
    // }                                                                                                               //
  },                                                                                                                   // 23
  xAxis: {                                                                                                             // 30
    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']                   // 31
  },                                                                                                                   // 30
  series: [{                                                                                                           // 33
    data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 295.6, 454.4]                           // 34
    // data: Statistics.find().map(function(datum){                                                                    //
    //   return datum.usersCount;                                                                                      //
    // })                                                                                                              //
  }]                                                                                                                   // 33
};                                                                                                                     // 22
                                                                                                                       //
var DashboardPage = function (_React$Component) {                                                                      // 41
  _inherits(DashboardPage, _React$Component);                                                                          // 41
                                                                                                                       //
  function DashboardPage(props) {                                                                                      // 42
    _classCallCheck(this, DashboardPage);                                                                              // 42
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 42
  }                                                                                                                    // 44
                                                                                                                       //
  DashboardPage.prototype.getMeteorData = function getMeteorData() {                                                   // 41
                                                                                                                       //
    var data = {                                                                                                       // 48
      style: {},                                                                                                       // 49
      state: {                                                                                                         // 50
        usersCount: 0,                                                                                                 // 51
        postsCount: 0,                                                                                                 // 52
        devicesCount: 0,                                                                                               // 53
        observationsCount: 0,                                                                                          // 54
        topicsCount: 0,                                                                                                // 55
        patientsCount: 0,                                                                                              // 56
        practitionersCount: 0                                                                                          // 57
      },                                                                                                               // 50
      config: {                                                                                                        // 59
        chart: {                                                                                                       // 60
          title: {                                                                                                     // 61
            text: "History"                                                                                            // 62
          }                                                                                                            // 61
          // backgroundColor: {                                                                                        //
          //   linearGradient: [0, 0, 0, 400],                                                                         //
          //   stops: [ [0, 'rgb(248, 248, 248)'],                                                                     //
          //   [1, 'rgb(255, 255, 255)'] ]                                                                             //
          // }                                                                                                         //
        },                                                                                                             // 60
        xAxis: {                                                                                                       // 70
          // categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']          //
          categories: Statistics.find().map(function (datum) {                                                         // 72
            return moment(datum.date).format("MMM DD");                                                                // 73
          })                                                                                                           // 74
        },                                                                                                             // 70
        // series: [{                                                                                                  //
        //   data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 295.6, 454.4]                  //
        // }]                                                                                                          //
        series: [{                                                                                                     // 79
          name: "Users",                                                                                               // 80
          data: Statistics.find().map(function (datum) {                                                               // 81
            return datum.usersCount;                                                                                   // 82
          })                                                                                                           // 83
        }, {                                                                                                           // 79
          name: "Posts",                                                                                               // 85
          data: Statistics.find().map(function (datum) {                                                               // 86
            return datum.postsCount;                                                                                   // 87
          })                                                                                                           // 88
        }, {                                                                                                           // 84
          name: "Devices",                                                                                             // 90
          data: Statistics.find().map(function (datum) {                                                               // 91
            return datum.devicesCount;                                                                                 // 92
          })                                                                                                           // 93
        }, {                                                                                                           // 89
          name: "Observations",                                                                                        // 95
          data: Statistics.find().map(function (datum) {                                                               // 96
            return datum.observationsCount;                                                                            // 97
          })                                                                                                           // 98
        }, {                                                                                                           // 94
          name: "Topics",                                                                                              // 100
          data: Statistics.find().map(function (datum) {                                                               // 101
            return datum.topicsCount;                                                                                  // 102
          })                                                                                                           // 103
        }, {                                                                                                           // 99
          name: "Patients",                                                                                            // 105
          data: Statistics.find().map(function (datum) {                                                               // 106
            return datum.patientsCount;                                                                                // 107
          })                                                                                                           // 108
        }, {                                                                                                           // 104
          name: "Practitioners",                                                                                       // 110
          data: Statistics.find().map(function (datum) {                                                               // 111
            return datum.practitionersCount;                                                                           // 112
          })                                                                                                           // 113
        }]                                                                                                             // 109
      }                                                                                                                // 59
    };                                                                                                                 // 48
                                                                                                                       //
    data.state.usersCount = Meteor.users.find().count();                                                               // 118
    data.state.patientsCount = Patients.find().count();                                                                // 119
    data.state.practitionersCount = Practitioners.find().count();                                                      // 120
    data.state.postsCount = Posts.find().count();                                                                      // 121
    data.state.devicesCount = Devices.find().count();                                                                  // 122
    data.state.observationsCount = Observations.find().count();                                                        // 123
    data.state.topicsCount = Topics.find().count();                                                                    // 124
                                                                                                                       //
    return data;                                                                                                       // 126
  };                                                                                                                   // 127
                                                                                                                       //
  DashboardPage.prototype.render = function render() {                                                                 // 41
    return React.createElement(                                                                                        // 130
      'div',                                                                                                           // 131
      { id: 'dashboardPage', style: this.data.style },                                                                 // 131
      React.createElement(                                                                                             // 132
        PageContainer,                                                                                                 // 132
        null,                                                                                                          // 132
        React.createElement(Spacer, null),                                                                             // 133
        React.createElement(                                                                                           // 134
          GlassCard,                                                                                                   // 134
          { style: { width: '164px', marginRight: '40px', display: 'inline-block' } },                                 // 134
          React.createElement(                                                                                         // 135
            'h2',                                                                                                      // 135
            { style: { marginLeft: '10px' } },                                                                         // 135
            this.data.state.usersCount                                                                                 // 135
          ),                                                                                                           // 135
          React.createElement(                                                                                         // 136
            'h4',                                                                                                      // 136
            { style: { marginLeft: '10px', color: 'gray' } },                                                          // 136
            'Users'                                                                                                    // 136
          )                                                                                                            // 136
        ),                                                                                                             // 134
        React.createElement(                                                                                           // 138
          GlassCard,                                                                                                   // 138
          { style: { width: '164px', marginRight: '40px', display: 'inline-block' } },                                 // 138
          React.createElement(                                                                                         // 139
            'h2',                                                                                                      // 139
            { style: { marginLeft: '10px' } },                                                                         // 139
            this.data.state.postsCount                                                                                 // 139
          ),                                                                                                           // 139
          React.createElement(                                                                                         // 140
            'h4',                                                                                                      // 140
            { style: { marginLeft: '10px', color: 'gray' } },                                                          // 140
            'Posts'                                                                                                    // 140
          )                                                                                                            // 140
        ),                                                                                                             // 138
        React.createElement(                                                                                           // 142
          GlassCard,                                                                                                   // 142
          { style: { width: '164px', marginRight: '40px', display: 'inline-block' } },                                 // 142
          React.createElement(                                                                                         // 143
            'h2',                                                                                                      // 143
            { style: { marginLeft: '10px' } },                                                                         // 143
            this.data.state.devicesCount                                                                               // 143
          ),                                                                                                           // 143
          React.createElement(                                                                                         // 144
            'h4',                                                                                                      // 144
            { style: { marginLeft: '10px', color: 'gray' } },                                                          // 144
            'Devices'                                                                                                  // 144
          )                                                                                                            // 144
        ),                                                                                                             // 142
        React.createElement(                                                                                           // 146
          GlassCard,                                                                                                   // 146
          { style: { width: '164px', marginRight: '40px', display: 'inline-block' } },                                 // 146
          React.createElement(                                                                                         // 147
            'h2',                                                                                                      // 147
            { style: { marginLeft: '10px' } },                                                                         // 147
            this.data.state.observationsCount                                                                          // 147
          ),                                                                                                           // 147
          React.createElement(                                                                                         // 148
            'h4',                                                                                                      // 148
            { style: { marginLeft: '10px', color: 'gray' } },                                                          // 148
            'Observations'                                                                                             // 148
          )                                                                                                            // 148
        ),                                                                                                             // 146
        React.createElement(                                                                                           // 150
          GlassCard,                                                                                                   // 150
          { style: { width: '164px', marginRight: '40px', display: 'inline-block' } },                                 // 150
          React.createElement(                                                                                         // 151
            'h2',                                                                                                      // 151
            { style: { marginLeft: '10px' } },                                                                         // 151
            this.data.state.topicsCount                                                                                // 151
          ),                                                                                                           // 151
          React.createElement(                                                                                         // 152
            'h4',                                                                                                      // 152
            { style: { marginLeft: '10px', color: 'gray' } },                                                          // 152
            'Topics'                                                                                                   // 152
          )                                                                                                            // 152
        ),                                                                                                             // 150
        React.createElement(                                                                                           // 154
          GlassCard,                                                                                                   // 154
          { style: { width: '164px', marginRight: '40px', display: 'inline-block' } },                                 // 154
          React.createElement(                                                                                         // 155
            'h2',                                                                                                      // 155
            { style: { marginLeft: '10px' } },                                                                         // 155
            this.data.state.patientsCount                                                                              // 155
          ),                                                                                                           // 155
          React.createElement(                                                                                         // 156
            'h4',                                                                                                      // 156
            { style: { marginLeft: '10px', color: 'gray' } },                                                          // 156
            'Patients'                                                                                                 // 156
          )                                                                                                            // 156
        ),                                                                                                             // 154
        React.createElement(                                                                                           // 158
          GlassCard,                                                                                                   // 158
          { style: { width: '164px', display: 'inline-block' } },                                                      // 158
          React.createElement(                                                                                         // 159
            'h2',                                                                                                      // 159
            { style: { marginLeft: '10px' } },                                                                         // 159
            this.data.state.practitionersCount                                                                         // 159
          ),                                                                                                           // 159
          React.createElement(                                                                                         // 160
            'h4',                                                                                                      // 160
            { style: { marginLeft: '10px', color: 'gray' } },                                                          // 160
            'Practitioners'                                                                                            // 160
          )                                                                                                            // 160
        ),                                                                                                             // 158
        React.createElement(Spacer, null),                                                                             // 162
        React.createElement(                                                                                           // 164
          GlassCard,                                                                                                   // 164
          null,                                                                                                        // 164
          React.createElement(ReactHighcharts, { title: 'Welcome back', config: this.data.config })                    // 165
        )                                                                                                              // 164
      )                                                                                                                // 132
    );                                                                                                                 // 131
  };                                                                                                                   // 170
                                                                                                                       //
  return DashboardPage;                                                                                                // 41
}(React.Component);                                                                                                    // 41
                                                                                                                       //
DashboardPage.propTypes = {};                                                                                          // 173
DashboardPage.defaultProps = {};                                                                                       // 174
ReactMixin(DashboardPage.prototype, ReactMeteorData);                                                                  // 175
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"DevicePage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","/imports/ui/components/PageContainer","../components/GlassCard","react-toolbox/lib/card","../workflows/devices/DeviceDetail","../workflows/devices/DevicesDeck","react-toolbox/lib/tabs","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/DevicePage.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({DevicePage:function(){return DevicePage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('../components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var CardTitle,CardText;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v}});var DeviceDetail;module.import('../workflows/devices/DeviceDetail',{"default":function(v){DeviceDetail=v}});var DevicesDeck;module.import('../workflows/devices/DevicesDeck',{"DevicesDeck":function(v){DevicesDeck=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
// import DevicesList from '../containers/devices-list';                                                               //
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       //
                                                                                                                       // 14
                                                                                                                       //
var DevicePage = function (_React$Component) {                                                                         // 16
  _inherits(DevicePage, _React$Component);                                                                             // 16
                                                                                                                       //
  function DevicePage() {                                                                                              // 16
    _classCallCheck(this, DevicePage);                                                                                 // 16
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 16
  }                                                                                                                    // 16
                                                                                                                       //
  DevicePage.prototype.getMeteorData = function getMeteorData() {                                                      // 16
    var data = {                                                                                                       // 18
      style: {},                                                                                                       // 19
      state: {                                                                                                         // 20
        isLoggedIn: false                                                                                              // 21
      }                                                                                                                // 20
    };                                                                                                                 // 18
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 25
      data.state.isLoggedIn = true;                                                                                    // 26
    }                                                                                                                  // 27
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 31
      data.style.color = 'black';                                                                                      // 32
      data.style.background = 'white';                                                                                 // 33
    } else {                                                                                                           // 34
      data.style.color = 'white';                                                                                      // 35
      data.style.background = 'black';                                                                                 // 36
    }                                                                                                                  // 37
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 40
      data.style.filter = 'blur(3px)';                                                                                 // 41
      data.style.webkitFilter = 'blur(3px)';                                                                           // 42
    }                                                                                                                  // 43
                                                                                                                       //
    if (Session.get('appWidth') > 768) {                                                                               // 45
      Session.set('hasPageVerticalPadding', true);                                                                     // 46
      Session.set('mainPanelIsCard', true);                                                                            // 47
    } else {                                                                                                           // 48
      Session.set('hasPageVerticalPadding', false);                                                                    // 49
      Session.set('mainPanelIsCard', false);                                                                           // 50
    }                                                                                                                  // 51
                                                                                                                       //
    return data;                                                                                                       // 53
  };                                                                                                                   // 54
                                                                                                                       //
  DevicePage.prototype.render = function render() {                                                                    // 16
    console.log('In DevicePage render');                                                                               // 58
    return React.createElement(                                                                                        // 59
      'div',                                                                                                           // 60
      { id: 'devicesPage' },                                                                                           // 60
      React.createElement(                                                                                             // 61
        PageContainer,                                                                                                 // 61
        null,                                                                                                          // 61
        React.createElement(                                                                                           // 62
          GlassCard,                                                                                                   // 62
          null,                                                                                                        // 62
          React.createElement(CardTitle, { title: 'Devices' }),                                                        // 63
          React.createElement(                                                                                         // 64
            CardText,                                                                                                  // 64
            null,                                                                                                      // 64
            React.createElement(                                                                                       // 65
              Tabs,                                                                                                    // 65
              { 'default': true, index: this.data.state.index, onChange: this.handleTabChange },                       // 65
              React.createElement(                                                                                     // 66
                Tab,                                                                                                   // 66
                { className: 'newDeviceTab', label: 'New', style: { padded: '20px' }, onActive: this.onNewTab },       // 66
                React.createElement(DeviceDetail, null)                                                                // 67
              ),                                                                                                       // 66
              React.createElement(Tab, { label: 'Devices', onActive: this.handleActive }),                             // 69
              React.createElement(                                                                                     // 72
                Tab,                                                                                                   // 72
                { label: 'Detail', onActive: this.handleActive, style: { padded: '20px' } },                           // 72
                React.createElement(DeviceDetail, null)                                                                // 73
              )                                                                                                        // 72
            )                                                                                                          // 65
          )                                                                                                            // 64
        )                                                                                                              // 62
      )                                                                                                                // 61
    );                                                                                                                 // 60
  };                                                                                                                   // 81
                                                                                                                       //
  return DevicePage;                                                                                                   // 16
}(React.Component);                                                                                                    // 16
                                                                                                                       //
ReactMixin(DevicePage.prototype, ReactMeteorData);                                                                     // 84
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Documents.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-bootstrap","../containers/documents-list.js","../components/AddDocument.js","../components/PageContainer","../components/GlassCard","react-toolbox/lib/card",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/Documents.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Documents:function(){return Documents}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Row,Col;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v}});var DocumentsList;module.import('../containers/documents-list.js',{"default":function(v){DocumentsList=v}});var AddDocument;module.import('../components/AddDocument.js',{"AddDocument":function(v){AddDocument=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('../components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
var Documents = function (_React$Component) {                                                                          // 13
  _inherits(Documents, _React$Component);                                                                              // 13
                                                                                                                       //
  function Documents() {                                                                                               // 13
    _classCallCheck(this, Documents);                                                                                  // 13
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 13
  }                                                                                                                    // 13
                                                                                                                       //
  Documents.prototype.getMeteorData = function getMeteorData() {                                                       // 13
    var data = {                                                                                                       // 15
      style: {}                                                                                                        // 16
    };                                                                                                                 // 15
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 21
      data.style.color = "black";                                                                                      // 22
      data.style.background = "white";                                                                                 // 23
    } else {                                                                                                           // 24
      data.style.color = "white";                                                                                      // 25
      data.style.background = "black";                                                                                 // 26
    }                                                                                                                  // 27
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 30
      data.style.filter = "blur(3px)";                                                                                 // 31
      data.style.webkitFilter = "blur(3px)";                                                                           // 32
    }                                                                                                                  // 33
                                                                                                                       //
    return data;                                                                                                       // 35
  };                                                                                                                   // 36
                                                                                                                       //
  Documents.prototype.render = function render() {                                                                     // 13
    return React.createElement(                                                                                        // 38
      'div',                                                                                                           // 39
      { id: 'documentsPage' },                                                                                         // 39
      React.createElement(                                                                                             // 40
        PageContainer,                                                                                                 // 40
        null,                                                                                                          // 40
        React.createElement(                                                                                           // 41
          GlassCard,                                                                                                   // 41
          null,                                                                                                        // 41
          React.createElement(CardTitle, {                                                                             // 42
            title: 'Documents',                                                                                        // 43
            subtitle: 'These can be anything you want....'                                                             // 44
          }),                                                                                                          // 42
          React.createElement(                                                                                         // 46
            CardText,                                                                                                  // 46
            null,                                                                                                      // 46
            React.createElement(AddDocument, null),                                                                    // 47
            React.createElement(DocumentsList, null)                                                                   // 48
          )                                                                                                            // 46
        )                                                                                                              // 41
      )                                                                                                                // 40
    );                                                                                                                 // 39
  };                                                                                                                   // 54
                                                                                                                       //
  return Documents;                                                                                                    // 13
}(React.Component);                                                                                                    // 13
                                                                                                                       //
Documents.propTypes = {                                                                                                // 58
  hasUser: React.PropTypes.object                                                                                      // 59
};                                                                                                                     // 58
ReactMixin(Documents.prototype, ReactMeteorData);                                                                      // 61
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ForumPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","/imports/ui/workflows/forums/AddForumTopic","/imports/ui/components/PageContainer","/imports/ui/components/GlassCard","/imports/ui/components/Spacer","/imports/ui/workflows/forums/ForumTopicsTable","meteor/meteor","react-toolbox/lib/button","react-router",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/ForumPage.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({ForumPage:function(){return ForumPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var AddForumTopic;module.import('/imports/ui/workflows/forums/AddForumTopic',{"AddForumTopic":function(v){AddForumTopic=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Spacer;module.import('/imports/ui/components/Spacer',{"default":function(v){Spacer=v}});var ForumTopicsTable;module.import('/imports/ui/workflows/forums/ForumTopicsTable',{"ForumTopicsTable":function(v){ForumTopicsTable=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       //
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       //
                                                                                                                       // 14
                                                                                                                       //
var ForumPage = function (_React$Component) {                                                                          // 16
  _inherits(ForumPage, _React$Component);                                                                              // 16
                                                                                                                       //
  function ForumPage() {                                                                                               // 16
    _classCallCheck(this, ForumPage);                                                                                  // 16
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 16
  }                                                                                                                    // 16
                                                                                                                       //
  ForumPage.prototype.getMeteorData = function getMeteorData() {                                                       // 16
    var data = {                                                                                                       // 18
      style: {},                                                                                                       // 19
      state: {                                                                                                         // 20
        isLoggedIn: false                                                                                              // 21
      }                                                                                                                // 20
    };                                                                                                                 // 18
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 25
      data.state.isLoggedIn = true;                                                                                    // 26
    }                                                                                                                  // 27
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 31
      data.style.color = 'black';                                                                                      // 32
      data.style.background = 'white';                                                                                 // 33
    } else {                                                                                                           // 34
      data.style.color = 'white';                                                                                      // 35
      data.style.background = 'black';                                                                                 // 36
    }                                                                                                                  // 37
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 40
      data.style.filter = 'blur(3px)';                                                                                 // 41
      data.style.webkitFilter = 'blur(3px)';                                                                           // 42
    }                                                                                                                  // 43
                                                                                                                       //
    return data;                                                                                                       // 45
  };                                                                                                                   // 46
                                                                                                                       //
  ForumPage.prototype.renderAuthenticatedUserControls = function renderAuthenticatedUserControls(isLoggedIn) {         // 16
    //console.log("renderAuthenticatedUserControls");                                                                  //
                                                                                                                       //
    if (isLoggedIn) {                                                                                                  // 51
      return React.createElement(                                                                                      // 52
        'div',                                                                                                         // 53
        null,                                                                                                          // 53
        React.createElement(                                                                                           // 54
          Button,                                                                                                      // 54
          { onMouseUp: this.newTopic.bind(this), raised: true },                                                       // 54
          'New Topic'                                                                                                  // 54
        ),                                                                                                             // 54
        React.createElement(Spacer, null)                                                                              // 55
      );                                                                                                               // 53
    }                                                                                                                  // 58
  };                                                                                                                   // 59
                                                                                                                       //
  ForumPage.prototype.render = function render() {                                                                     // 16
    return React.createElement(                                                                                        // 62
      'div',                                                                                                           // 63
      { id: 'forumPage' },                                                                                             // 63
      React.createElement(                                                                                             // 64
        PageContainer,                                                                                                 // 64
        null,                                                                                                          // 64
        this.renderAuthenticatedUserControls(this.data.state.isLoggedIn),                                              // 65
        React.createElement(                                                                                           // 66
          GlassCard,                                                                                                   // 66
          null,                                                                                                        // 66
          React.createElement(ForumTopicsTable, null)                                                                  // 67
        )                                                                                                              // 66
      )                                                                                                                // 64
    );                                                                                                                 // 63
  };                                                                                                                   // 72
                                                                                                                       //
  ForumPage.prototype.newTopic = function newTopic() {                                                                 // 16
    browserHistory.push('/new/topic/');                                                                                // 75
  };                                                                                                                   // 76
                                                                                                                       //
  return ForumPage;                                                                                                    // 16
}(React.Component);                                                                                                    // 16
                                                                                                                       //
ForumPage.propTypes = {                                                                                                // 80
  children: React.PropTypes.any                                                                                        // 81
};                                                                                                                     // 80
ReactMixin(ForumPage.prototype, ReactMeteorData);                                                                      // 83
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Index.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-toolbox/lib/card","react","react-mixin","meteor/react-meteor-data","/imports/ui/components/Spacer","../components/GlassCard","../components/PageContainer","react-router",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/Index.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Index:function(){return Index}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var CardTitle;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Spacer;module.import('/imports/ui/components/Spacer',{"default":function(v){Spacer=v}});var GlassCard;module.import('../components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       //
                                                                                                                       // 11
                                                                                                                       //
var Index = function (_React$Component) {                                                                              // 13
  _inherits(Index, _React$Component);                                                                                  // 13
                                                                                                                       //
  function Index(props) {                                                                                              // 14
    _classCallCheck(this, Index);                                                                                      // 14
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 14
  }                                                                                                                    // 16
                                                                                                                       //
  Index.prototype.getMeteorData = function getMeteorData() {                                                           // 13
    var data = {                                                                                                       // 18
      style: {}                                                                                                        // 19
    };                                                                                                                 // 18
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 24
      data.style.color = 'black';                                                                                      // 25
      data.style.background = 'white';                                                                                 // 26
    } else {                                                                                                           // 27
      data.style.color = 'white';                                                                                      // 28
      data.style.background = 'black';                                                                                 // 29
    }                                                                                                                  // 30
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 33
      data.style.filter = 'blur(3px)';                                                                                 // 34
      data.style.webkitFilter = 'blur(3px)';                                                                           // 35
    }                                                                                                                  // 36
                                                                                                                       //
    return data;                                                                                                       // 38
  };                                                                                                                   // 39
                                                                                                                       //
  Index.prototype.render = function render() {                                                                         // 13
    var style = {                                                                                                      // 41
      inactiveIndexCard: {                                                                                             // 42
        opacity: .5,                                                                                                   // 43
        width: '50%',                                                                                                  // 44
        display: 'inline-block',                                                                                       // 45
        paddingLeft: '20px',                                                                                           // 46
        paddingRight: '20px'                                                                                           // 47
      },                                                                                                               // 42
      indexCard: {                                                                                                     // 49
        cursor: 'pointer'                                                                                              // 50
      },                                                                                                               // 49
      indexCardPadding: {                                                                                              // 52
        width: '100%',                                                                                                 // 53
        display: 'inline-block',                                                                                       // 54
        paddingLeft: '20px',                                                                                           // 55
        paddingRight: '20px'                                                                                           // 56
      }                                                                                                                // 52
    };                                                                                                                 // 41
    return React.createElement(                                                                                        // 59
      'div',                                                                                                           // 60
      { id: 'indexPage', style: { paddingTop: "20px" } },                                                              // 60
      React.createElement(                                                                                             // 61
        PageContainer,                                                                                                 // 61
        null,                                                                                                          // 61
        React.createElement(                                                                                           // 63
          'div',                                                                                                       // 63
          { style: style.indexCardPadding, onClick: this.openDevicepage.bind(this) },                                  // 63
          React.createElement(                                                                                         // 64
            GlassCard,                                                                                                 // 64
            { style: style.indexCard },                                                                                // 64
            React.createElement(CardTitle, {                                                                           // 65
              title: 'Devices',                                                                                        // 66
              subtitle: 'BAC and other devices.'                                                                       // 67
            })                                                                                                         // 65
          )                                                                                                            // 64
        ),                                                                                                             // 63
        React.createElement(Spacer, null),                                                                             // 72
        React.createElement(                                                                                           // 74
          'div',                                                                                                       // 74
          { style: style.indexCardPadding, onClick: this.openBreathalyzerpage.bind(this) },                            // 74
          React.createElement(                                                                                         // 75
            GlassCard,                                                                                                 // 75
            { style: style.indexCard },                                                                                // 75
            React.createElement(CardTitle, {                                                                           // 76
              title: 'Breathalyzer',                                                                                   // 77
              subtitle: 'Test breathalyzer.'                                                                           // 78
            })                                                                                                         // 76
          )                                                                                                            // 75
        ),                                                                                                             // 74
        React.createElement(Spacer, null),                                                                             // 83
        React.createElement(                                                                                           // 85
          'div',                                                                                                       // 85
          { style: style.indexCardPadding, onClick: this.openObservationpage.bind(this) },                             // 85
          React.createElement(                                                                                         // 86
            GlassCard,                                                                                                 // 86
            { style: style.indexCard },                                                                                // 86
            React.createElement(CardTitle, {                                                                           // 87
              title: 'Observations',                                                                                   // 88
              subtitle: 'Observations from devices.'                                                                   // 89
            })                                                                                                         // 87
          )                                                                                                            // 86
        ),                                                                                                             // 85
        React.createElement(Spacer, null),                                                                             // 94
        React.createElement(                                                                                           // 96
          'div',                                                                                                       // 96
          { style: style.indexCardPadding, onClick: this.openWeblog.bind(this) },                                      // 96
          React.createElement(                                                                                         // 97
            GlassCard,                                                                                                 // 97
            { style: style.indexCard },                                                                                // 97
            React.createElement(CardTitle, {                                                                           // 98
              title: 'Weblog',                                                                                         // 99
              subtitle: 'Post public thoughts using a Wordpress/Twitter style format.'                                 // 100
            })                                                                                                         // 98
          )                                                                                                            // 97
        ),                                                                                                             // 96
        React.createElement(Spacer, null)                                                                              // 105
      )                                                                                                                // 61
    );                                                                                                                 // 60
  };                                                                                                                   // 110
                                                                                                                       //
  Index.prototype.openDiscussionForum = function openDiscussionForum() {                                               // 13
    browserHistory.push('/forum');                                                                                     // 113
  };                                                                                                                   // 114
                                                                                                                       //
  Index.prototype.openWeblog = function openWeblog() {                                                                 // 13
    browserHistory.push('/weblog');                                                                                    // 116
  };                                                                                                                   // 117
                                                                                                                       //
  Index.prototype.openDevicepage = function openDevicepage() {                                                         // 13
    browserHistory.push('/devices');                                                                                   // 119
  };                                                                                                                   // 120
                                                                                                                       //
  Index.prototype.openObservationpage = function openObservationpage() {                                               // 13
    browserHistory.push('/observations');                                                                              // 122
  };                                                                                                                   // 123
                                                                                                                       //
  Index.prototype.openBreathalyzerpage = function openBreathalyzerpage() {                                             // 13
    browserHistory.push('/breathalyzer');                                                                              // 125
  };                                                                                                                   // 126
                                                                                                                       //
  Index.prototype.openUserManagement = function openUserManagement() {                                                 // 13
    browserHistory.push('/users');                                                                                     // 128
  };                                                                                                                   // 129
                                                                                                                       //
  Index.prototype.openMyProfile = function openMyProfile() {                                                           // 13
    browserHistory.push('/myprofile');                                                                                 // 131
  };                                                                                                                   // 132
                                                                                                                       //
  Index.prototype.openPatients = function openPatients() {                                                             // 13
    browserHistory.push('/patients');                                                                                  // 134
  };                                                                                                                   // 135
                                                                                                                       //
  Index.prototype.openPractitioners = function openPractitioners() {                                                   // 13
    browserHistory.push('/practitioners');                                                                             // 137
  };                                                                                                                   // 138
                                                                                                                       //
  Index.prototype.openDataManagementPage = function openDataManagementPage() {                                         // 13
    console.log('openDataManagementPage');                                                                             // 140
  };                                                                                                                   // 141
                                                                                                                       //
  return Index;                                                                                                        // 13
}(React.Component);                                                                                                    // 13
                                                                                                                       //
Index.propTypes = {                                                                                                    // 146
  hasUser: React.PropTypes.object                                                                                      // 147
};                                                                                                                     // 146
ReactMixin(Index.prototype, ReactMeteorData);                                                                          // 149
                                                                                                                       //
// <GlassCard>                                                                                                         //
//   <CardTitle                                                                                                        //
//     title='Imaging'                                                                                                 //
//     subtitle='Radiology, pathology, and anatomical images.'                                                         //
//   />                                                                                                                //
// </GlassCard>                                                                                                        //
// <Spacer />                                                                                                          //
//                                                                                                                     //
// <GlassCard>                                                                                                         //
//   <CardTitle                                                                                                        //
//     title='Medications'                                                                                             //
//     subtitle='Medication inventory and tracking.'                                                                   //
//   />                                                                                                                //
// </GlassCard>                                                                                                        //
// <Spacer />                                                                                                          //
//                                                                                                                     //
// <GlassCard>                                                                                                         //
//   <CardTitle                                                                                                        //
//     title='Laboratory'                                                                                              //
//     subtitle='Observations and reports from laboratories.'                                                          //
//   />                                                                                                                //
// </GlassCard>                                                                                                        //
// <Spacer />                                                                                                          //
//                                                                                                                     //
// <GlassCard>                                                                                                         //
//   <CardTitle                                                                                                        //
//     title='Biometrics'                                                                                              //
//     subtitle='Biometrics tracking and device management.'                                                           //
//   />                                                                                                                //
// </GlassCard>                                                                                                        //
// <Spacer />                                                                                                          //
//                                                                                                                     //
// <GlassCard>                                                                                                         //
//   <CardTitle                                                                                                        //
//     title='Genomics'                                                                                                //
//     subtitle='Genetic profiles and analysis.'                                                                       //
//     disabled                                                                                                        //
//   />                                                                                                                //
// </GlassCard>                                                                                                        //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Login.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-router","react-bootstrap","/imports/modules/handleLogin","../components/PageContainer","../components/MobilePadding",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/Login.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Login:function(){return Login}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var Link;module.import('react-router',{"Link":function(v){Link=v}});var Row,Col,FormGroup,ControlLabel,FormControl,Button;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v},"FormGroup":function(v){FormGroup=v},"ControlLabel":function(v){ControlLabel=v},"FormControl":function(v){FormControl=v},"Button":function(v){Button=v}});var handleLogin;module.import('/imports/modules/handleLogin',{"handleLogin":function(v){handleLogin=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var MobilePadding;module.import('../components/MobilePadding',{"MobilePadding":function(v){MobilePadding=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
var Login = function (_React$Component) {                                                                              // 10
  _inherits(Login, _React$Component);                                                                                  // 10
                                                                                                                       //
  function Login() {                                                                                                   // 10
    _classCallCheck(this, Login);                                                                                      // 10
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 10
  }                                                                                                                    // 10
                                                                                                                       //
  Login.prototype.componentDidMount = function componentDidMount() {                                                   // 10
    handleLogin({ component: this });                                                                                  // 12
  };                                                                                                                   // 13
                                                                                                                       //
  Login.prototype.handleSubmit = function handleSubmit(event) {                                                        // 10
    event.preventDefault();                                                                                            // 16
  };                                                                                                                   // 17
                                                                                                                       //
  Login.prototype.render = function render() {                                                                         // 10
    return React.createElement(                                                                                        // 20
      'div',                                                                                                           // 21
      { id: 'loginPage' },                                                                                             // 21
      React.createElement(                                                                                             // 22
        MobilePadding,                                                                                                 // 22
        null,                                                                                                          // 22
        React.createElement(                                                                                           // 23
          PageContainer,                                                                                               // 23
          null,                                                                                                        // 23
          React.createElement(                                                                                         // 24
            'h4',                                                                                                      // 24
            { className: 'page-header', style: { color: "white" } },                                                   // 24
            'Login'                                                                                                    // 24
          ),                                                                                                           // 24
          React.createElement(                                                                                         // 25
            'form',                                                                                                    // 25
            { ref: 'login', className: 'login', onSubmit: this.handleSubmit },                                         // 25
            React.createElement(                                                                                       // 26
              FormGroup,                                                                                               // 26
              null,                                                                                                    // 26
              React.createElement(                                                                                     // 27
                ControlLabel,                                                                                          // 27
                { style: { color: "white" } },                                                                         // 27
                'Email Address'                                                                                        // 27
              ),                                                                                                       // 27
              React.createElement(FormControl, {                                                                       // 28
                type: 'email',                                                                                         // 29
                ref: 'emailAddress',                                                                                   // 30
                name: 'emailAddress',                                                                                  // 31
                placeholder: 'Email Address'                                                                           // 32
              })                                                                                                       // 28
            ),                                                                                                         // 26
            React.createElement(                                                                                       // 35
              FormGroup,                                                                                               // 35
              null,                                                                                                    // 35
              React.createElement(                                                                                     // 36
                ControlLabel,                                                                                          // 36
                null,                                                                                                  // 36
                React.createElement(                                                                                   // 37
                  'span',                                                                                              // 37
                  { className: 'pull-left', style: { color: "white" } },                                               // 37
                  'Password'                                                                                           // 37
                ),                                                                                                     // 37
                React.createElement(                                                                                   // 38
                  Link,                                                                                                // 38
                  { className: 'pull-right', to: '/recover-password', style: { color: "white", marginRight: "10px" } },
                  ' ( Forgot )'                                                                                        // 38
                )                                                                                                      // 38
              ),                                                                                                       // 36
              React.createElement(FormControl, {                                                                       // 40
                type: 'password',                                                                                      // 41
                ref: 'password',                                                                                       // 42
                name: 'password',                                                                                      // 43
                placeholder: 'Password'                                                                                // 44
              })                                                                                                       // 40
            ),                                                                                                         // 35
            React.createElement(                                                                                       // 47
              Button,                                                                                                  // 47
              { id: 'loginButton', type: 'submit', bsStyle: 'success' },                                               // 47
              'Login'                                                                                                  // 47
            )                                                                                                          // 47
          )                                                                                                            // 25
        )                                                                                                              // 23
      )                                                                                                                // 22
    );                                                                                                                 // 21
  };                                                                                                                   // 54
                                                                                                                       //
  return Login;                                                                                                        // 10
}(React.Component);                                                                                                    // 10
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"MyProfilePage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react-toolbox/lib/card","react-bootstrap","react-toolbox/lib/tabs","react-router","react-toolbox/lib/button","react-toolbox/lib/input","react","react-mixin","meteor/accounts-base","meteor/meteor","meteor/react-meteor-data","/imports/ui/components/Spacer","../components/GlassCard","../components/PageContainer","../../api/users/methods",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/MyProfilePage.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({MyProfilePage:function(){return MyProfilePage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var CardTitle;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v}});var Row,Col,Grid;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v},"Grid":function(v){Grid=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Spacer;module.import('/imports/ui/components/Spacer',{"default":function(v){Spacer=v}});var GlassCard;module.import('../components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var removeUserById;module.import('../../api/users/methods',{"removeUserById":function(v){removeUserById=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       //
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       //
                                                                                                                       // 15
                                                                                                                       // 16
                                                                                                                       // 17
                                                                                                                       //
var defaultState = {                                                                                                   // 20
  index: 0,                                                                                                            // 21
  hasConfirmedDelete: false,                                                                                           // 22
  wantsToDelete: false,                                                                                                // 23
  increment: 0,                                                                                                        // 24
  confirm: '',                                                                                                         // 25
  oldPassword: '',                                                                                                     // 26
  newPassword: '',                                                                                                     // 27
  confirmPassword: ''                                                                                                  // 28
};                                                                                                                     // 20
Session.setDefault('myProfileState', defaultState);                                                                    // 30
                                                                                                                       //
var MyProfilePage = function (_React$Component) {                                                                      // 32
  _inherits(MyProfilePage, _React$Component);                                                                          // 32
                                                                                                                       //
  function MyProfilePage(props) {                                                                                      // 33
    _classCallCheck(this, MyProfilePage);                                                                              // 33
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 33
  }                                                                                                                    // 35
                                                                                                                       //
  MyProfilePage.prototype.getMeteorData = function getMeteorData() {                                                   // 32
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 41
      style: {                                                                                                         // 42
        opacity: Session.get('globalOpacity')                                                                          // 43
      },                                                                                                               // 42
      state: {                                                                                                         // 45
        index: 0,                                                                                                      // 46
        hasConfirmedDelete: false,                                                                                     // 47
        wantsToDelete: false,                                                                                          // 48
        confirmed: '',                                                                                                 // 49
        increment: 0,                                                                                                  // 50
        oldPassword: '',                                                                                               // 51
        newPassword: '',                                                                                               // 52
        confirmPassword: ''                                                                                            // 53
      },                                                                                                               // 45
      user: {                                                                                                          // 55
        given: '',                                                                                                     // 56
        familiy: '',                                                                                                   // 57
        email: '',                                                                                                     // 58
        avatar: '',                                                                                                    // 59
        zip: '',                                                                                                       // 60
        longitude: '',                                                                                                 // 61
        latitude: '',                                                                                                  // 62
        profileImage: 'thumbnail.png',                                                                                 // 63
        birthdate: ''                                                                                                  // 64
      }                                                                                                                // 55
    };                                                                                                                 // 41
                                                                                                                       //
    if (Session.get('myProfileState')) {                                                                               // 68
      data.state = Session.get('myProfileState');                                                                      // 69
    }                                                                                                                  // 70
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 72
      data.user = {                                                                                                    // 73
        _id: Meteor.userId(),                                                                                          // 74
        email: Meteor.user().emails[0].address,                                                                        // 75
        avatar: Meteor.user().profile.avatar,                                                                          // 76
        zip: "",                                                                                                       // 77
        longitude: "",                                                                                                 // 78
        latitude: "",                                                                                                  // 79
        profileImage: Meteor.user().profile.avatar                                                                     // 80
      };                                                                                                               // 73
      if (Meteor.user().profile && Meteor.user().profile.avatar) {                                                     // 82
        data.user.profileImage = Meteor.user().profile.avatar;                                                         // 83
      } else {                                                                                                         // 84
        data.user.profileImage = "thumbnail.png";                                                                      // 85
      }                                                                                                                // 86
                                                                                                                       //
      if (Meteor.user() && Meteor.user().profile && Meteor.user().profile.name) {                                      // 88
        data.user.given = Meteor.user().profile.name.given;                                                            // 89
        data.user.family = Meteor.user().profile.name.family;                                                          // 90
        data.user.fullName = Meteor.user().profile.name.given + " " + Meteor.user().profile.name.family;               // 91
      } else {                                                                                                         // 92
        data.user.given = "";                                                                                          // 93
        data.user.family = "";                                                                                         // 94
        data.user.fullName = "";                                                                                       // 95
      }                                                                                                                // 96
    }                                                                                                                  // 97
                                                                                                                       //
    //console.log("data", data);                                                                                       //
                                                                                                                       //
    return data;                                                                                                       // 101
  };                                                                                                                   // 102
                                                                                                                       //
  MyProfilePage.prototype.render = function render() {                                                                 // 32
    return React.createElement(                                                                                        // 106
      'div',                                                                                                           // 107
      { id: 'myProfilePage' },                                                                                         // 107
      React.createElement(                                                                                             // 108
        PageContainer,                                                                                                 // 108
        null,                                                                                                          // 108
        React.createElement(                                                                                           // 109
          GlassCard,                                                                                                   // 109
          null,                                                                                                        // 109
          React.createElement('hr', null),                                                                             // 110
          React.createElement(                                                                                         // 111
            Grid,                                                                                                      // 111
            null,                                                                                                      // 111
            React.createElement(                                                                                       // 112
              Col,                                                                                                     // 112
              { xs: 12, md: 12, lg: 12 },                                                                              // 112
              React.createElement(                                                                                     // 113
                Row,                                                                                                   // 113
                null,                                                                                                  // 113
                React.createElement(                                                                                   // 114
                  Col,                                                                                                 // 114
                  { xs: 3, md: 3, lg: 3 },                                                                             // 114
                  React.createElement('img', { id: 'avatarImage', ref: 'avatarImage', src: this.data.user.profileImage, onError: this.imgError.bind(this), responsive: true, style: { width: "100%", maxWidth: '180px' } })
                ),                                                                                                     // 114
                React.createElement(                                                                                   // 117
                  Col,                                                                                                 // 117
                  { xs: 9, md: 9, lg: 9 },                                                                             // 117
                  React.createElement(CardTitle, {                                                                     // 118
                    title: this.data.user.fullName,                                                                    // 119
                    subtitle: this.data.user.email                                                                     // 120
                  })                                                                                                   // 118
                )                                                                                                      // 117
              ),                                                                                                       // 113
              React.createElement(                                                                                     // 124
                Tabs,                                                                                                  // 124
                { index: this.data.state.index, onChange: this.handleTabChange },                                      // 124
                React.createElement(                                                                                   // 126
                  Tab,                                                                                                 // 126
                  { className: 'demographicsTab', label: 'Demographics' },                                             // 126
                  React.createElement(                                                                                 // 127
                    'div',                                                                                             // 127
                    { id: 'profileDemographicsPane', style: { position: "relative" } },                                // 127
                    React.createElement(Input, { type: 'text', label: 'given name', ref: 'given', name: 'given', style: this.data.style, value: this.data.user.given }),
                    React.createElement(Input, { type: 'text', label: 'family name', ref: 'family', name: 'family', style: this.data.style, value: this.data.user.family }),
                    React.createElement(Input, { type: 'text', label: 'date of birth (yyyy-mm-dd)', ref: 'birthdate', name: 'birthdate', style: this.data.style, value: this.data.user.birthdate }),
                    React.createElement(Input, { type: 'text', label: 'avatar', ref: 'avatar', name: 'avatar', style: this.data.style, value: this.data.user.avatar, onChange: this.handleChangeAvatar.bind(this) })
                  )                                                                                                    // 127
                ),                                                                                                     // 126
                React.createElement(                                                                                   // 134
                  Tab,                                                                                                 // 134
                  { className: 'medicalHistoryTab', label: 'Medical History' },                                        // 134
                  React.createElement('div', { style: { position: "relative" } })                                      // 135
                ),                                                                                                     // 134
                React.createElement(                                                                                   // 139
                  Tab,                                                                                                 // 139
                  { className: 'environmentalTab', label: 'Environmental', onActive: this.handleActive },              // 139
                  React.createElement(                                                                                 // 140
                    'div',                                                                                             // 140
                    { id: 'profileEnvironmentalPane', style: { position: "relative" } },                               // 140
                    React.createElement(Input, { type: 'text', label: 'zipcode', name: 'zipcode', ref: 'zipcode', style: this.data.style, value: this.data.user.zip }),
                    React.createElement(Input, { type: 'text', label: 'latitude', name: 'latitude', ref: 'latitude', style: this.data.style, value: this.data.user.latitude }),
                    React.createElement(Input, { type: 'text', label: 'longitude', name: 'longitude', ref: 'longitude', style: this.data.style, value: this.data.user.longitude })
                  )                                                                                                    // 140
                ),                                                                                                     // 139
                React.createElement(                                                                                   // 147
                  Tab,                                                                                                 // 147
                  { className: 'passwordTab', label: 'Password' },                                                     // 147
                  React.createElement(                                                                                 // 148
                    'div',                                                                                             // 148
                    { id: 'profilePasswordPane', style: { position: "relative" } },                                    // 148
                    React.createElement(Input, { type: 'text', label: 'oldPassword', name: 'oldPassword', ref: 'oldPassword', style: this.data.style, value: this.data.state.oldPassword, onChange: this.changeState.bind(this, 'oldPassword') }),
                    React.createElement(Input, { type: 'text', label: 'newPassword', name: 'newPassword', ref: 'newPassword', style: this.data.style, value: this.data.state.newPassword, onChange: this.changeState.bind(this, 'newPassword') }),
                    React.createElement(Input, { type: 'text', label: 'confirmPassword', name: 'confirmPassword', ref: 'confirmPassword', style: this.data.style, value: this.data.state.confirmPassword, onChange: this.changeState.bind(this, 'confirmPassword') }),
                    React.createElement(Button, { id: 'changePasswordButton', icon: 'bookmark', label: 'Change Password', onClick: this.changePassword.bind(this), raised: true, primary: true })
                  )                                                                                                    // 148
                ),                                                                                                     // 147
                React.createElement(                                                                                   // 156
                  Tab,                                                                                                 // 156
                  { className: 'systemTab', label: 'System' },                                                         // 156
                  React.createElement(                                                                                 // 157
                    'div',                                                                                             // 157
                    { id: 'profileSystemPane', style: { position: "relative" } },                                      // 157
                    React.createElement(Input, { disabled: true, type: 'text', label: 'symptomatic _id', name: '_id', style: this.data.style, value: this.data.user._id }),
                    React.createElement(Input, { disabled: true, type: 'text', label: 'email', name: 'email', style: this.data.style, value: this.data.user.email }),
                    this.renderConfirmDelete(this.data.state.wantsToDelete)                                            // 161
                  )                                                                                                    // 157
                )                                                                                                      // 156
              )                                                                                                        // 124
            )                                                                                                          // 112
          ),                                                                                                           // 111
          React.createElement(Spacer, null)                                                                            // 168
        )                                                                                                              // 109
      )                                                                                                                // 108
    );                                                                                                                 // 107
  };                                                                                                                   // 175
                                                                                                                       //
  MyProfilePage.prototype.imgError = function imgError() {                                                             // 32
    // console.log("img", this.refs);                                                                                  //
    this.refs.avatarImage.src = "/noAvatar.png";                                                                       // 178
  };                                                                                                                   // 179
                                                                                                                       //
  MyProfilePage.prototype.renderConfirmDelete = function renderConfirmDelete(wantsToDelete) {                          // 32
    if (wantsToDelete) {                                                                                               // 181
      return React.createElement(                                                                                      // 182
        'div',                                                                                                         // 183
        null,                                                                                                          // 183
        React.createElement('br', null),                                                                               // 184
        React.createElement('br', null),                                                                               // 185
        React.createElement(Input, {                                                                                   // 186
          type: 'text',                                                                                                // 187
          label: 'confirm email or _id',                                                                               // 188
          name: 'confirm',                                                                                             // 189
          ref: 'confirm',                                                                                              // 190
          style: this.data.style,                                                                                      // 191
          value: this.data.state.confirm,                                                                              // 192
          onChange: this.handleConfirm.bind(this),                                                                     // 193
          floating: true,                                                                                              // 194
          style: { color: "red" }                                                                                      // 195
        }),                                                                                                            // 186
        React.createElement(Button, {                                                                                  // 197
          id: 'confirmDeleteUserButton',                                                                               // 198
          icon: 'delete',                                                                                              // 199
          label: 'Confirm Delete',                                                                                     // 200
          onMouseUp: this.confirmDelete.bind(this),                                                                    // 201
          raised: true,                                                                                                // 202
          primary: true,                                                                                               // 203
          style: { backgroundColor: "red" }                                                                            // 204
        })                                                                                                             // 197
      );                                                                                                               // 183
    } else {                                                                                                           // 208
      return React.createElement(Button, { id: 'deleteUserButton', icon: 'delete', label: 'Delete User', onClick: this.handleDelete, raised: true, primary: true });
    }                                                                                                                  // 212
  };                                                                                                                   // 213
                                                                                                                       //
  MyProfilePage.prototype.changeState = function changeState(field) {                                                  // 32
    var state = Session.get('myProfileState');                                                                         // 216
    state[field] = this.refs[field].refs.input.value;                                                                  // 217
    Session.set('myProfileState', state);                                                                              // 218
  };                                                                                                                   // 219
                                                                                                                       //
  MyProfilePage.prototype.handleTabChange = function handleTabChange(index) {                                          // 32
    var state = Session.get('myProfileState');                                                                         // 221
    state.index = index;                                                                                               // 222
    Session.set('myProfileState', state);                                                                              // 223
  };                                                                                                                   // 224
                                                                                                                       //
  MyProfilePage.prototype.handleActive = function handleActive() {                                                     // 32
    //console.log('Special one activated');                                                                            //
  };                                                                                                                   // 228
                                                                                                                       //
  MyProfilePage.prototype.handleChangeAvatar = function handleChangeAvatar() {                                         // 32
    console.log('Lets change the avatar...', this.refs.avatar.refs.input.value);                                       // 230
                                                                                                                       //
    Meteor.users.update({ _id: Meteor.userId() }, { $set: {                                                            // 232
        'profile.avatar': this.refs.avatar.refs.input.value                                                            // 233
      } });                                                                                                            // 232
  };                                                                                                                   // 235
                                                                                                                       //
  MyProfilePage.prototype.handleDelete = function handleDelete(component) {                                            // 32
    var state = Session.get('myProfileState');                                                                         // 237
    state.wantsToDelete = true;                                                                                        // 238
    Session.set('myProfileState', state);                                                                              // 239
  };                                                                                                                   // 240
                                                                                                                       //
  MyProfilePage.prototype.handleConfirm = function handleConfirm() {                                                   // 32
    var state = Session.get('myProfileState');                                                                         // 242
    state.confirm = this.refs.confirm.refs.input.value;                                                                // 243
    Session.set('myProfileState', state);                                                                              // 244
  };                                                                                                                   // 245
                                                                                                                       //
  MyProfilePage.prototype.confirmDelete = function confirmDelete() {                                                   // 32
    // janky, but it works, i guess                                                                                    //
    if (this.refs.confirm.refs.input.value === Meteor.userId() || this.refs.confirm.refs.input.value === Meteor.user().emails[0].address) {
      console.log('Confirm _id match.  Removing.');                                                                    // 249
                                                                                                                       //
      removeUserById.call({                                                                                            // 251
        _id: Meteor.userId()                                                                                           // 252
      }, function (error) {                                                                                            // 251
        if (error) {                                                                                                   // 254
          Bert.alert(error.reason, 'danger');                                                                          // 255
        } else {                                                                                                       // 256
          Bert.alert('User removed!', 'success');                                                                      // 257
          browserHistory.push('/login');                                                                               // 258
        }                                                                                                              // 259
      });                                                                                                              // 260
    } else {                                                                                                           // 261
      console.log("Hmmm...  yeah, lets wait a bit and make sure we have the right user.");                             // 262
    }                                                                                                                  // 263
  };                                                                                                                   // 264
                                                                                                                       //
  MyProfilePage.prototype.changePassword = function changePassword() {                                                 // 32
    if (this.refs.newPassword.refs.input.value === this.refs.confirmPassword.refs.input.value) {                       // 266
      console.log('Passwords match.  Lets send to the server and make it official.');                                  // 267
                                                                                                                       //
      Accounts.changePassword(this.refs.oldPassword.refs.input.value, this.refs.newPassword.refs.input.value, function (error, result) {
        if (error) {                                                                                                   // 270
          Bert.alert(error.reason, 'danger');                                                                          // 271
        } else {                                                                                                       // 272
          Bert.alert('Password changed!', 'success');                                                                  // 273
                                                                                                                       //
          var state = Session.get('myProfileState');                                                                   // 275
          state.newPassword = "";                                                                                      // 276
          state.oldPassword = "";                                                                                      // 277
          state.confirmPassword = "";                                                                                  // 278
          Session.set('myProfileState', state);                                                                        // 279
        }                                                                                                              // 280
      });                                                                                                              // 281
    } else {                                                                                                           // 283
      console.log("Passwords don't match.  Please try again.");                                                        // 284
    }                                                                                                                  // 285
  };                                                                                                                   // 286
                                                                                                                       //
  return MyProfilePage;                                                                                                // 32
}(React.Component);                                                                                                    // 32
                                                                                                                       //
MyProfilePage.propTypes = {};                                                                                          // 290
MyProfilePage.defaultProps = {};                                                                                       // 291
ReactMixin(MyProfilePage.prototype, ReactMeteorData);                                                                  // 292
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"NeedToBePractioner.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","/imports/ui/components/AboutAppCard","/imports/ui/components/GlassCard","/imports/ui/components/PhoneContainer","react-toolbox/lib/card",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/NeedToBePractioner.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({NeedToBePractioner:function(){return NeedToBePractioner}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var AboutAppCard;module.import('/imports/ui/components/AboutAppCard',{"AboutAppCard":function(v){AboutAppCard=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PhoneContainer;module.import('/imports/ui/components/PhoneContainer',{"PhoneContainer":function(v){PhoneContainer=v}});var CardTitle,CardText;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       //
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
var NeedToBePractioner = function (_React$Component) {                                                                 // 8
  _inherits(NeedToBePractioner, _React$Component);                                                                     // 8
                                                                                                                       //
  function NeedToBePractioner(props) {                                                                                 // 9
    _classCallCheck(this, NeedToBePractioner);                                                                         // 9
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 9
  }                                                                                                                    // 11
                                                                                                                       //
  NeedToBePractioner.prototype.render = function render() {                                                            // 8
    return React.createElement(                                                                                        // 14
      'div',                                                                                                           // 15
      { id: 'needToBePractioner' },                                                                                    // 15
      React.createElement(                                                                                             // 16
        PhoneContainer,                                                                                                // 16
        null,                                                                                                          // 16
        React.createElement(                                                                                           // 17
          GlassCard,                                                                                                   // 17
          null,                                                                                                        // 17
          React.createElement(CardTitle, {                                                                             // 18
            title: 'Need To Be A Practioner'                                                                           // 19
          }),                                                                                                          // 18
          React.createElement(                                                                                         // 21
            CardText,                                                                                                  // 21
            null,                                                                                                      // 21
            'You need to be a practitioner to access this resource.'                                                   // 21
          )                                                                                                            // 21
        )                                                                                                              // 17
      )                                                                                                                // 16
    );                                                                                                                 // 15
  };                                                                                                                   // 29
                                                                                                                       //
  return NeedToBePractioner;                                                                                           // 8
}(React.Component);                                                                                                    // 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"NewTopicPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","/imports/ui/workflows/forums/AddForumTopic","/imports/ui/components/PageContainer","/imports/ui/components/GlassCard","/imports/ui/components/Spacer","/imports/ui/workflows/forums/ForumTopicsTable",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/NewTopicPage.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({NewTopicPage:function(){return NewTopicPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var AddForumTopic;module.import('/imports/ui/workflows/forums/AddForumTopic',{"AddForumTopic":function(v){AddForumTopic=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Spacer;module.import('/imports/ui/components/Spacer',{"default":function(v){Spacer=v}});var ForumTopicsTable;module.import('/imports/ui/workflows/forums/ForumTopicsTable',{"ForumTopicsTable":function(v){ForumTopicsTable=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       //
var NewTopicPage = function (_React$Component) {                                                                       // 13
  _inherits(NewTopicPage, _React$Component);                                                                           // 13
                                                                                                                       //
  function NewTopicPage() {                                                                                            // 13
    _classCallCheck(this, NewTopicPage);                                                                               // 13
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 13
  }                                                                                                                    // 13
                                                                                                                       //
  NewTopicPage.prototype.getMeteorData = function getMeteorData() {                                                    // 13
    var data = {                                                                                                       // 15
      style: {}                                                                                                        // 16
    };                                                                                                                 // 15
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 21
      data.style.color = 'black';                                                                                      // 22
      data.style.background = 'white';                                                                                 // 23
    } else {                                                                                                           // 24
      data.style.color = 'white';                                                                                      // 25
      data.style.background = 'black';                                                                                 // 26
    }                                                                                                                  // 27
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 30
      data.style.filter = 'blur(3px)';                                                                                 // 31
      data.style.webkitFilter = 'blur(3px)';                                                                           // 32
    }                                                                                                                  // 33
                                                                                                                       //
    return data;                                                                                                       // 35
  };                                                                                                                   // 36
                                                                                                                       //
  NewTopicPage.prototype.render = function render() {                                                                  // 13
    return React.createElement(                                                                                        // 38
      'div',                                                                                                           // 39
      { id: 'newTopicPage' },                                                                                          // 39
      React.createElement(                                                                                             // 40
        PageContainer,                                                                                                 // 40
        null,                                                                                                          // 40
        React.createElement(AddForumTopic, null)                                                                       // 41
      )                                                                                                                // 40
    );                                                                                                                 // 39
  };                                                                                                                   // 45
                                                                                                                       //
  return NewTopicPage;                                                                                                 // 13
}(React.Component);                                                                                                    // 13
                                                                                                                       //
NewTopicPage.propTypes = {                                                                                             // 49
  children: React.PropTypes.any                                                                                        // 50
};                                                                                                                     // 49
ReactMixin(NewTopicPage.prototype, ReactMeteorData);                                                                   // 52
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"NotFound.js":["react","react-bootstrap",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/NotFound.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({NotFound:function(){return NotFound}});var React;module.import('react',{"default":function(v){React=v}});var Alert;module.import('react-bootstrap',{"Alert":function(v){Alert=v}});
                                                                                                                       // 2
                                                                                                                       //
var NotFound = function NotFound() {                                                                                   // 4
  return React.createElement(                                                                                          // 4
    Alert,                                                                                                             // 5
    { bsStyle: 'danger' },                                                                                             // 5
    React.createElement(                                                                                               // 6
      'p',                                                                                                             // 6
      null,                                                                                                            // 6
      React.createElement(                                                                                             // 6
        'strong',                                                                                                      // 6
        null,                                                                                                          // 6
        'Error [404]'                                                                                                  // 6
      ),                                                                                                               // 6
      ': ',                                                                                                            // 6
      window.location.pathname,                                                                                        // 6
      ' does not exist.'                                                                                               // 6
    )                                                                                                                  // 6
  );                                                                                                                   // 5
};                                                                                                                     // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ObservationPage.jsx":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","/imports/ui/components/PageContainer","/imports/ui/components/DynamicSpacer","/imports/ui/workflows/observations/ObservationDetail","/imports/ui/workflows/observations/ObservationsDeck","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/ObservationPage.jsx                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({ObservationPage:function(){return ObservationPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var DynamicSpacer;module.import('/imports/ui/components/DynamicSpacer',{"DynamicSpacer":function(v){DynamicSpacer=v}});var ObservationDetail;module.import('/imports/ui/workflows/observations/ObservationDetail',{"default":function(v){ObservationDetail=v}});var ObservationsDeck;module.import('/imports/ui/workflows/observations/ObservationsDeck',{"default":function(v){ObservationsDeck=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
//import ObservationsList  from '/imports/ui/containers/observations-list';                                            //
                                                                                                                       //
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
                                                                                                                       // 13
                                                                                                                       //
var ObservationPage = function (_React$Component) {                                                                    // 15
  _inherits(ObservationPage, _React$Component);                                                                        // 15
                                                                                                                       //
  function ObservationPage() {                                                                                         // 15
    _classCallCheck(this, ObservationPage);                                                                            // 15
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 15
  }                                                                                                                    // 15
                                                                                                                       //
  ObservationPage.prototype.getMeteorData = function getMeteorData() {                                                 // 15
    var data = {                                                                                                       // 17
      style: {},                                                                                                       // 18
      state: {                                                                                                         // 19
        isLoggedIn: false                                                                                              // 20
      }                                                                                                                // 19
    };                                                                                                                 // 17
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 24
      data.state.isLoggedIn = true;                                                                                    // 25
    }                                                                                                                  // 26
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 31
      data.style.color = 'black';                                                                                      // 32
      data.style.background = 'white';                                                                                 // 33
    } else {                                                                                                           // 34
      data.style.color = 'white';                                                                                      // 35
      data.style.background = 'black';                                                                                 // 36
    }                                                                                                                  // 37
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 40
      data.style.filter = 'blur(3px)';                                                                                 // 41
      data.style.webkitFilter = 'blur(3px)';                                                                           // 42
    }                                                                                                                  // 43
                                                                                                                       //
    if (Session.get('appWidth') > 768) {                                                                               // 45
      Session.set('hasPageVerticalPadding', true);                                                                     // 46
      Session.set('mainPanelIsCard', true);                                                                            // 47
    } else {                                                                                                           // 48
      Session.set('hasPageVerticalPadding', false);                                                                    // 49
      Session.set('mainPanelIsCard', false);                                                                           // 50
    }                                                                                                                  // 51
                                                                                                                       //
    return data;                                                                                                       // 53
  };                                                                                                                   // 54
                                                                                                                       //
  ObservationPage.prototype.renderAuthenticatedUserControls = function renderAuthenticatedUserControls(isLoggedIn) {   // 15
                                                                                                                       //
    // user should be able to see the addObservation component if they're logged in and looking at their               //
    // own profile; otherwise,                                                                                         //
    if (isLoggedIn) {                                                                                                  // 60
      if (!this.props.routeParams.userId) {                                                                            // 61
        return React.createElement(                                                                                    // 62
          'div',                                                                                                       // 63
          null,                                                                                                        // 63
          React.createElement(ObservationDetail, null),                                                                // 64
          React.createElement(DynamicSpacer, null)                                                                     // 65
        );                                                                                                             // 63
      }                                                                                                                // 68
    }                                                                                                                  // 69
  };                                                                                                                   // 70
                                                                                                                       //
  ObservationPage.prototype.render = function render() {                                                               // 15
    return React.createElement(                                                                                        // 73
      'div',                                                                                                           // 74
      { id: 'ObservationPage' },                                                                                       // 74
      React.createElement(                                                                                             // 75
        PageContainer,                                                                                                 // 75
        null,                                                                                                          // 75
        this.renderAuthenticatedUserControls(this.data.state.isLoggedIn),                                              // 76
        React.createElement(ObservationsDeck, { userId: this.props.routeParams.userId })                               // 77
      )                                                                                                                // 75
    );                                                                                                                 // 74
  };                                                                                                                   // 81
                                                                                                                       //
  return ObservationPage;                                                                                              // 15
}(React.Component);                                                                                                    // 15
                                                                                                                       //
// ObservationPage.propTypes = {                                                                                       //
//   children: React.PropTypes.any                                                                                     //
// };                                                                                                                  //
ReactMixin(ObservationPage.prototype, ReactMeteorData);                                                                // 88
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PatientsPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/input","react-toolbox/lib/button","react-bootstrap","../containers/documents-list.js","../components/AddDocument.js","../components/PageContainer","../components/GlassCard","react-toolbox/lib/card","react-toolbox/lib/tabs","../workflows/patients/PatientDetail","../workflows/patients/PatientTable",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/PatientsPage.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PatientsPage:function(){return PatientsPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Row,Col;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v}});var DocumentsList;module.import('../containers/documents-list.js',{"default":function(v){DocumentsList=v}});var AddDocument;module.import('../components/AddDocument.js',{"AddDocument":function(v){AddDocument=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('../components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var PatientDetail;module.import('../workflows/patients/PatientDetail',{"default":function(v){PatientDetail=v}});var PatientTable;module.import('../workflows/patients/PatientTable',{"default":function(v){PatientTable=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
                                                                                                                       // 16
                                                                                                                       // 17
                                                                                                                       // 18
//import DatePicker from 'react-toolbox/lib/date_picker';                                                              //
                                                                                                                       //
var defaultState = {                                                                                                   // 22
  index: 1,                                                                                                            // 23
  id: "",                                                                                                              // 24
  username: "",                                                                                                        // 25
  email: "",                                                                                                           // 26
  given: "",                                                                                                           // 27
  family: "",                                                                                                          // 28
  gender: ""                                                                                                           // 29
                                                                                                                       //
};                                                                                                                     // 22
Session.setDefault('patientCardState', defaultState);                                                                  // 32
                                                                                                                       //
var PatientsPage = function (_React$Component) {                                                                       // 34
  _inherits(PatientsPage, _React$Component);                                                                           // 34
                                                                                                                       //
  function PatientsPage() {                                                                                            // 34
    _classCallCheck(this, PatientsPage);                                                                               // 34
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 34
  }                                                                                                                    // 34
                                                                                                                       //
  PatientsPage.prototype.getMeteorData = function getMeteorData() {                                                    // 34
    var data = {                                                                                                       // 36
      style: {                                                                                                         // 37
        opacity: Session.get('globalOpacity')                                                                          // 38
      },                                                                                                               // 37
      state: defaultState                                                                                              // 40
    };                                                                                                                 // 36
                                                                                                                       //
    if (Session.get('patientCardState')) {                                                                             // 43
      data.state = Session.get('patientCardState');                                                                    // 44
    }                                                                                                                  // 45
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 49
      data.style.color = "black";                                                                                      // 50
      data.style.background = "white";                                                                                 // 51
    } else {                                                                                                           // 52
      data.style.color = "white";                                                                                      // 53
      data.style.background = "black";                                                                                 // 54
    }                                                                                                                  // 55
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 58
      data.style.filter = "blur(3px)";                                                                                 // 59
      data.style.webkitFilter = "blur(3px)";                                                                           // 60
    }                                                                                                                  // 61
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 64
      data.style.backdropFilter = "blur(5px)";                                                                         // 65
    }                                                                                                                  // 66
                                                                                                                       //
    return data;                                                                                                       // 68
  };                                                                                                                   // 69
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PatientsPage.prototype.handleTabChange = function handleTabChange(index) {                                           // 34
    var state = Session.get('patientCardState');                                                                       // 72
    state["index"] = index;                                                                                            // 73
    Session.set('patientCardState', state);                                                                            // 74
  };                                                                                                                   // 75
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PatientsPage.prototype.changeState = function changeState(field, value) {                                            // 34
    var state = Session.get('patientCardState');                                                                       // 78
    console.log("this", this);                                                                                         // 79
    console.log("value", value);                                                                                       // 80
                                                                                                                       //
    state[field] = value;                                                                                              // 82
    Session.set('patientCardState', state);                                                                            // 83
  };                                                                                                                   // 84
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PatientsPage.prototype.onNewTab = function onNewTab() {                                                              // 34
    console.log("onNewTab");                                                                                           // 88
                                                                                                                       //
    Session.set('selectedPatient', false);                                                                             // 90
    Session.set('patientDetailState', false);                                                                          // 91
  };                                                                                                                   // 92
                                                                                                                       //
  PatientsPage.prototype.render = function render() {                                                                  // 34
    return React.createElement(                                                                                        // 95
      'div',                                                                                                           // 96
      { id: 'documentsPage' },                                                                                         // 96
      React.createElement(                                                                                             // 97
        PageContainer,                                                                                                 // 97
        null,                                                                                                          // 97
        React.createElement(                                                                                           // 98
          GlassCard,                                                                                                   // 98
          null,                                                                                                        // 98
          React.createElement(CardTitle, {                                                                             // 99
            title: 'Patients'                                                                                          // 100
          }),                                                                                                          // 99
          React.createElement(                                                                                         // 102
            CardText,                                                                                                  // 102
            null,                                                                                                      // 102
            React.createElement(                                                                                       // 104
              Tabs,                                                                                                    // 104
              { 'default': true, index: this.data.state.index, onChange: this.handleTabChange },                       // 104
              React.createElement(                                                                                     // 105
                Tab,                                                                                                   // 105
                { className: 'newPatientTab', label: 'New', style: { padded: "20px" }, onActive: this.onNewTab },      // 105
                React.createElement(PatientDetail, null)                                                               // 106
              ),                                                                                                       // 105
              React.createElement(                                                                                     // 108
                Tab,                                                                                                   // 108
                { label: 'Patients', onActive: this.handleActive },                                                    // 108
                React.createElement(PatientTable, null)                                                                // 109
              ),                                                                                                       // 108
              React.createElement(                                                                                     // 111
                Tab,                                                                                                   // 111
                { label: 'Detail', onActive: this.handleActive, style: { padded: "20px" } },                           // 111
                React.createElement(PatientDetail, null)                                                               // 112
              )                                                                                                        // 111
            )                                                                                                          // 104
          )                                                                                                            // 102
        )                                                                                                              // 98
      )                                                                                                                // 97
    );                                                                                                                 // 96
  };                                                                                                                   // 120
                                                                                                                       //
  return PatientsPage;                                                                                                 // 34
}(React.Component);                                                                                                    // 34
                                                                                                                       //
PatientsPage.propTypes = {                                                                                             // 124
  hasUser: React.PropTypes.object                                                                                      // 125
};                                                                                                                     // 124
ReactMixin(PatientsPage.prototype, ReactMeteorData);                                                                   // 127
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PractitionersPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","meteor/react-meteor-data","react","react-bootstrap","react-mixin","react-toolbox/lib/button","react-toolbox/lib/card","react-toolbox/lib/input","react-toolbox/lib/tabs","../components/AddDocument.js","../components/GlassCard","../components/PageContainer","../containers/documents-list.js","../workflows/practitioners/PractitionerDetail","../workflows/practitioners/PractitionerTable",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/PractitionersPage.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PractitionersPage:function(){return PractitionersPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var React;module.import('react',{"default":function(v){React=v}});var Row,Col;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var AddDocument;module.import('../components/AddDocument.js',{"AddDocument":function(v){AddDocument=v}});var GlassCard;module.import('../components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var DocumentsList;module.import('../containers/documents-list.js',{"default":function(v){DocumentsList=v}});var PractitionerDetail;module.import('../workflows/practitioners/PractitionerDetail',{"default":function(v){PractitionerDetail=v}});var PractitionerTable;module.import('../workflows/practitioners/PractitionerTable',{"default":function(v){PractitionerTable=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
var defaultState = {                                                                                                   // 16
  index: 1,                                                                                                            // 17
  id: "",                                                                                                              // 18
  username: "",                                                                                                        // 19
  email: "",                                                                                                           // 20
  given: "",                                                                                                           // 21
  family: ""                                                                                                           // 22
};                                                                                                                     // 16
Session.setDefault('practitionerCardState', defaultState);                                                             // 24
                                                                                                                       //
var PractitionersPage = function (_React$Component) {                                                                  // 26
  _inherits(PractitionersPage, _React$Component);                                                                      // 26
                                                                                                                       //
  function PractitionersPage() {                                                                                       // 26
    _classCallCheck(this, PractitionersPage);                                                                          // 26
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 26
  }                                                                                                                    // 26
                                                                                                                       //
  PractitionersPage.prototype.getMeteorData = function getMeteorData() {                                               // 26
    var data = {                                                                                                       // 28
      style: {                                                                                                         // 29
        opacity: Session.get('globalOpacity')                                                                          // 30
      },                                                                                                               // 29
      state: defaultState                                                                                              // 32
    };                                                                                                                 // 28
                                                                                                                       //
    if (Session.get('practitionerCardState')) {                                                                        // 35
      data.state = Session.get('practitionerCardState');                                                               // 36
    }                                                                                                                  // 37
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 41
      data.style.color = "black";                                                                                      // 42
      data.style.background = "white";                                                                                 // 43
    } else {                                                                                                           // 44
      data.style.color = "white";                                                                                      // 45
      data.style.background = "black";                                                                                 // 46
    }                                                                                                                  // 47
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 50
      data.style.filter = "blur(3px)";                                                                                 // 51
      data.style.webkitFilter = "blur(3px)";                                                                           // 52
    }                                                                                                                  // 53
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 56
      data.style.backdropFilter = "blur(5px)";                                                                         // 57
    }                                                                                                                  // 58
                                                                                                                       //
    return data;                                                                                                       // 60
  };                                                                                                                   // 61
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PractitionersPage.prototype.handleTabChange = function handleTabChange(index) {                                      // 26
    var state = Session.get('practitionerCardState');                                                                  // 65
    state["index"] = index;                                                                                            // 66
    Session.set('practitionerCardState', state);                                                                       // 67
  };                                                                                                                   // 68
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PractitionersPage.prototype.changeState = function changeState(field, value) {                                       // 26
    var state = Session.get('practitionerCardState');                                                                  // 72
    state[field] = value;                                                                                              // 73
    Session.set('practitionerCardState', state);                                                                       // 74
  };                                                                                                                   // 75
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  PractitionersPage.prototype.onNewTab = function onNewTab() {                                                         // 26
    console.log("onNewTab");                                                                                           // 79
                                                                                                                       //
    Session.set('selectedPractitioner', false);                                                                        // 81
    Session.set('practitionerDetailState', false);                                                                     // 82
  };                                                                                                                   // 83
                                                                                                                       //
  PractitionersPage.prototype.render = function render() {                                                             // 26
    return React.createElement(                                                                                        // 86
      'div',                                                                                                           // 87
      { id: 'practitionersPage' },                                                                                     // 87
      React.createElement(                                                                                             // 88
        PageContainer,                                                                                                 // 88
        null,                                                                                                          // 88
        React.createElement(                                                                                           // 89
          GlassCard,                                                                                                   // 89
          null,                                                                                                        // 89
          React.createElement(                                                                                         // 91
            Tabs,                                                                                                      // 91
            { id: 'practitionerTabs', 'default': true, index: this.data.state.index, onChange: this.handleTabChange },
            React.createElement(                                                                                       // 92
              Tab,                                                                                                     // 92
              { className: 'newPractitionerTab', label: 'New', style: { padded: "20px" }, onActive: this.onNewTab },   // 92
              React.createElement(PractitionerDetail, null)                                                            // 93
            ),                                                                                                         // 92
            React.createElement(                                                                                       // 95
              Tab,                                                                                                     // 95
              { className: 'practitionerListTab', label: 'Practitioners', onActive: this.handleActive },               // 95
              React.createElement(PractitionerTable, null)                                                             // 96
            ),                                                                                                         // 95
            React.createElement(                                                                                       // 98
              Tab,                                                                                                     // 98
              { className: 'practitionerDetailsTab', label: 'Detail', style: { padded: "20px" } },                     // 98
              React.createElement(PractitionerDetail, null)                                                            // 99
            )                                                                                                          // 98
          )                                                                                                            // 91
        )                                                                                                              // 89
      )                                                                                                                // 88
    );                                                                                                                 // 87
  };                                                                                                                   // 107
                                                                                                                       //
  return PractitionersPage;                                                                                            // 26
}(React.Component);                                                                                                    // 26
                                                                                                                       //
PractitionersPage.propTypes = {                                                                                        // 111
  hasUser: React.PropTypes.object                                                                                      // 112
};                                                                                                                     // 111
ReactMixin(PractitionersPage.prototype, ReactMeteorData);                                                              // 114
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"PrivacyPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","/imports/ui/components/PrivacyPolicyCard","/imports/ui/components/GlassCard","/imports/ui/components/PageContainer",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/PrivacyPage.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({PrivacyPage:function(){return PrivacyPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var PrivacyPolicyCard;module.import('/imports/ui/components/PrivacyPolicyCard',{"PrivacyPolicyCard":function(v){PrivacyPolicyCard=v}});var GlassCard;module.import('/imports/ui/components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       //
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
var PrivacyPage = function (_React$Component) {                                                                        // 8
  _inherits(PrivacyPage, _React$Component);                                                                            // 8
                                                                                                                       //
  function PrivacyPage(props) {                                                                                        // 9
    _classCallCheck(this, PrivacyPage);                                                                                // 9
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 9
  }                                                                                                                    // 11
                                                                                                                       //
  PrivacyPage.prototype.render = function render() {                                                                   // 8
    return React.createElement(                                                                                        // 14
      'div',                                                                                                           // 15
      { id: 'privacyPage' },                                                                                           // 15
      React.createElement(                                                                                             // 16
        PageContainer,                                                                                                 // 16
        null,                                                                                                          // 16
        React.createElement(                                                                                           // 17
          GlassCard,                                                                                                   // 17
          null,                                                                                                        // 17
          React.createElement(PrivacyPolicyCard, null)                                                                 // 18
        )                                                                                                              // 17
      )                                                                                                                // 16
    );                                                                                                                 // 15
  };                                                                                                                   // 23
                                                                                                                       //
  return PrivacyPage;                                                                                                  // 8
}(React.Component);                                                                                                    // 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"RecoverPassword.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-bootstrap","/imports/modules/handleRecoverPassword","../components/PageContainer",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/RecoverPassword.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({RecoverPassword:function(){return RecoverPassword}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var Row,Col,Alert,FormGroup,FormControl,Button;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v},"Alert":function(v){Alert=v},"FormGroup":function(v){FormGroup=v},"FormControl":function(v){FormControl=v},"Button":function(v){Button=v}});var handleRecoverPassword;module.import('/imports/modules/handleRecoverPassword',{"handleRecoverPassword":function(v){handleRecoverPassword=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       //
var RecoverPassword = function (_React$Component) {                                                                    // 8
  _inherits(RecoverPassword, _React$Component);                                                                        // 8
                                                                                                                       //
  function RecoverPassword() {                                                                                         // 8
    _classCallCheck(this, RecoverPassword);                                                                            // 8
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 8
  }                                                                                                                    // 8
                                                                                                                       //
  RecoverPassword.prototype.componentDidMount = function componentDidMount() {                                         // 8
    handleRecoverPassword({ component: this });                                                                        // 10
  };                                                                                                                   // 11
                                                                                                                       //
  RecoverPassword.prototype.handleSubmit = function handleSubmit(event) {                                              // 8
    event.preventDefault();                                                                                            // 14
  };                                                                                                                   // 15
                                                                                                                       //
  RecoverPassword.prototype.render = function render() {                                                               // 8
    return React.createElement(                                                                                        // 18
      Row,                                                                                                             // 18
      null,                                                                                                            // 18
      React.createElement(                                                                                             // 19
        Col,                                                                                                           // 19
        { xs: 12, sm: 6, md: 4 },                                                                                      // 19
        React.createElement(                                                                                           // 20
          'h4',                                                                                                        // 20
          { className: 'page-header' },                                                                                // 20
          'Recover Password'                                                                                           // 20
        ),                                                                                                             // 20
        React.createElement(                                                                                           // 21
          Alert,                                                                                                       // 21
          { bsStyle: 'info' },                                                                                         // 21
          'Enter your email address below to receive a link to reset your password.'                                   // 21
        ),                                                                                                             // 21
        React.createElement(                                                                                           // 24
          'form',                                                                                                      // 24
          { ref: 'recoverPassword', className: 'recover-password', onSubmit: this.handleSubmit },                      // 24
          React.createElement(                                                                                         // 25
            FormGroup,                                                                                                 // 25
            null,                                                                                                      // 25
            React.createElement(FormControl, {                                                                         // 26
              type: 'email',                                                                                           // 27
              ref: 'emailAddress',                                                                                     // 28
              name: 'emailAddress',                                                                                    // 29
              placeholder: 'Email Address'                                                                             // 30
            })                                                                                                         // 26
          ),                                                                                                           // 25
          React.createElement(                                                                                         // 33
            Button,                                                                                                    // 33
            { type: 'submit', bsStyle: 'success' },                                                                    // 33
            'Recover Password'                                                                                         // 33
          )                                                                                                            // 33
        )                                                                                                              // 24
      )                                                                                                                // 19
    );                                                                                                                 // 18
  };                                                                                                                   // 37
                                                                                                                       //
  return RecoverPassword;                                                                                              // 8
}(React.Component);                                                                                                    // 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ResetPassword.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-bootstrap","/imports/modules/handleResetPassword","../components/PageContainer",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/ResetPassword.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({ResetPassword:function(){return ResetPassword}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var Row,Col,Alert,FormGroup,ControlLabel,FormControl,Button;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v},"Alert":function(v){Alert=v},"FormGroup":function(v){FormGroup=v},"ControlLabel":function(v){ControlLabel=v},"FormControl":function(v){FormControl=v},"Button":function(v){Button=v}});var handleResetPassword;module.import('/imports/modules/handleResetPassword',{"handleResetPassword":function(v){handleResetPassword=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       //
var ResetPassword = function (_React$Component) {                                                                      // 8
  _inherits(ResetPassword, _React$Component);                                                                          // 8
                                                                                                                       //
  function ResetPassword() {                                                                                           // 8
    _classCallCheck(this, ResetPassword);                                                                              // 8
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 8
  }                                                                                                                    // 8
                                                                                                                       //
  ResetPassword.prototype.componentDidMount = function componentDidMount() {                                           // 8
    handleResetPassword({                                                                                              // 10
      component: this,                                                                                                 // 11
      token: this.props.params.token                                                                                   // 12
    });                                                                                                                // 10
  };                                                                                                                   // 14
                                                                                                                       //
  ResetPassword.prototype.handleSubmit = function handleSubmit(event) {                                                // 8
    event.preventDefault();                                                                                            // 17
  };                                                                                                                   // 18
                                                                                                                       //
  ResetPassword.prototype.render = function render() {                                                                 // 8
    return React.createElement(                                                                                        // 21
      Row,                                                                                                             // 21
      null,                                                                                                            // 21
      React.createElement(                                                                                             // 22
        Col,                                                                                                           // 22
        { xs: 12, sm: 6, md: 4 },                                                                                      // 22
        React.createElement(                                                                                           // 23
          'h4',                                                                                                        // 23
          { className: 'page-header' },                                                                                // 23
          'Reset Password'                                                                                             // 23
        ),                                                                                                             // 23
        React.createElement(                                                                                           // 24
          Alert,                                                                                                       // 24
          { bsStyle: 'info' },                                                                                         // 24
          'To reset your password, enter a new one below. You will be logged in with your new password.'               // 24
        ),                                                                                                             // 24
        React.createElement(                                                                                           // 28
          'form',                                                                                                      // 28
          { ref: 'resetPassword', className: 'reset-password', onSubmit: this.handleSubmit },                          // 28
          React.createElement(                                                                                         // 29
            FormGroup,                                                                                                 // 29
            null,                                                                                                      // 29
            React.createElement(                                                                                       // 30
              ControlLabel,                                                                                            // 30
              null,                                                                                                    // 30
              'New Password'                                                                                           // 30
            ),                                                                                                         // 30
            React.createElement(FormControl, {                                                                         // 31
              type: 'password',                                                                                        // 32
              ref: 'newPassword',                                                                                      // 33
              name: 'newPassword',                                                                                     // 34
              placeholder: 'New Password'                                                                              // 35
            })                                                                                                         // 31
          ),                                                                                                           // 29
          React.createElement(                                                                                         // 38
            FormGroup,                                                                                                 // 38
            null,                                                                                                      // 38
            React.createElement(                                                                                       // 39
              ControlLabel,                                                                                            // 39
              null,                                                                                                    // 39
              'Repeat New Password'                                                                                    // 39
            ),                                                                                                         // 39
            React.createElement(FormControl, {                                                                         // 40
              type: 'password',                                                                                        // 41
              ref: 'repeatNewPassword',                                                                                // 42
              name: 'repeatNewPassword',                                                                               // 43
              placeholder: 'Repeat New Password'                                                                       // 44
            })                                                                                                         // 40
          ),                                                                                                           // 38
          React.createElement(                                                                                         // 47
            Button,                                                                                                    // 47
            { type: 'submit', bsStyle: 'success' },                                                                    // 47
            'Reset Password & Login'                                                                                   // 47
          )                                                                                                            // 47
        )                                                                                                              // 28
      )                                                                                                                // 22
    );                                                                                                                 // 21
  };                                                                                                                   // 51
                                                                                                                       //
  return ResetPassword;                                                                                                // 8
}(React.Component);                                                                                                    // 8
                                                                                                                       //
ResetPassword.propTypes = {                                                                                            // 54
  params: React.PropTypes.object                                                                                       // 55
};                                                                                                                     // 54
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Signup.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-router","react-bootstrap","/imports/modules/handleSignup","../components/PageContainer","../components/MobilePadding",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/Signup.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Signup:function(){return Signup}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var Link;module.import('react-router',{"Link":function(v){Link=v}});var Row,Col,FormGroup,ControlLabel,FormControl,Button;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v},"FormGroup":function(v){FormGroup=v},"ControlLabel":function(v){ControlLabel=v},"FormControl":function(v){FormControl=v},"Button":function(v){Button=v}});var handleSignup;module.import('/imports/modules/handleSignup',{"handleSignup":function(v){handleSignup=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var MobilePadding;module.import('../components/MobilePadding',{"MobilePadding":function(v){MobilePadding=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
var Signup = function (_React$Component) {                                                                             // 10
  _inherits(Signup, _React$Component);                                                                                 // 10
                                                                                                                       //
  function Signup() {                                                                                                  // 10
    _classCallCheck(this, Signup);                                                                                     // 10
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 10
  }                                                                                                                    // 10
                                                                                                                       //
  Signup.prototype.componentDidMount = function componentDidMount() {                                                  // 10
    handleSignup({ component: this });                                                                                 // 12
  };                                                                                                                   // 13
                                                                                                                       //
  Signup.prototype.handleSubmit = function handleSubmit(event) {                                                       // 10
    event.preventDefault();                                                                                            // 16
  };                                                                                                                   // 17
                                                                                                                       //
  Signup.prototype.render = function render() {                                                                        // 10
    return React.createElement(                                                                                        // 20
      'div',                                                                                                           // 21
      { id: 'signupPage' },                                                                                            // 21
      React.createElement(                                                                                             // 22
        MobilePadding,                                                                                                 // 22
        null,                                                                                                          // 22
        React.createElement(                                                                                           // 23
          PageContainer,                                                                                               // 23
          null,                                                                                                        // 23
          React.createElement(                                                                                         // 24
            'h4',                                                                                                      // 24
            { className: 'page-header', style: { color: "white" } },                                                   // 24
            'Sign Up'                                                                                                  // 24
          ),                                                                                                           // 24
          React.createElement(                                                                                         // 25
            'form',                                                                                                    // 25
            { ref: 'signup', className: 'signup', onSubmit: this.handleSubmit },                                       // 25
            React.createElement(                                                                                       // 26
              Row,                                                                                                     // 26
              null,                                                                                                    // 26
              React.createElement(                                                                                     // 27
                Col,                                                                                                   // 27
                { xs: 4, sm: 4 },                                                                                      // 27
                React.createElement(                                                                                   // 28
                  FormGroup,                                                                                           // 28
                  null,                                                                                                // 28
                  React.createElement(                                                                                 // 29
                    ControlLabel,                                                                                      // 29
                    { style: { color: "white" } },                                                                     // 29
                    'First Name'                                                                                       // 29
                  ),                                                                                                   // 29
                  React.createElement(FormControl, {                                                                   // 30
                    type: 'text',                                                                                      // 31
                    ref: 'firstName',                                                                                  // 32
                    name: 'firstName',                                                                                 // 33
                    placeholder: 'First Name'                                                                          // 34
                  })                                                                                                   // 30
                )                                                                                                      // 28
              ),                                                                                                       // 27
              React.createElement(                                                                                     // 38
                Col,                                                                                                   // 38
                { xs: 4, sm: 4 },                                                                                      // 38
                React.createElement(                                                                                   // 39
                  FormGroup,                                                                                           // 39
                  null,                                                                                                // 39
                  React.createElement(                                                                                 // 40
                    ControlLabel,                                                                                      // 40
                    { style: { color: "white" } },                                                                     // 40
                    'Last Name'                                                                                        // 40
                  ),                                                                                                   // 40
                  React.createElement(FormControl, {                                                                   // 41
                    type: 'text',                                                                                      // 42
                    ref: 'lastName',                                                                                   // 43
                    name: 'lastName',                                                                                  // 44
                    placeholder: 'Last Name'                                                                           // 45
                  })                                                                                                   // 41
                )                                                                                                      // 39
              ),                                                                                                       // 38
              React.createElement(                                                                                     // 49
                Col,                                                                                                   // 49
                { xs: 4, sm: 4 },                                                                                      // 49
                React.createElement(                                                                                   // 50
                  FormGroup,                                                                                           // 50
                  null,                                                                                                // 50
                  React.createElement(                                                                                 // 51
                    ControlLabel,                                                                                      // 51
                    { style: { color: "white" } },                                                                     // 51
                    'Access Code'                                                                                      // 51
                  ),                                                                                                   // 51
                  React.createElement(FormControl, {                                                                   // 52
                    type: 'text',                                                                                      // 53
                    ref: 'accessCode',                                                                                 // 54
                    name: 'accessCode',                                                                                // 55
                    placeholder: 'Access Code'                                                                         // 56
                  })                                                                                                   // 52
                )                                                                                                      // 50
              )                                                                                                        // 49
            ),                                                                                                         // 26
            React.createElement(                                                                                       // 61
              FormGroup,                                                                                               // 61
              null,                                                                                                    // 61
              React.createElement(                                                                                     // 62
                ControlLabel,                                                                                          // 62
                { style: { color: "white" } },                                                                         // 62
                'Email Address'                                                                                        // 62
              ),                                                                                                       // 62
              React.createElement(FormControl, {                                                                       // 63
                type: 'text',                                                                                          // 64
                ref: 'emailAddress',                                                                                   // 65
                name: 'emailAddress',                                                                                  // 66
                placeholder: 'Email Address'                                                                           // 67
              })                                                                                                       // 63
            ),                                                                                                         // 61
            React.createElement(                                                                                       // 70
              FormGroup,                                                                                               // 70
              null,                                                                                                    // 70
              React.createElement(                                                                                     // 71
                ControlLabel,                                                                                          // 71
                { style: { color: "white" } },                                                                         // 71
                'Password'                                                                                             // 71
              ),                                                                                                       // 71
              React.createElement(FormControl, {                                                                       // 72
                type: 'password',                                                                                      // 73
                ref: 'password',                                                                                       // 74
                name: 'password',                                                                                      // 75
                placeholder: 'Password'                                                                                // 76
              })                                                                                                       // 72
            ),                                                                                                         // 70
            React.createElement(                                                                                       // 79
              Button,                                                                                                  // 79
              { id: 'signupButton', type: 'submit', bsStyle: 'success' },                                              // 79
              'Sign Up'                                                                                                // 79
            )                                                                                                          // 79
          ),                                                                                                           // 25
          React.createElement(                                                                                         // 81
            'p',                                                                                                       // 81
            null,                                                                                                      // 81
            'Already have an account? ',                                                                               // 81
            React.createElement(                                                                                       // 81
              Link,                                                                                                    // 81
              { to: '/login' },                                                                                        // 81
              'Log In'                                                                                                 // 81
            ),                                                                                                         // 81
            '.'                                                                                                        // 81
          )                                                                                                            // 81
        )                                                                                                              // 23
      )                                                                                                                // 22
    );                                                                                                                 // 21
  };                                                                                                                   // 88
                                                                                                                       //
  return Signup;                                                                                                       // 10
}(React.Component);                                                                                                    // 10
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"ThemePage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/card","react-bootstrap","react-toolbox/lib/tabs","react-toolbox/lib/button","react-toolbox/lib/input","meteor/themeteorchef:bert","meteor/session","../components/GlassCard","../components/PageContainer","../components/OpacitySlider","meteor/meteor","../../api/users/methods",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/ThemePage.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({ThemePage:function(){return ThemePage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var CardTitle;module.import('react-toolbox/lib/card',{"CardTitle":function(v){CardTitle=v}});var Image;module.import('react-bootstrap',{"Image":function(v){Image=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var Session;module.import('meteor/session',{"Session":function(v){Session=v}});var GlassCard;module.import('../components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var OpacitySlider;module.import('../components/OpacitySlider',{"default":function(v){OpacitySlider=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var setUserTheme;module.import('../../api/users/methods',{"setUserTheme":function(v){setUserTheme=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       //
                                                                                                                       // 14
                                                                                                                       // 15
                                                                                                                       // 16
                                                                                                                       //
                                                                                                                       // 18
                                                                                                                       // 19
                                                                                                                       //
var defaultState = {                                                                                                   // 22
  index: 0                                                                                                             // 23
};                                                                                                                     // 22
Session.setDefault('themePageState', defaultState);                                                                    // 25
                                                                                                                       //
var ThemePage = function (_React$Component) {                                                                          // 28
  _inherits(ThemePage, _React$Component);                                                                              // 28
                                                                                                                       //
  function ThemePage(props) {                                                                                          // 29
    _classCallCheck(this, ThemePage);                                                                                  // 29
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.call(this, props));                                       // 29
  }                                                                                                                    // 31
                                                                                                                       //
  ThemePage.prototype.getMeteorData = function getMeteorData() {                                                       // 28
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 35
      style: {                                                                                                         // 36
        opacity: Session.get('globalOpacity')                                                                          // 37
      },                                                                                                               // 36
      state: defaultState,                                                                                             // 39
      colors: {                                                                                                        // 40
        colorA: '',                                                                                                    // 41
        colorB: '',                                                                                                    // 42
        colorC: '',                                                                                                    // 43
        colorD: '',                                                                                                    // 44
        colorE: ''                                                                                                     // 45
      }                                                                                                                // 40
    };                                                                                                                 // 35
                                                                                                                       //
    if (Session.get('themePageState')) {                                                                               // 49
      data.state = Session.get('themePageState');                                                                      // 50
    }                                                                                                                  // 51
                                                                                                                       //
    return data;                                                                                                       // 53
  };                                                                                                                   // 54
                                                                                                                       //
  ThemePage.prototype.render = function render() {                                                                     // 28
    var backgroundThumbnail = {                                                                                        // 57
      width: '180px',                                                                                                  // 58
      display: 'inline-block',                                                                                         // 59
      marginRight: '5px',                                                                                              // 60
      marginBottom: '5px',                                                                                             // 61
      height: '115px'                                                                                                  // 62
    };                                                                                                                 // 57
                                                                                                                       //
    // deep clone                                                                                                      //
    var redTile = JSON.parse(JSON.stringify(backgroundThumbnail));                                                     // 66
    redTile.background = '#A64C4C';                                                                                    // 67
                                                                                                                       //
    var blueTile = JSON.parse(JSON.stringify(backgroundThumbnail));                                                    // 69
    blueTile.background = '#89cff0';                                                                                   // 70
                                                                                                                       //
    var grayTile = JSON.parse(JSON.stringify(backgroundThumbnail));                                                    // 72
    grayTile.background = '#999999';                                                                                   // 73
                                                                                                                       //
    var greenTile = JSON.parse(JSON.stringify(backgroundThumbnail));                                                   // 75
    greenTile.background = '#AEC9A8';                                                                                  // 76
                                                                                                                       //
    return React.createElement(                                                                                        // 78
      'div',                                                                                                           // 79
      { id: 'aboutPage' },                                                                                             // 79
      React.createElement(                                                                                             // 80
        PageContainer,                                                                                                 // 80
        null,                                                                                                          // 80
        React.createElement(                                                                                           // 81
          GlassCard,                                                                                                   // 81
          null,                                                                                                        // 81
          React.createElement(CardTitle, {                                                                             // 82
            title: 'Theme',                                                                                            // 83
            subtitle: 'Pick a background and color!'                                                                   // 84
          }),                                                                                                          // 82
          React.createElement(                                                                                         // 86
            Tabs,                                                                                                      // 86
            { index: this.data.state.index, onChange: this.handleTabChange },                                          // 86
            React.createElement(                                                                                       // 88
              Tab,                                                                                                     // 88
              { label: 'Backgrounds', onActive: this.handleActive },                                                   // 88
              React.createElement(                                                                                     // 89
                'div',                                                                                                 // 89
                { style: { position: 'relative' } },                                                                   // 89
                React.createElement(                                                                                   // 91
                  'div',                                                                                               // 91
                  { id: 'backgroundImageGallary', style: { display: 'inline-block' } },                                // 91
                  React.createElement(Image, { src: '/backgrounds/medical/BambooIllustration.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Zen.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Zen-Rocks.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/LargeZenRocks.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Yoga-Gray.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Yoga-Ocean.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Massage.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/BathPetals.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/SaltScrub-Pink.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/SaltScrub-Horizontal.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/SpaBeds.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Candles.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Sauna.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/PlasmidRed.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/PlasmidBlue.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Radiograph-Chest-Portable.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/EmergencyRoom.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/EMT.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/StarTrek-Medbay.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/MedBay.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { src: '/backgrounds/medical/Genetic-Engineering.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onImageClick }),
                  React.createElement(Image, { responsive: true, style: grayTile, onClick: this.onColorClick }),       // 120
                  React.createElement(Image, { responsive: true, style: redTile, onClick: this.onColorClick }),        // 121
                  React.createElement(Image, { responsive: true, style: greenTile, onClick: this.onColorClick }),      // 122
                  React.createElement(Image, { responsive: true, style: blueTile, onClick: this.onColorClick }),       // 123
                  React.createElement(Image, { src: '/thumbnail/Flames.jpg', style: backgroundThumbnail, responsive: true, onClick: this.onVideoClick, style: { border: '1px solid lightgray' } })
                )                                                                                                      // 91
              )                                                                                                        // 89
            ),                                                                                                         // 88
            React.createElement(                                                                                       // 129
              Tab,                                                                                                     // 129
              { label: 'Colors' },                                                                                     // 129
              React.createElement(                                                                                     // 130
                'div',                                                                                                 // 130
                { style: { position: 'relative' } },                                                                   // 130
                React.createElement(Input, { type: 'text', label: 'colorA', name: 'colorA', style: this.data.style, value: this.data.colors.colorA }),
                React.createElement(Input, { type: 'text', label: 'colorB', name: 'colorB', style: this.data.style, value: this.data.colors.colorB }),
                React.createElement(Input, { type: 'text', label: 'colorC', name: 'colorC', style: this.data.style, value: this.data.colors.colorC }),
                React.createElement(Input, { type: 'text', label: 'colorD', name: 'colorD', style: this.data.style, value: this.data.colors.colorD }),
                React.createElement(Input, { type: 'text', label: 'colorE', name: 'colorE', style: this.data.style, value: this.data.colors.colorE })
              )                                                                                                        // 130
            ),                                                                                                         // 129
            React.createElement(                                                                                       // 139
              Tab,                                                                                                     // 139
              { label: 'Settings' },                                                                                   // 139
              React.createElement(                                                                                     // 140
                'div',                                                                                                 // 140
                { style: { position: 'relative' } },                                                                   // 140
                React.createElement(                                                                                   // 141
                  'label',                                                                                             // 141
                  null,                                                                                                // 141
                  'Opacity'                                                                                            // 141
                ),                                                                                                     // 141
                React.createElement(OpacitySlider, null),                                                              // 142
                React.createElement('br', null),                                                                       // 143
                React.createElement(                                                                                   // 144
                  'label',                                                                                             // 144
                  null,                                                                                                // 144
                  'Darkroom'                                                                                           // 144
                ),                                                                                                     // 144
                React.createElement(Button, { ref: 'darkroomButton', icon: 'exposure', onClick: this.clickOnDarkroomButton, style: { marginLeft: '20px', backgroundColor: '#dddddd' } })
              )                                                                                                        // 140
            )                                                                                                          // 139
          )                                                                                                            // 86
        )                                                                                                              // 81
      )                                                                                                                // 80
    );                                                                                                                 // 79
  };                                                                                                                   // 155
                                                                                                                       //
  ThemePage.prototype.handleTabChange = function handleTabChange(index) {                                              // 28
    var state = Session.get('themePageState');                                                                         // 157
    state.index = index;                                                                                               // 158
    Session.set('themePageState', state);                                                                              // 159
  };                                                                                                                   // 160
                                                                                                                       //
  ThemePage.prototype.handleActive = function handleActive() {                                                         // 28
    //console.log('Special one activated');                                                                            //
  };                                                                                                                   // 164
                                                                                                                       //
  ThemePage.prototype.onColorClick = function onColorClick(event) {                                                    // 28
    //console.log("onColorClick", event.currentTarget.style['background-color']);                                      //
                                                                                                                       //
    Session.set('backgroundImagePath', false);                                                                         // 169
    Session.set('backgroundColor', event.currentTarget.style['background-color']);                                     // 170
                                                                                                                       //
    setUserTheme.call({                                                                                                // 172
      _id: Meteor.userId(),                                                                                            // 173
      backgroundColor: event.currentTarget.style['background-color']                                                   // 174
    }, function (error) {                                                                                              // 172
      if (error) {                                                                                                     // 176
        Bert.alert(error.reason, 'danger');                                                                            // 177
      } else {                                                                                                         // 178
        Bert.alert('Background color updated!', 'success');                                                            // 179
      }                                                                                                                // 180
    });                                                                                                                // 181
  };                                                                                                                   // 182
                                                                                                                       //
  ThemePage.prototype.onImageClick = function onImageClick(event) {                                                    // 28
    //console.log("onImageClick", 'backgrounds/medical/' + event.currentTarget['src'].split('/')[5]);                  //
                                                                                                                       //
    Session.set('backgroundColor', false);                                                                             // 187
    Session.set('backgroundImagePath', 'backgrounds/medical/' + event.currentTarget['src'].split('/')[5]);             // 188
                                                                                                                       //
    setUserTheme.call({                                                                                                // 190
      _id: Meteor.userId(),                                                                                            // 191
      backgroundImagePath: 'backgrounds/medical/' + event.currentTarget['src'].split('/')[5]                           // 192
    }, function (error) {                                                                                              // 190
      if (error) {                                                                                                     // 194
        Bert.alert(error.reason, 'danger');                                                                            // 195
      } else {                                                                                                         // 196
        Bert.alert('Background image updated!', 'success');                                                            // 197
      }                                                                                                                // 198
    });                                                                                                                // 199
  };                                                                                                                   // 200
                                                                                                                       //
  ThemePage.prototype.onVideoClick = function onVideoClick() {                                                         // 28
    //console.log("onVideoClick");                                                                                     //
                                                                                                                       //
    Session.set('backgroundImagePath', false);                                                                         // 205
    Session.set('backgroundColor', false);                                                                             // 206
    Session.set('lastVideoRun', new Date());                                                                           // 207
                                                                                                                       //
    // we're calling setUserTheme without any parameters, which will reset the theme                                   //
    // and use the default video background                                                                            //
    setUserTheme.call({                                                                                                // 211
      _id: Meteor.userId()                                                                                             // 212
    }, function (error) {                                                                                              // 211
      if (error) {                                                                                                     // 214
        Bert.alert(error.reason, 'danger');                                                                            // 215
      } else {                                                                                                         // 216
        Bert.alert('Background image updated!', 'success');                                                            // 217
      }                                                                                                                // 218
    });                                                                                                                // 219
  };                                                                                                                   // 220
                                                                                                                       //
  ThemePage.prototype.clickOnDarkroomButton = function clickOnDarkroomButton() {                                       // 28
    Session.toggle('darkroomEnabled');                                                                                 // 223
  };                                                                                                                   // 224
                                                                                                                       //
  return ThemePage;                                                                                                    // 28
}(React.Component);                                                                                                    // 28
                                                                                                                       //
ThemePage.propTypes = {};                                                                                              // 228
ThemePage.defaultProps = {};                                                                                           // 229
ReactMixin(ThemePage.prototype, ReactMeteorData);                                                                      // 230
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"UsersPage.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","react-toolbox/lib/input","react-toolbox/lib/button","react-bootstrap","../containers/documents-list.js","../components/AddDocument.js","../components/PageContainer","../components/GlassCard","react-toolbox/lib/card","react-toolbox/lib/tabs","../workflows/users/UserTable",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/UsersPage.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({UsersPage:function(){return UsersPage}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var Input;module.import('react-toolbox/lib/input',{"default":function(v){Input=v}});var Button;module.import('react-toolbox/lib/button',{"default":function(v){Button=v}});var Row,Col;module.import('react-bootstrap',{"Row":function(v){Row=v},"Col":function(v){Col=v}});var DocumentsList;module.import('../containers/documents-list.js',{"default":function(v){DocumentsList=v}});var AddDocument;module.import('../components/AddDocument.js',{"AddDocument":function(v){AddDocument=v}});var PageContainer;module.import('../components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var GlassCard;module.import('../components/GlassCard',{"GlassCard":function(v){GlassCard=v}});var Card,CardMedia,CardTitle,CardText,CardActions;module.import('react-toolbox/lib/card',{"Card":function(v){Card=v},"CardMedia":function(v){CardMedia=v},"CardTitle":function(v){CardTitle=v},"CardText":function(v){CardText=v},"CardActions":function(v){CardActions=v}});var Tab,Tabs;module.import('react-toolbox/lib/tabs',{"Tab":function(v){Tab=v},"Tabs":function(v){Tabs=v}});var UserTable;module.import('../workflows/users/UserTable',{"UserTable":function(v){UserTable=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       //
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       //
                                                                                                                       // 16
                                                                                                                       // 17
                                                                                                                       //
var defaultState = {                                                                                                   // 20
  index: 0,                                                                                                            // 21
  id: "",                                                                                                              // 22
  username: "",                                                                                                        // 23
  email: "",                                                                                                           // 24
  given: "",                                                                                                           // 25
  family: ""                                                                                                           // 26
                                                                                                                       //
};                                                                                                                     // 20
Session.setDefault('userCardTabbedState', defaultState);                                                               // 29
                                                                                                                       //
var UsersPage = function (_React$Component) {                                                                          // 33
  _inherits(UsersPage, _React$Component);                                                                              // 33
                                                                                                                       //
  function UsersPage() {                                                                                               // 33
    _classCallCheck(this, UsersPage);                                                                                  // 33
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 33
  }                                                                                                                    // 33
                                                                                                                       //
  UsersPage.prototype.getMeteorData = function getMeteorData() {                                                       // 33
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    var data = {                                                                                                       // 37
      style: {                                                                                                         // 38
        opacity: Session.get('globalOpacity')                                                                          // 39
      },                                                                                                               // 38
      state: defaultState                                                                                              // 41
    };                                                                                                                 // 37
                                                                                                                       //
    if (Session.get('userCardTabbedState')) {                                                                          // 44
      data.state = Session.get('userCardTabbedState');                                                                 // 45
    }                                                                                                                  // 46
                                                                                                                       //
    if (Session.get('darkroomEnabled')) {                                                                              // 48
      data.style.color = "black";                                                                                      // 49
      data.style.background = "white";                                                                                 // 50
    } else {                                                                                                           // 51
      data.style.color = "white";                                                                                      // 52
      data.style.background = "black";                                                                                 // 53
    }                                                                                                                  // 54
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 57
      data.style.filter = "blur(3px)";                                                                                 // 58
      data.style.webkitFilter = "blur(3px)";                                                                           // 59
    }                                                                                                                  // 60
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('backgroundBlurEnabled')) {                                                                        // 63
      data.style.backdropFilter = "blur(5px)";                                                                         // 64
    }                                                                                                                  // 65
                                                                                                                       //
    return data;                                                                                                       // 67
  };                                                                                                                   // 68
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  UsersPage.prototype.handleTabChange = function handleTabChange(index) {                                              // 33
    var state = Session.get('userCardTabbedState');                                                                    // 71
    state["index"] = index;                                                                                            // 72
    Session.set('userCardTabbedState', state);                                                                         // 73
  };                                                                                                                   // 74
                                                                                                                       //
  // this could be a mixin                                                                                             //
                                                                                                                       //
  UsersPage.prototype.changeState = function changeState(field) {                                                      // 33
    var state = Session.get('myProfileState');                                                                         // 77
    state[field] = this.refs[field].refs.input.value;                                                                  // 78
    Session.set('myProfileState', state);                                                                              // 79
  };                                                                                                                   // 80
                                                                                                                       //
  UsersPage.prototype.render = function render() {                                                                     // 33
    return React.createElement(                                                                                        // 83
      'div',                                                                                                           // 84
      { id: 'documentsPage' },                                                                                         // 84
      React.createElement(                                                                                             // 85
        PageContainer,                                                                                                 // 85
        null,                                                                                                          // 85
        React.createElement(                                                                                           // 86
          GlassCard,                                                                                                   // 86
          null,                                                                                                        // 86
          React.createElement(                                                                                         // 88
            Tabs,                                                                                                      // 88
            { 'default': true, index: this.data.state.index, onChange: this.handleTabChange },                         // 88
            React.createElement(                                                                                       // 89
              Tab,                                                                                                     // 89
              { label: 'Users', onActive: this.handleActive },                                                         // 89
              React.createElement(UserTable, null)                                                                     // 90
            ),                                                                                                         // 89
            React.createElement(                                                                                       // 92
              Tab,                                                                                                     // 92
              { label: 'New', style: { padded: "20px" } },                                                             // 92
              React.createElement(                                                                                     // 93
                CardText,                                                                                              // 93
                null,                                                                                                  // 93
                React.createElement(Input, { disabled: true, type: 'text', label: 'id', name: 'id', value: this.data.state.id, onChange: this.changeState.bind(this, 'id') }),
                React.createElement(Input, { type: 'text', label: 'username', name: 'username', value: this.data.state.username, onChange: this.changeState.bind(this, 'username') }),
                React.createElement(Input, { type: 'text', label: 'email', name: 'email', value: this.data.state.email, onChange: this.changeState.bind(this, 'email') }),
                React.createElement(Input, { type: 'text', label: 'given name', name: 'given', value: this.data.state.given, onChange: this.changeState.bind(this, 'given') }),
                React.createElement(Input, { type: 'text', label: 'family name', name: 'family', value: this.data.state.family, onChange: this.changeState.bind(this, 'family') })
              ),                                                                                                       // 93
              React.createElement(                                                                                     // 100
                CardActions,                                                                                           // 100
                null,                                                                                                  // 100
                React.createElement(Button, { label: 'Save', onClick: this.handleSaveButton }),                        // 101
                React.createElement(Button, { label: 'Clear', onClick: this.handleCancelButton })                      // 102
              )                                                                                                        // 100
            )                                                                                                          // 92
          )                                                                                                            // 88
        )                                                                                                              // 86
      )                                                                                                                // 85
    );                                                                                                                 // 84
  };                                                                                                                   // 111
                                                                                                                       //
  return UsersPage;                                                                                                    // 33
}(React.Component);                                                                                                    // 33
                                                                                                                       //
UsersPage.propTypes = {                                                                                                // 115
  hasUser: React.PropTypes.object                                                                                      // 116
};                                                                                                                     // 115
ReactMixin(UsersPage.prototype, ReactMeteorData);                                                                      // 118
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"Weblog.js":["babel-runtime/helpers/classCallCheck","babel-runtime/helpers/possibleConstructorReturn","babel-runtime/helpers/inherits","react","react-mixin","meteor/react-meteor-data","/imports/ui/components/PageContainer","/imports/ui/components/DynamicSpacer","/imports/ui/containers/documents-list","/imports/ui/containers/posts-list","/imports/ui/workflows/posts/AddPost","/imports/ui/workflows/posts/PostsDeck","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/ui/pages/Weblog.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Weblog:function(){return Weblog}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{"default":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{"default":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{"default":function(v){_inherits=v}});var React;module.import('react',{"default":function(v){React=v}});var ReactMixin;module.import('react-mixin',{"default":function(v){ReactMixin=v}});var ReactMeteorData;module.import('meteor/react-meteor-data',{"ReactMeteorData":function(v){ReactMeteorData=v}});var PageContainer;module.import('/imports/ui/components/PageContainer',{"PageContainer":function(v){PageContainer=v}});var DynamicSpacer;module.import('/imports/ui/components/DynamicSpacer',{"DynamicSpacer":function(v){DynamicSpacer=v}});var DocumentsList;module.import('/imports/ui/containers/documents-list',{"default":function(v){DocumentsList=v}});var PostsList;module.import('/imports/ui/containers/posts-list',{"default":function(v){PostsList=v}});var AddPost;module.import('/imports/ui/workflows/posts/AddPost',{"AddPost":function(v){AddPost=v}});var PostsDeck;module.import('/imports/ui/workflows/posts/PostsDeck',{"default":function(v){PostsDeck=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       //
                                                                                                                       //
                                                                                                                       // 1
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       //
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       //
                                                                                                                       // 13
                                                                                                                       //
var Weblog = function (_React$Component) {                                                                             // 15
  _inherits(Weblog, _React$Component);                                                                                 // 15
                                                                                                                       //
  function Weblog() {                                                                                                  // 15
    _classCallCheck(this, Weblog);                                                                                     // 15
                                                                                                                       //
    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                                  // 15
  }                                                                                                                    // 15
                                                                                                                       //
  Weblog.prototype.getMeteorData = function getMeteorData() {                                                          // 15
    var data = {                                                                                                       // 17
      style: {},                                                                                                       // 18
      state: {                                                                                                         // 19
        isLoggedIn: false                                                                                              // 20
      }                                                                                                                // 19
    };                                                                                                                 // 17
                                                                                                                       //
    if (Meteor.user()) {                                                                                               // 24
      data.state.isLoggedIn = true;                                                                                    // 25
    }                                                                                                                  // 26
                                                                                                                       //
    // this should all be handled by props                                                                             //
    // or a mixin!                                                                                                     //
    if (Session.get('darkroomEnabled')) {                                                                              // 31
      data.style.color = 'black';                                                                                      // 32
      data.style.background = 'white';                                                                                 // 33
    } else {                                                                                                           // 34
      data.style.color = 'white';                                                                                      // 35
      data.style.background = 'black';                                                                                 // 36
    }                                                                                                                  // 37
                                                                                                                       //
    // this could be another mixin                                                                                     //
    if (Session.get('glassBlurEnabled')) {                                                                             // 40
      data.style.filter = 'blur(3px)';                                                                                 // 41
      data.style.webkitFilter = 'blur(3px)';                                                                           // 42
    }                                                                                                                  // 43
                                                                                                                       //
    if (Session.get('appWidth') > 768) {                                                                               // 45
      Session.set('hasPageVerticalPadding', true);                                                                     // 46
      Session.set('mainPanelIsCard', true);                                                                            // 47
    } else {                                                                                                           // 48
      Session.set('hasPageVerticalPadding', false);                                                                    // 49
      Session.set('mainPanelIsCard', false);                                                                           // 50
    }                                                                                                                  // 51
                                                                                                                       //
    return data;                                                                                                       // 53
  };                                                                                                                   // 54
                                                                                                                       //
  Weblog.prototype.renderAuthenticatedUserControls = function renderAuthenticatedUserControls(isLoggedIn) {            // 15
                                                                                                                       //
    // user should be able to see the addPost component if they're logged in and looking at their                      //
    // own profile; otherwise,                                                                                         //
    if (isLoggedIn) {                                                                                                  // 60
      if (!this.props.routeParams.userId) {                                                                            // 61
        return React.createElement(                                                                                    // 62
          'div',                                                                                                       // 63
          null,                                                                                                        // 63
          React.createElement(AddPost, null),                                                                          // 64
          React.createElement(DynamicSpacer, null)                                                                     // 65
        );                                                                                                             // 63
      }                                                                                                                // 68
    }                                                                                                                  // 69
  };                                                                                                                   // 70
                                                                                                                       //
  Weblog.prototype.render = function render() {                                                                        // 15
    return React.createElement(                                                                                        // 73
      'div',                                                                                                           // 74
      { id: 'weblogPage' },                                                                                            // 74
      React.createElement(                                                                                             // 75
        PageContainer,                                                                                                 // 75
        null,                                                                                                          // 75
        this.renderAuthenticatedUserControls(this.data.state.isLoggedIn),                                              // 76
        React.createElement(PostsDeck, { userId: this.props.routeParams.userId })                                      // 77
      )                                                                                                                // 75
    );                                                                                                                 // 74
  };                                                                                                                   // 81
                                                                                                                       //
  return Weblog;                                                                                                       // 15
}(React.Component);                                                                                                    // 15
                                                                                                                       //
Weblog.propTypes = {                                                                                                   // 85
  children: React.PropTypes.any                                                                                        // 86
};                                                                                                                     // 85
ReactMixin(Weblog.prototype, ReactMeteorData);                                                                         // 88
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}},"api":{"devices":{"devices.js":["faker","meteor/mongo","meteor/aldeed:simple-schema","meteor/dburles:factory",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/devices/devices.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Devices:function(){return Devices}});var faker;module.import('faker',{"default":function(v){faker=v}});var Mongo;module.import('meteor/mongo',{"Mongo":function(v){Mongo=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var Factory;module.import('meteor/dburles:factory',{"Factory":function(v){Factory=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var Devices = new Mongo.Collection('Devices');                                                                         // 6
                                                                                                                       //
Devices.schema = new SimpleSchema({                                                                                    // 8
  deviceName: {                                                                                                        // 9
    type: String,                                                                                                      // 10
    label: 'The name of the device.'                                                                                   // 11
  },                                                                                                                   // 9
  deviceProductId: {                                                                                                   // 13
    type: String,                                                                                                      // 14
    label: 'The product id code of the device.'                                                                        // 15
  },                                                                                                                   // 13
  patientId: {                                                                                                         // 17
    type: String,                                                                                                      // 18
    label: 'Patient ID.'                                                                                               // 19
  },                                                                                                                   // 17
  createdAt: {                                                                                                         // 21
    type: Date,                                                                                                        // 22
    label: 'Date and time that this device was bound to this patient.'                                                 // 23
  },                                                                                                                   // 21
  createdBy: {                                                                                                         // 25
    type: String,                                                                                                      // 26
    label: 'Creator of this record.'                                                                                   // 27
  }                                                                                                                    // 25
});                                                                                                                    // 8
                                                                                                                       //
Devices.attachSchema(Devices.schema);                                                                                  // 31
                                                                                                                       //
Factory.define('device', Devices, {                                                                                    // 33
  title: function title() {                                                                                            // 34
    return "lorem ipsum...";                                                                                           // 34
  },                                                                                                                   // 34
  createdAt: function createdAt() {                                                                                    // 35
    return new Date();                                                                                                 // 35
  }                                                                                                                    // 35
});                                                                                                                    // 33
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"methods.js":["/imports/api/devices/devices","meteor/aldeed:simple-schema","meteor/mdg:validated-method",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/devices/methods.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({insertDevice:function(){return insertDevice},updateDevice:function(){return updateDevice},removeDevice:function(){return removeDevice}});var Devices;module.import('/imports/api/devices/devices',{"Devices":function(v){Devices=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var ValidatedMethod;module.import('meteor/mdg:validated-method',{"ValidatedMethod":function(v){ValidatedMethod=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var insertDevice = new ValidatedMethod({                                                                               // 5
  name: 'devices.insert',                                                                                              // 6
  validate: new SimpleSchema({                                                                                         // 7
    deviceName: { type: String },                                                                                      // 8
    deviceProductId: { type: String },                                                                                 // 9
    createdAt: { type: Date },                                                                                         // 10
    patientId: { type: String }                                                                                        // 11
  }).validator(),                                                                                                      // 7
  run: function run(document) {                                                                                        // 13
    Devices.insert(document);                                                                                          // 14
  }                                                                                                                    // 15
});                                                                                                                    // 5
                                                                                                                       //
var updateDevice = new ValidatedMethod({                                                                               // 18
  name: 'devices.update',                                                                                              // 19
  validate: new SimpleSchema({                                                                                         // 20
    _id: { type: String },                                                                                             // 21
    'update.deviceName': { type: String, optional: true },                                                             // 22
    'update.deviceProductId': { type: String, optional: true }                                                         // 23
  }).validator(),                                                                                                      // 20
  run: function run(_ref) {                                                                                            // 25
    var _id = _ref._id;                                                                                                // 25
    var update = _ref.update;                                                                                          // 25
                                                                                                                       //
    Devices.update(_id, { $set: update });                                                                             // 26
  }                                                                                                                    // 27
});                                                                                                                    // 18
                                                                                                                       //
var removeDevice = new ValidatedMethod({                                                                               // 30
  name: 'devices.remove',                                                                                              // 31
  validate: new SimpleSchema({                                                                                         // 32
    _id: { type: String }                                                                                              // 33
  }).validator(),                                                                                                      // 32
  run: function run(_ref2) {                                                                                           // 35
    var _id = _ref2._id;                                                                                               // 35
                                                                                                                       //
    Devices.remove(_id);                                                                                               // 36
  }                                                                                                                    // 37
});                                                                                                                    // 30
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"documents":{"documents.js":["faker","meteor/mongo","meteor/aldeed:simple-schema","meteor/dburles:factory",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/documents/documents.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Documents:function(){return Documents}});var faker;module.import('faker',{"default":function(v){faker=v}});var Mongo;module.import('meteor/mongo',{"Mongo":function(v){Mongo=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var Factory;module.import('meteor/dburles:factory',{"Factory":function(v){Factory=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var Documents = new Mongo.Collection('Documents');                                                                     // 6
                                                                                                                       //
Documents.schema = new SimpleSchema({                                                                                  // 8
  title: {                                                                                                             // 9
    type: String,                                                                                                      // 10
    label: 'The title of the document.'                                                                                // 11
  }                                                                                                                    // 9
});                                                                                                                    // 8
                                                                                                                       //
Documents.attachSchema(Documents.schema);                                                                              // 15
                                                                                                                       //
Factory.define('document', Documents, {                                                                                // 17
  title: function title() {                                                                                            // 18
    return "lorem ipsum...";                                                                                           // 18
  }                                                                                                                    // 18
});                                                                                                                    // 17
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"methods.js":["./documents","meteor/aldeed:simple-schema","meteor/mdg:validated-method",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/documents/methods.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({insertDocument:function(){return insertDocument},updateDocument:function(){return updateDocument},removeDocument:function(){return removeDocument}});var Documents;module.import('./documents',{"Documents":function(v){Documents=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var ValidatedMethod;module.import('meteor/mdg:validated-method',{"ValidatedMethod":function(v){ValidatedMethod=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var insertDocument = new ValidatedMethod({                                                                             // 5
  name: 'documents.insert',                                                                                            // 6
  validate: new SimpleSchema({                                                                                         // 7
    title: { type: String }                                                                                            // 8
  }).validator(),                                                                                                      // 7
  run: function run(document) {                                                                                        // 10
    Documents.insert(document);                                                                                        // 11
  }                                                                                                                    // 12
});                                                                                                                    // 5
                                                                                                                       //
var updateDocument = new ValidatedMethod({                                                                             // 15
  name: 'documents.update',                                                                                            // 16
  validate: new SimpleSchema({                                                                                         // 17
    _id: { type: String },                                                                                             // 18
    'update.title': { type: String, optional: true }                                                                   // 19
  }).validator(),                                                                                                      // 17
  run: function run(_ref) {                                                                                            // 21
    var _id = _ref._id;                                                                                                // 21
    var update = _ref.update;                                                                                          // 21
                                                                                                                       //
    Documents.update(_id, { $set: update });                                                                           // 22
  }                                                                                                                    // 23
});                                                                                                                    // 15
                                                                                                                       //
var removeDocument = new ValidatedMethod({                                                                             // 26
  name: 'documents.remove',                                                                                            // 27
  validate: new SimpleSchema({                                                                                         // 28
    _id: { type: String }                                                                                              // 29
  }).validator(),                                                                                                      // 28
  run: function run(_ref2) {                                                                                           // 31
    var _id = _ref2._id;                                                                                               // 31
                                                                                                                       //
    Documents.remove(_id);                                                                                             // 32
  }                                                                                                                    // 33
});                                                                                                                    // 26
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"observations":{"methods.js":["/imports/api/observations/observations","meteor/aldeed:simple-schema","meteor/mdg:validated-method",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/observations/methods.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({insertObservation:function(){return insertObservation},updateObservation:function(){return updateObservation},removeObservation:function(){return removeObservation}});var Observations;module.import('/imports/api/observations/observations',{"Observations":function(v){Observations=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var ValidatedMethod;module.import('meteor/mdg:validated-method',{"ValidatedMethod":function(v){ValidatedMethod=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       //
var insertObservation = new ValidatedMethod({                                                                          // 5
  name: 'observations.insert',                                                                                         // 6
  validate: new SimpleSchema({                                                                                         // 7
    observationType: { type: String },                                                                                 // 8
    observationValue: { type: String },                                                                                // 9
    observationUnits: { type: String },                                                                                // 10
    observationStatus: { type: String },                                                                               // 11
    observationSource: { type: String },                                                                               // 12
    createdAt: { type: Date },                                                                                         // 13
    patientId: { type: String }                                                                                        // 14
  }).validator(),                                                                                                      // 7
  run: function run(document) {                                                                                        // 16
    Observations.insert(document);                                                                                     // 17
  }                                                                                                                    // 18
});                                                                                                                    // 5
                                                                                                                       //
var updateObservation = new ValidatedMethod({                                                                          // 21
  name: 'observations.update',                                                                                         // 22
  validate: new SimpleSchema({                                                                                         // 23
    _id: { type: String },                                                                                             // 24
    'update.observationType': { type: String, optional: true },                                                        // 25
    'update.observationValue': { type: String, optional: true },                                                       // 26
    'update.observationUnits': { type: String, optional: true },                                                       // 27
    'update.observationStatus': { type: String, optional: true },                                                      // 28
    'update.observationSource': { type: String, optional: true },                                                      // 29
    'update.patientId': { type: String, optional: true }                                                               // 30
  }).validator(),                                                                                                      // 23
  run: function run(_ref) {                                                                                            // 32
    var _id = _ref._id;                                                                                                // 32
    var update = _ref.update;                                                                                          // 32
                                                                                                                       //
    Observations.update(_id, { $set: update });                                                                        // 33
  }                                                                                                                    // 34
});                                                                                                                    // 21
                                                                                                                       //
var removeObservation = new ValidatedMethod({                                                                          // 37
  name: 'observations.remove',                                                                                         // 38
  validate: new SimpleSchema({                                                                                         // 39
    _id: { type: String }                                                                                              // 40
  }).validator(),                                                                                                      // 39
  run: function run(_ref2) {                                                                                           // 42
    var _id = _ref2._id;                                                                                               // 42
                                                                                                                       //
    Observations.remove(_id);                                                                                          // 43
  }                                                                                                                    // 44
});                                                                                                                    // 37
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"observations.js":["faker","meteor/mongo","meteor/aldeed:simple-schema","meteor/dburles:factory",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/observations/observations.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Observations:function(){return Observations}});var faker;module.import('faker',{"default":function(v){faker=v}});var Mongo;module.import('meteor/mongo',{"Mongo":function(v){Mongo=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var Factory;module.import('meteor/dburles:factory',{"Factory":function(v){Factory=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var Observations = new Mongo.Collection('Observations');                                                               // 6
                                                                                                                       //
Observations.schema = new SimpleSchema({                                                                               // 8
  observationType: {                                                                                                   // 9
    type: String,                                                                                                      // 10
    label: 'The type of observation.'                                                                                  // 11
  },                                                                                                                   // 9
  observationValue: {                                                                                                  // 13
    type: String,                                                                                                      // 14
    label: 'The value of the observation.'                                                                             // 15
  },                                                                                                                   // 13
  observationUnits: {                                                                                                  // 17
    type: String,                                                                                                      // 18
    label: 'The units of the observation'                                                                              // 19
  },                                                                                                                   // 17
  observationStatus: {                                                                                                 // 21
    type: String,                                                                                                      // 22
    label: 'The status of the observation.'                                                                            // 23
  },                                                                                                                   // 21
  observationSource: {                                                                                                 // 25
    type: String,                                                                                                      // 26
    label: 'The source of the observation.'                                                                            // 27
  },                                                                                                                   // 25
  createdAt: {                                                                                                         // 29
    type: Date,                                                                                                        // 30
    label: 'Date of the observation.'                                                                                  // 31
  },                                                                                                                   // 29
  createdBy: {                                                                                                         // 33
    type: String,                                                                                                      // 34
    label: 'Creator of the observation.'                                                                               // 35
  },                                                                                                                   // 33
  patientId: {                                                                                                         // 37
    type: String,                                                                                                      // 38
    label: 'Patient ID of the observation.'                                                                            // 39
  }                                                                                                                    // 37
});                                                                                                                    // 8
                                                                                                                       //
Observations.attachSchema(Observations.schema);                                                                        // 43
                                                                                                                       //
Factory.define('observation', Observations, {                                                                          // 45
  title: function title() {                                                                                            // 46
    return "lorem ipsum...";                                                                                           // 46
  },                                                                                                                   // 46
  createdAt: function createdAt() {                                                                                    // 47
    return new Date();                                                                                                 // 47
  }                                                                                                                    // 47
});                                                                                                                    // 45
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"patients":{"methods.js":["meteor/meteor","meteor/alanning:roles","meteor/accounts-base","meteor/aldeed:simple-schema","meteor/mdg:validated-method",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/patients/methods.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({insertPatient:function(){return insertPatient},updatePatient:function(){return updatePatient},removePatientById:function(){return removePatientById}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Roles;module.import('meteor/alanning:roles',{"Roles":function(v){Roles=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var ValidatedMethod;module.import('meteor/mdg:validated-method',{"ValidatedMethod":function(v){ValidatedMethod=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
//import { Patients } from 'meteor/accounts-base';                                                                     //
                                                                                                                       //
var insertPatient = new ValidatedMethod({                                                                              // 11
  name: 'patients.insert',                                                                                             // 12
  validate: new SimpleSchema({                                                                                         // 13
    'name.$.text': { type: String },                                                                                   // 14
    'identifier': { type: [String], optional: true },                                                                  // 15
    'gender': { type: String, optional: true },                                                                        // 16
    'active': { type: Boolean, optional: true },                                                                       // 17
    'birthdate': { type: Date, optional: true },                                                                       // 18
    'photo.$.url': { type: String, optional: true }                                                                    // 19
  }).validator(),                                                                                                      // 13
  run: function run(document) {                                                                                        // 21
                                                                                                                       //
    Patients.insert(document);                                                                                         // 23
  }                                                                                                                    // 24
});                                                                                                                    // 11
                                                                                                                       //
var updatePatient = new ValidatedMethod({                                                                              // 27
  name: 'patients.update',                                                                                             // 28
  validate: new SimpleSchema({                                                                                         // 29
    _id: { type: String },                                                                                             // 30
    'update': { type: Object, blackbox: true, optional: true }                                                         // 31
  }).validator(),                                                                                                      // 29
  run: function run(_ref) {                                                                                            // 33
    var _id = _ref._id;                                                                                                // 33
    var update = _ref.update;                                                                                          // 33
                                                                                                                       //
    console.log("updatePatient");                                                                                      // 34
    console.log("_id", _id);                                                                                           // 35
    console.log("update", update);                                                                                     // 36
                                                                                                                       //
    var patient = Patients.findOne({ _id: _id });                                                                      // 38
                                                                                                                       //
    delete patient._id;                                                                                                // 40
    delete patient._document;                                                                                          // 41
    delete patient._super_;                                                                                            // 42
    patient.name.text = update.name.text;                                                                              // 43
    patient.gender = update.gender;                                                                                    // 44
    patient.photo = update.gender.photo;                                                                               // 45
                                                                                                                       //
    console.log("diffedPatient", patient);                                                                             // 47
                                                                                                                       //
    Patients.update(_id, { $set: update });                                                                            // 50
  }                                                                                                                    // 51
});                                                                                                                    // 27
                                                                                                                       //
var removePatientById = new ValidatedMethod({                                                                          // 54
  name: 'patients.removeById',                                                                                         // 55
  validate: new SimpleSchema({                                                                                         // 56
    _id: { type: String }                                                                                              // 57
  }).validator(),                                                                                                      // 56
  run: function run(_ref2) {                                                                                           // 59
    var _id = _ref2._id;                                                                                               // 59
                                                                                                                       //
    console.log("Removing user " + _id);                                                                               // 60
    Patients.remove({ _id: _id });                                                                                     // 61
  }                                                                                                                    // 62
});                                                                                                                    // 54
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"posts":{"methods.js":["/imports/api/posts/posts","/imports/api/topics/topics","meteor/aldeed:simple-schema","meteor/mdg:validated-method",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/posts/methods.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({insertPost:function(){return insertPost},updatePost:function(){return updatePost},removePost:function(){return removePost}});var Posts;module.import('/imports/api/posts/posts',{"Posts":function(v){Posts=v}});var Topics;module.import('/imports/api/topics/topics',{"Topics":function(v){Topics=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var ValidatedMethod;module.import('meteor/mdg:validated-method',{"ValidatedMethod":function(v){ValidatedMethod=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var insertPost = new ValidatedMethod({                                                                                 // 6
  name: 'posts.insert',                                                                                                // 7
  validate: new SimpleSchema({                                                                                         // 8
    title: { type: String },                                                                                           // 9
    createdAt: { type: Date },                                                                                         // 10
    'createdBy.display': { type: String, optional: true },                                                             // 11
    'createdBy.reference': { type: String, optional: true },                                                           // 12
    'createdBy.avatar': { type: String, optional: true },                                                              // 13
    topicId: { type: String, optional: true }                                                                          // 14
  }).validator(),                                                                                                      // 8
  run: function run(document) {                                                                                        // 16
    Posts.insert(document);                                                                                            // 17
    Topics.update({ _id: document.topicId }, {                                                                         // 18
      $inc: { replies: 1 },                                                                                            // 19
      $set: { activity: new Date() }                                                                                   // 20
    });                                                                                                                // 18
  }                                                                                                                    // 22
});                                                                                                                    // 6
                                                                                                                       //
var updatePost = new ValidatedMethod({                                                                                 // 25
  name: 'posts.update',                                                                                                // 26
  validate: new SimpleSchema({                                                                                         // 27
    _id: { type: String },                                                                                             // 28
    'update.title': { type: String, optional: true }                                                                   // 29
  }).validator(),                                                                                                      // 27
  run: function run(_ref) {                                                                                            // 31
    var _id = _ref._id;                                                                                                // 31
    var update = _ref.update;                                                                                          // 31
                                                                                                                       //
    Posts.update(_id, { $set: update });                                                                               // 32
  }                                                                                                                    // 33
});                                                                                                                    // 25
                                                                                                                       //
var removePost = new ValidatedMethod({                                                                                 // 36
  name: 'posts.remove',                                                                                                // 37
  validate: new SimpleSchema({                                                                                         // 38
    _id: { type: String }                                                                                              // 39
  }).validator(),                                                                                                      // 38
  run: function run(_ref2) {                                                                                           // 41
    var _id = _ref2._id;                                                                                               // 41
                                                                                                                       //
    //console.log("_id", _id);                                                                                         //
                                                                                                                       //
    Posts.remove(_id);                                                                                                 // 44
    Topics.update({ _id: _id }, {                                                                                      // 45
      $inc: { replies: -1 },                                                                                           // 46
      $set: { activity: new Date() }                                                                                   // 47
    });                                                                                                                // 45
  }                                                                                                                    // 49
});                                                                                                                    // 36
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"posts.js":["faker","meteor/mongo","meteor/aldeed:simple-schema","meteor/dburles:factory",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/posts/posts.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Posts:function(){return Posts}});var faker;module.import('faker',{"default":function(v){faker=v}});var Mongo;module.import('meteor/mongo',{"Mongo":function(v){Mongo=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var Factory;module.import('meteor/dburles:factory',{"Factory":function(v){Factory=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var Posts = new Mongo.Collection('Posts');                                                                             // 6
                                                                                                                       //
Posts.schema = new SimpleSchema({                                                                                      // 8
  title: {                                                                                                             // 9
    type: String,                                                                                                      // 10
    label: 'The title of the post.'                                                                                    // 11
  },                                                                                                                   // 9
  createdAt: {                                                                                                         // 13
    optional: true,                                                                                                    // 14
    type: Date,                                                                                                        // 15
    label: 'Date and time the post was created.'                                                                       // 16
  },                                                                                                                   // 13
  'createdBy.display': {                                                                                               // 18
    type: String,                                                                                                      // 19
    optional: true,                                                                                                    // 20
    label: 'Display name of the user who crated the post.'                                                             // 21
  },                                                                                                                   // 18
  'createdBy.reference': {                                                                                             // 23
    type: String,                                                                                                      // 24
    optional: true,                                                                                                    // 25
    label: 'User ID of the user who crated the pos'                                                                    // 26
  },                                                                                                                   // 23
  'createdBy.avatar': {                                                                                                // 28
    type: String,                                                                                                      // 29
    optional: true,                                                                                                    // 30
    label: 'Avatar of the user who crated the post.'                                                                   // 31
  },                                                                                                                   // 28
  topicId: {                                                                                                           // 33
    optional: true,                                                                                                    // 34
    type: String,                                                                                                      // 35
    label: 'Topic ID.'                                                                                                 // 36
  }                                                                                                                    // 33
});                                                                                                                    // 8
                                                                                                                       //
Posts.attachSchema(Posts.schema);                                                                                      // 40
                                                                                                                       //
Factory.define('post', Posts, {                                                                                        // 42
  title: function title() {                                                                                            // 43
    return "lorem ipsum...";                                                                                           // 43
  },                                                                                                                   // 43
  createdAt: function createdAt() {                                                                                    // 44
    return new Date();                                                                                                 // 44
  }                                                                                                                    // 44
});                                                                                                                    // 42
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"practitioners":{"methods.js":["meteor/meteor","meteor/alanning:roles","meteor/accounts-base","meteor/aldeed:simple-schema","meteor/mdg:validated-method",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/practitioners/methods.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({insertPractitioner:function(){return insertPractitioner},updatePractitioner:function(){return updatePractitioner},removePractitionerById:function(){return removePractitionerById}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Roles;module.import('meteor/alanning:roles',{"Roles":function(v){Roles=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var ValidatedMethod;module.import('meteor/mdg:validated-method',{"ValidatedMethod":function(v){ValidatedMethod=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
var insertPractitioner = new ValidatedMethod({                                                                         // 8
  name: 'practitioners.insert',                                                                                        // 9
  validate: new SimpleSchema({                                                                                         // 10
    'name.text': { type: String },                                                                                     // 11
    'identifier': { type: [String], optional: true },                                                                  // 12
    'gender': { type: String, optional: true },                                                                        // 13
    'active': { type: Boolean, optional: true },                                                                       // 14
    'photo.$.url': { type: String, optional: true }                                                                    // 15
  }).validator(),                                                                                                      // 10
  run: function run(document) {                                                                                        // 17
    console.log("insertPractitioner");                                                                                 // 18
    console.log("document", document);                                                                                 // 19
                                                                                                                       //
    Practitioners.insert(document);                                                                                    // 21
  }                                                                                                                    // 22
});                                                                                                                    // 8
                                                                                                                       //
var updatePractitioner = new ValidatedMethod({                                                                         // 25
  name: 'practitioners.update',                                                                                        // 26
  validate: new SimpleSchema({                                                                                         // 27
    '_id': { type: String },                                                                                           // 28
    'update': { type: Object, blackbox: true, optional: true }                                                         // 29
  }).validator(),                                                                                                      // 27
  run: function run(_ref) {                                                                                            // 31
    var _id = _ref._id;                                                                                                // 31
    var update = _ref.update;                                                                                          // 31
                                                                                                                       //
    console.log("updatePractitioner");                                                                                 // 32
    console.log("_id", _id);                                                                                           // 33
    console.log("update", update);                                                                                     // 34
                                                                                                                       //
    var practitioner = Practitioners.findOne({ _id: _id });                                                            // 36
                                                                                                                       //
    delete practitioner._id;                                                                                           // 38
    delete practitioner._document;                                                                                     // 39
    delete practitioner._super_;                                                                                       // 40
    practitioner.gender = update.gender;                                                                               // 41
    practitioner.photo.push({                                                                                          // 42
      url: update.gender.photo                                                                                         // 43
    });                                                                                                                // 42
    practitioner.name.push({                                                                                           // 45
      text: update.name.text                                                                                           // 46
    });                                                                                                                // 45
                                                                                                                       //
    console.log("differedPractitioner", practitioner);                                                                 // 49
                                                                                                                       //
    Practitioners.update(_id, { $set: practitioner });                                                                 // 52
  }                                                                                                                    // 53
});                                                                                                                    // 25
                                                                                                                       //
var removePractitionerById = new ValidatedMethod({                                                                     // 56
  name: 'practitioners.removeById',                                                                                    // 57
  validate: new SimpleSchema({                                                                                         // 58
    '_id': { type: String }                                                                                            // 59
  }).validator(),                                                                                                      // 58
  run: function run(_ref2) {                                                                                           // 61
    var _id = _ref2._id;                                                                                               // 61
                                                                                                                       //
    console.log("Removing user " + _id);                                                                               // 62
    Practitioners.remove({ _id: _id });                                                                                // 63
  }                                                                                                                    // 64
});                                                                                                                    // 56
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"statistics":{"statistics.js":["meteor/mongo","meteor/aldeed:simple-schema",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/statistics/statistics.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Statistics:function(){return Statistics}});var Mongo;module.import('meteor/mongo',{"Mongo":function(v){Mongo=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});
                                                                                                                       // 2
                                                                                                                       //
var Statistics = new Mongo.Collection('Statistics');                                                                   // 4
                                                                                                                       //
Statistics.schema = new SimpleSchema({                                                                                 // 6
  date: {                                                                                                              // 7
    type: new Date(),                                                                                                  // 8
    label: 'Date.'                                                                                                     // 9
  },                                                                                                                   // 7
  usersCount: {                                                                                                        // 11
    type: new Number(),                                                                                                // 12
    label: 'Users Count'                                                                                               // 13
  },                                                                                                                   // 11
  postsCount: {                                                                                                        // 15
    type: new Number(),                                                                                                // 16
    label: 'Posts Count'                                                                                               // 17
  },                                                                                                                   // 15
  topicsCount: {                                                                                                       // 19
    type: new Number(),                                                                                                // 20
    label: 'Topics Count'                                                                                              // 21
  },                                                                                                                   // 19
  patientsCount: {                                                                                                     // 23
    type: new Number(),                                                                                                // 24
    label: 'Patients Count'                                                                                            // 25
  },                                                                                                                   // 23
  practitionersCount: {                                                                                                // 27
    type: new Number(),                                                                                                // 28
    label: 'Practitioners Count'                                                                                       // 29
  }                                                                                                                    // 27
});                                                                                                                    // 6
                                                                                                                       //
Statistics.attachSchema(Statistics.schema);                                                                            // 33
                                                                                                                       //
// import faker from 'faker';                                                                                          //
// import { Factory } from 'meteor/dburles:factory';                                                                   //
// Factory.define('statistics', Statistics, {                                                                          //
//   title: () => "lorem ipsum...",                                                                                    //
// });                                                                                                                 //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"topics":{"methods.js":["meteor/aldeed:simple-schema","meteor/mdg:validated-method","/imports/api/topics/topics",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/topics/methods.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({insertTopic:function(){return insertTopic},updateTopic:function(){return updateTopic},removeTopic:function(){return removeTopic},removeTopicById:function(){return removeTopicById}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var ValidatedMethod;module.import('meteor/mdg:validated-method',{"ValidatedMethod":function(v){ValidatedMethod=v}});var Topics;module.import('/imports/api/topics/topics',{"Topics":function(v){Topics=v}});
                                                                                                                       // 2
                                                                                                                       //
                                                                                                                       // 4
                                                                                                                       //
var insertTopic = new ValidatedMethod({                                                                                // 7
  name: 'topics.insert',                                                                                               // 8
  // validate: function(){                                                                                             //
  //   return true;                                                                                                    //
  // },                                                                                                                //
  validate: new SimpleSchema({                                                                                         // 12
    'name': { type: String },                                                                                          // 13
    'createdAt': { type: Date },                                                                                       // 14
    'createdBy.display': { type: String, optional: true },                                                             // 15
    'createdBy.reference': { type: String, optional: true },                                                           // 16
    'createdBy.avatar': { type: String, optional: true },                                                              // 17
    'photo.$.url': { type: String, optional: true }                                                                    // 18
  }).validator(),                                                                                                      // 12
  run: function run(document) {                                                                                        // 20
    console.log("insertTopic");                                                                                        // 21
                                                                                                                       //
    document.replies = 0;                                                                                              // 23
    document.views = 0;                                                                                                // 24
    document.activity = new Date();                                                                                    // 25
                                                                                                                       //
    console.log("document", document);                                                                                 // 27
                                                                                                                       //
    return Topics.insert(document);                                                                                    // 29
  }                                                                                                                    // 30
});                                                                                                                    // 7
                                                                                                                       //
var updateTopic = new ValidatedMethod({                                                                                // 33
  name: 'topics.update',                                                                                               // 34
  validate: new SimpleSchema({                                                                                         // 35
    '_id': { type: String },                                                                                           // 36
    'update.name': { type: String }                                                                                    // 37
  }).validator(),                                                                                                      // 35
  run: function run(_ref) {                                                                                            // 39
    var _id = _ref._id;                                                                                                // 39
    var update = _ref.update;                                                                                          // 39
                                                                                                                       //
    console.log("updateTopic");                                                                                        // 40
                                                                                                                       //
    var topic = Topics.findOne({ _id: _id });                                                                          // 42
                                                                                                                       //
    delete topic._id;                                                                                                  // 44
    delete topic._document;                                                                                            // 45
    delete topic._super_;                                                                                              // 46
                                                                                                                       //
    topic.name = update.name;                                                                                          // 48
    topic.createdAt = update.createdAt;                                                                                // 49
    topic.category = update.category;                                                                                  // 50
    topic.replies = update.replies;                                                                                    // 51
    topic.views = update.views;                                                                                        // 52
    topic.activity = update.activity;                                                                                  // 53
    topic.photo = [];                                                                                                  // 54
                                                                                                                       //
    // if (update.gender) {                                                                                            //
    //   topic.photo.push({                                                                                            //
    //     url: update.photo                                                                                           //
    //   });                                                                                                           //
    // }                                                                                                               //
                                                                                                                       //
    Topics.update({ _id: _id }, { $set: topic });                                                                      // 62
  }                                                                                                                    // 64
});                                                                                                                    // 33
var removeTopic = new ValidatedMethod({                                                                                // 66
  name: 'topics.remove',                                                                                               // 67
  validate: new SimpleSchema({                                                                                         // 68
    _id: { type: String }                                                                                              // 69
  }).validator(),                                                                                                      // 68
  run: function run(_ref2) {                                                                                           // 71
    var _id = _ref2._id;                                                                                               // 71
                                                                                                                       //
    console.log("Removing topic " + _id);                                                                              // 72
    Topics.remove(_id);                                                                                                // 73
  }                                                                                                                    // 74
});                                                                                                                    // 66
                                                                                                                       //
var removeTopicById = new ValidatedMethod({                                                                            // 78
  name: 'topics.removeById',                                                                                           // 79
  validate: new SimpleSchema({                                                                                         // 80
    '_id': { type: String }                                                                                            // 81
  }).validator(),                                                                                                      // 80
  run: function run(_ref3) {                                                                                           // 83
    var _id = _ref3._id;                                                                                               // 83
                                                                                                                       //
    console.log("Removing topic " + _id);                                                                              // 84
    Topics.remove({ _id: _id });                                                                                       // 85
  }                                                                                                                    // 86
});                                                                                                                    // 78
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"topics.js":["faker","meteor/mongo","meteor/aldeed:simple-schema","meteor/dburles:factory",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/topics/topics.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({Topics:function(){return Topics}});var faker;module.import('faker',{"default":function(v){faker=v}});var Mongo;module.import('meteor/mongo',{"Mongo":function(v){Mongo=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var Factory;module.import('meteor/dburles:factory',{"Factory":function(v){Factory=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       //
var Topics = new Mongo.Collection('Topics');                                                                           // 6
                                                                                                                       //
Topics.schema = new SimpleSchema({                                                                                     // 8
  'name': {                                                                                                            // 9
    type: String,                                                                                                      // 10
    label: 'Forum topic'                                                                                               // 11
  },                                                                                                                   // 9
  'cateogry': {                                                                                                        // 13
    type: String,                                                                                                      // 14
    optional: true,                                                                                                    // 15
    label: 'Topic category'                                                                                            // 16
  },                                                                                                                   // 13
  'replies': {                                                                                                         // 18
    type: Number,                                                                                                      // 19
    optional: true,                                                                                                    // 20
    label: 'Number of replies'                                                                                         // 21
  },                                                                                                                   // 18
  'views': {                                                                                                           // 23
    type: Number,                                                                                                      // 24
    optional: true,                                                                                                    // 25
    label: 'Number of views'                                                                                           // 26
  },                                                                                                                   // 23
  'createdAt': {                                                                                                       // 28
    type: Date,                                                                                                        // 29
    optional: true,                                                                                                    // 30
    label: 'CreatedAt date'                                                                                            // 31
  },                                                                                                                   // 28
  'createdBy.display': {                                                                                               // 33
    type: String,                                                                                                      // 34
    optional: true,                                                                                                    // 35
    label: 'CreatedBy.display.'                                                                                        // 36
  },                                                                                                                   // 33
  'createdBy.reference': {                                                                                             // 38
    type: String,                                                                                                      // 39
    optional: true,                                                                                                    // 40
    label: 'CreatedBy.reference.'                                                                                      // 41
  },                                                                                                                   // 38
  'createdBy.avatar': {                                                                                                // 43
    type: String,                                                                                                      // 44
    optional: true,                                                                                                    // 45
    label: 'Avatar of the user who crated the post.'                                                                   // 46
  },                                                                                                                   // 43
  'activity': {                                                                                                        // 48
    type: Date,                                                                                                        // 49
    optional: true,                                                                                                    // 50
    label: 'Last activity.'                                                                                            // 51
  },                                                                                                                   // 48
  'photo.$.url': {                                                                                                     // 53
    type: String,                                                                                                      // 54
    optional: true,                                                                                                    // 55
    label: 'Users.'                                                                                                    // 56
  }                                                                                                                    // 53
});                                                                                                                    // 8
                                                                                                                       //
Topics.attachSchema(Topics.schema);                                                                                    // 60
                                                                                                                       //
Factory.define('topic', Topics, {                                                                                      // 62
  name: function name() {                                                                                              // 63
    return "lorem ipsum...";                                                                                           // 63
  },                                                                                                                   // 63
  createdAt: function createdAt() {                                                                                    // 64
    return new Date();                                                                                                 // 64
  }                                                                                                                    // 64
});                                                                                                                    // 62
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"users":{"methods.js":["meteor/meteor","meteor/alanning:roles","meteor/accounts-base","meteor/aldeed:simple-schema","meteor/mdg:validated-method",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/users/methods.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({insertUser:function(){return insertUser},updateUser:function(){return updateUser},removeUserById:function(){return removeUserById},setUserAvatar:function(){return setUserAvatar},setUserTheme:function(){return setUserTheme},changeUserPassword:function(){return changeUserPassword}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Roles;module.import('meteor/alanning:roles',{"Roles":function(v){Roles=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var SimpleSchema;module.import('meteor/aldeed:simple-schema',{"SimpleSchema":function(v){SimpleSchema=v}});var ValidatedMethod;module.import('meteor/mdg:validated-method',{"ValidatedMethod":function(v){ValidatedMethod=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
var insertUser = new ValidatedMethod({                                                                                 // 8
  name: 'users.insert',                                                                                                // 9
  validate: function validate() {                                                                                      // 10
    return true;                                                                                                       // 11
  },                                                                                                                   // 12
  // validate: new SimpleSchema({                                                                                      //
  //   title: { type: String },                                                                                        //
  //   createdAt: { type: Date },                                                                                      //
  // }).validator(),                                                                                                   //
  run: function run(document) {                                                                                        // 17
    Meteor.users.insert(document);                                                                                     // 18
  }                                                                                                                    // 19
});                                                                                                                    // 8
                                                                                                                       //
var updateUser = new ValidatedMethod({                                                                                 // 22
  name: 'users.update',                                                                                                // 23
  validate: function validate() {                                                                                      // 24
    return true;                                                                                                       // 25
  },                                                                                                                   // 26
  // validate: new SimpleSchema({                                                                                      //
  //   _id: { type: String },                                                                                          //
  //   'update.title': { type: String, optional: true },                                                               //
  // }).validator(),                                                                                                   //
  run: function run(_ref) {                                                                                            // 31
    var _id = _ref._id;                                                                                                // 31
    var update = _ref.update;                                                                                          // 31
                                                                                                                       //
    Meteor.users.update(_id, { $set: update });                                                                        // 32
  }                                                                                                                    // 33
});                                                                                                                    // 22
                                                                                                                       //
var removeUserById = new ValidatedMethod({                                                                             // 36
  name: 'users.removeById',                                                                                            // 37
  validate: new SimpleSchema({                                                                                         // 38
    _id: { type: String }                                                                                              // 39
  }).validator(),                                                                                                      // 38
  run: function run(_ref2) {                                                                                           // 41
    var _id = _ref2._id;                                                                                               // 41
                                                                                                                       //
    console.log("Removing user " + _id);                                                                               // 42
    Meteor.users.remove({ _id: _id });                                                                                 // 43
  }                                                                                                                    // 44
});                                                                                                                    // 36
                                                                                                                       //
var setUserAvatar = new ValidatedMethod({                                                                              // 48
  name: 'users.setAvatar',                                                                                             // 49
  validate: new SimpleSchema({                                                                                         // 50
    _id: { type: String },                                                                                             // 51
    avatar: { type: String }                                                                                           // 52
  }).validator(),                                                                                                      // 50
  run: function run(_ref3) {                                                                                           // 54
    var _id = _ref3._id;                                                                                               // 54
    var avatar = _ref3.avatar;                                                                                         // 54
                                                                                                                       //
    Meteor.users.update(_id, { $set: { 'profile.avatar': avatar } });                                                  // 55
  }                                                                                                                    // 56
});                                                                                                                    // 48
                                                                                                                       //
var setUserTheme = new ValidatedMethod({                                                                               // 59
  name: 'users.setTheme',                                                                                              // 60
  validate: new SimpleSchema({                                                                                         // 61
    _id: { type: String },                                                                                             // 62
    backgroundColor: { type: String, optional: true },                                                                 // 63
    backgroundImagePath: { type: String, optional: true },                                                             // 64
    video: { type: String, optional: true }                                                                            // 65
  }).validator(),                                                                                                      // 61
  run: function run(_ref4) {                                                                                           // 67
    var _id = _ref4._id;                                                                                               // 67
    var backgroundColor = _ref4.backgroundColor;                                                                       // 67
    var backgroundImagePath = _ref4.backgroundImagePath;                                                               // 67
                                                                                                                       //
                                                                                                                       //
    Meteor.users.update(_id, { $unset: {                                                                               // 69
        'profile.theme.backgroundImagePath': "",                                                                       // 70
        'profile.theme.backgroundColor': ""                                                                            // 71
      } });                                                                                                            // 69
                                                                                                                       //
    if (backgroundColor) {                                                                                             // 74
      Meteor.users.update(_id, { $set: {                                                                               // 75
          'profile.theme.backgroundColor': backgroundColor                                                             // 76
        } });                                                                                                          // 75
    }                                                                                                                  // 78
                                                                                                                       //
    if (backgroundImagePath) {                                                                                         // 80
      Meteor.users.update(_id, { $set: {                                                                               // 81
          'profile.theme.backgroundImagePath': backgroundImagePath                                                     // 82
        } });                                                                                                          // 81
    }                                                                                                                  // 84
  }                                                                                                                    // 86
});                                                                                                                    // 59
                                                                                                                       //
var changeUserPassword = new ValidatedMethod({                                                                         // 89
  name: 'users.changePassword',                                                                                        // 90
  validate: new SimpleSchema({                                                                                         // 91
    _id: { type: String },                                                                                             // 92
    password: { type: String }                                                                                         // 93
  }).validator(),                                                                                                      // 91
  run: function run(_ref5) {                                                                                           // 95
    var _id = _ref5._id;                                                                                               // 95
    var avatar = _ref5.avatar;                                                                                         // 95
                                                                                                                       //
    Meteor.users.update(_id, { $set: { 'profile.avatar': avatar } });                                                  // 96
  }                                                                                                                    // 97
});                                                                                                                    // 89
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"User.js":["babel-runtime/helpers/classCallCheck",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/api/User.js                                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _classCallCheck;module.import("babel-runtime/helpers/classCallCheck",{"default":function(v){_classCallCheck=v}});  //
                                                                                                                       //
var User = function () {                                                                                               //
  function User(document) {                                                                                            // 5
    _classCallCheck(this, User);                                                                                       // 5
                                                                                                                       //
    if (document) {                                                                                                    // 6
      Object.assign(this, document);                                                                                   // 7
    }                                                                                                                  // 8
  }                                                                                                                    // 9
                                                                                                                       //
  /**                                                                                                                  //
   * @summary The personal name of the user account.                                                                   //
   * @memberOf User                                                                                                    //
   * @name userName                                                                                                    //
   * @version 1.2.3                                                                                                    //
   * @returns {String} A name representation of the user account                                                       //
   * @example                                                                                                          //
   * ```js                                                                                                             //
   * var selectedUser = Meteor.users.findOne({username: "janedoe"});                                                   //
   * console.log(selectedUser.userName());                                                                             //
   * ```                                                                                                               //
   */                                                                                                                  //
                                                                                                                       //
                                                                                                                       //
  User.prototype.userName = function userName() {                                                                      //
    return this.isSelf() ? "You" : this.username;                                                                      // 24
  };                                                                                                                   // 25
                                                                                                                       //
  User.prototype.isTrue = function isTrue() {                                                                          //
    return true;                                                                                                       // 27
  };                                                                                                                   // 28
                                                                                                                       //
  /**                                                                                                                  //
   * @summary Gets the full name of the user.                                                                          //
   * @memberOf User                                                                                                    //
   * @name fullName                                                                                                    //
   * @version 1.2.3                                                                                                    //
   * @returns {String}                                                                                                 //
   * @example                                                                                                          //
   * ```js                                                                                                             //
   * var selectedUser = Meteor.users.findOne({username: "janedoe"});                                                   //
   * console.log(selectedUser.fullName());                                                                             //
   * ```                                                                                                               //
   */                                                                                                                  //
                                                                                                                       //
                                                                                                                       //
  User.prototype.fullName = function fullName() {                                                                      //
    // if we're using an HL7 FHIR HumanName resource                                                                   //
    if (this.profile && this.profile.name && this.profile.name.text) {                                                 // 44
      // the following assumes a Person, RelatedPerson, or Practitioner resource                                       //
      // which only has a single name specified                                                                        //
      return this.profile.name.text;                                                                                   // 47
    } else if (this.profile && this.profile.name) {                                                                    // 48
      // the following assumes a Patient resource                                                                      //
      // where multiple names and aliases may be specified                                                             //
      return this.profile.name[0].text;                                                                                // 51
                                                                                                                       //
      // if we're using traditional Meteor naming convention                                                           //
    } else if (this.profile && this.profile.fullName) {                                                                // 54
        return this.profile.fullName;                                                                                  // 55
      } else {                                                                                                         // 56
        return "---";                                                                                                  // 57
      }                                                                                                                // 58
  };                                                                                                                   // 59
                                                                                                                       //
  /**                                                                                                                  //
   * @summary Gets the given (first) name of the user.                                                                 //
   * @memberOf User                                                                                                    //
   * @name givenName                                                                                                   //
   * @version 1.2.3                                                                                                    //
   * @returns {String}                                                                                                 //
   * @example                                                                                                          //
   * ```js                                                                                                             //
   * var selectedUser = Meteor.users.findOne({username: "janedoe"});                                                   //
   * console.log(selectedUser.givenName());                                                                            //
   * ```                                                                                                               //
   */                                                                                                                  //
                                                                                                                       //
                                                                                                                       //
  User.prototype.givenName = function givenName() {                                                                    //
    if (this.profile && this.profile.name) {                                                                           // 75
      // if we're using an HL7 FHIR HumanName resource                                                                 //
      return this.profile.name[0].given;                                                                               // 77
    } else if (this.profile && this.profile.fullName) {                                                                // 78
      // if we're using traditional Meteor naming convention                                                           //
      var names = this.profile.fullName.split(" ");                                                                    // 80
      return names[0];                                                                                                 // 81
    } else {                                                                                                           // 82
      return "";                                                                                                       // 83
    }                                                                                                                  // 84
  };                                                                                                                   // 85
                                                                                                                       //
  /**                                                                                                                  //
   * @summary Gets the family (last) name of the user.                                                                 //
   * @memberOf User                                                                                                    //
   * @name familyName                                                                                                  //
   * @version 1.2.3                                                                                                    //
   * @returns {String}                                                                                                 //
   * @example                                                                                                          //
   * ```js                                                                                                             //
   * var selectedUser = Meteor.users.findOne({username: "janedoe"});                                                   //
   * console.log(selectedUser.familyName());                                                                           //
   * ```                                                                                                               //
   */                                                                                                                  //
                                                                                                                       //
                                                                                                                       //
  User.prototype.familyName = function familyName() {                                                                  //
    if (this.profile && this.profile.name) {                                                                           // 101
      // if we're using an HL7 FHIR HumanName resource                                                                 //
      return this.profile.name[0].family;                                                                              // 103
    } else if (this.profile && this.profile.fullName) {                                                                // 104
      // if we're using traditional Meteor naming convention                                                           //
      var names = this.profile.fullName.split(" ");                                                                    // 106
      return names[names.length - 1];                                                                                  // 107
    } else {                                                                                                           // 108
      return "---";                                                                                                    // 109
    }                                                                                                                  // 110
  };                                                                                                                   // 111
                                                                                                                       //
  /**                                                                                                                  //
   * @summary Gets the default email that an account is associated.  Defined as the first verified email in the emails array.
   * @memberOf User                                                                                                    //
   * @name defaultEmail                                                                                                //
   * @version 1.2.3                                                                                                    //
   * @returns {String}                                                                                                 //
   * @example                                                                                                          //
   * ```js                                                                                                             //
   * var selectedUser = Meteor.users.findOne({username: "janedoe"});                                                   //
   * console.log(selectedUser.defaultEmail());                                                                         //
   * ```                                                                                                               //
   */                                                                                                                  //
                                                                                                                       //
                                                                                                                       //
  User.prototype.defaultEmail = function defaultEmail() {                                                              //
    return this.emails && this.emails[0].address;                                                                      // 126
  };                                                                                                                   // 127
                                                                                                                       //
  /**                                                                                                                  //
   * Get the default email address for the user                                                                        //
   * @method defaultEmail                                                                                              //
   * @returns {String} The users default email address                                                                 //
   */                                                                                                                  //
                                                                                                                       //
                                                                                                                       //
  User.prototype.getEmails = function getEmails() {                                                                    //
                                                                                                                       //
    var result = [];                                                                                                   // 137
                                                                                                                       //
    if (this && this.emails) {                                                                                         // 139
      this.emails.forEach(function (email) {                                                                           // 140
        result.push(email.address);                                                                                    // 141
      });                                                                                                              // 142
    }                                                                                                                  // 143
                                                                                                                       //
    if (this.services && this.services.google && this.services.google.email) {                                         // 145
      result.push(this.services.google.email);                                                                         // 146
    }                                                                                                                  // 147
                                                                                                                       //
    if (result.length > 0) {                                                                                           // 149
      return result;                                                                                                   // 150
    } else {                                                                                                           // 151
      return [];                                                                                                       // 152
    }                                                                                                                  // 153
  };                                                                                                                   // 154
                                                                                                                       //
  User.prototype.getPrimaryEmail = function getPrimaryEmail() {                                                        //
    if (this.emails) {                                                                                                 // 158
      return this.emails[0].address;                                                                                   // 159
    } else {                                                                                                           // 160
      return "---";                                                                                                    // 161
    }                                                                                                                  // 162
  };                                                                                                                   // 163
                                                                                                                       //
  return User;                                                                                                         //
}();                                                                                                                   //
                                                                                                                       //
module.export("default",exports.default=(User));                                                                       //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"startup":{"client":{"globals.js":["../../api/User",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/startup/client/globals.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var User;module.import("../../api/User",{"default":function(v){User=v}});                                              //
                                                                                                                       //
                                                                                                                       // 3
                                                                                                                       //
Practitioners._transform = function (document) {                                                                       // 5
  return new User(document);                                                                                           // 6
};                                                                                                                     // 7
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"index.js":["meteor/themeteorchef:bert","bootstrap/dist/css/bootstrap.min.css","bootstrap/dist/js/bootstrap.min.js","./routes.js","./globals.js","meteor/meteor","/imports/api/posts/posts","/imports/api/devices/devices","/imports/api/topics/topics","/imports/api/statistics/statistics",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/startup/client/index.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});module.import('bootstrap/dist/css/bootstrap.min.css');module.import('bootstrap/dist/js/bootstrap.min.js');module.import('./routes.js');module.import('./globals.js');var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var _Posts;module.import('/imports/api/posts/posts',{"Posts":function(v){_Posts=v}});var _Devices;module.import('/imports/api/devices/devices',{"Devices":function(v){_Devices=v}});var _Topics;module.import('/imports/api/topics/topics',{"Topics":function(v){_Topics=v}});var _Statistics;module.import('/imports/api/statistics/statistics',{"Statistics":function(v){_Statistics=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
                                                                                                                       // 7
                                                                                                                       //
if (process.env.NODE_ENV === 'production') {                                                                           // 9
  Bert.defaults.style = 'fixed-top';                                                                                   // 10
} else {                                                                                                               // 11
  Bert.defaults.style = 'fixed-bottom';                                                                                // 12
}                                                                                                                      // 13
                                                                                                                       //
// subscriptions                                                                                                       //
Meteor.startup(function () {                                                                                           // 17
  Meteor.subscribe('posts');                                                                                           // 18
  Meteor.subscribe('topics');                                                                                          // 19
                                                                                                                       //
  Session.set('showNavbars', true);                                                                                    // 21
  Session.set('hasPagePadding', true);                                                                                 // 22
});                                                                                                                    // 23
                                                                                                                       //
// global imports for subscriptions                                                                                    //
                                                                                                                       // 27
Posts = _Posts;                                                                                                        // 28
                                                                                                                       //
// global imports for subscriptions                                                                                    //
                                                                                                                       // 31
Devices = _Devices;                                                                                                    // 32
                                                                                                                       //
// global imports for subscriptions                                                                                    //
                                                                                                                       // 35
Topics = _Topics;                                                                                                      // 36
                                                                                                                       //
// global imports for subscriptions                                                                                    //
                                                                                                                       // 39
Statistics = _Statistics;                                                                                              // 40
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"routes.js":["react","meteor/meteor","react-dom","react-router","/imports/ui/layouts/App","/imports/ui/pages/AboutPage","/imports/ui/pages/PrivacyPage","/imports/ui/pages/DashboardPage","/imports/ui/pages/Documents","/imports/ui/pages/ForumPage","/imports/ui/pages/Index","/imports/ui/pages/Login","/imports/ui/pages/MyProfilePage","/imports/ui/pages/PatientsPage","/imports/ui/pages/PractitionersPage","/imports/ui/pages/Signup","/imports/ui/pages/ThemePage","/imports/ui/pages/UsersPage","/imports/ui/pages/Weblog","/imports/ui/pages/DevicePage","/imports/ui/pages/ObservationPage","/imports/ui/pages/BreathalyzerPage","/imports/ui/pages/CarePlanPage","/imports/ui/pages/NotFound","/imports/ui/pages/RecoverPassword","/imports/ui/pages/ResetPassword","/imports/ui/pages/NeedToBePractioner","/imports/ui/pages/ConversationsPage","/imports/ui/pages/NewTopicPage",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/startup/client/routes.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;module.import('react',{"default":function(v){React=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var render;module.import('react-dom',{"render":function(v){render=v}});var Router,Route,IndexRoute,browserHistory;module.import('react-router',{"Router":function(v){Router=v},"Route":function(v){Route=v},"IndexRoute":function(v){IndexRoute=v},"browserHistory":function(v){browserHistory=v}});var App;module.import('/imports/ui/layouts/App',{"App":function(v){App=v}});var AboutPage;module.import('/imports/ui/pages/AboutPage',{"AboutPage":function(v){AboutPage=v}});var PrivacyPage;module.import('/imports/ui/pages/PrivacyPage',{"PrivacyPage":function(v){PrivacyPage=v}});var DashboardPage;module.import('/imports/ui/pages/DashboardPage',{"DashboardPage":function(v){DashboardPage=v}});var Documents;module.import('/imports/ui/pages/Documents',{"Documents":function(v){Documents=v}});var ForumPage;module.import('/imports/ui/pages/ForumPage',{"ForumPage":function(v){ForumPage=v}});var Index;module.import('/imports/ui/pages/Index',{"Index":function(v){Index=v}});var Login;module.import('/imports/ui/pages/Login',{"Login":function(v){Login=v}});var MyProfilePage;module.import('/imports/ui/pages/MyProfilePage',{"MyProfilePage":function(v){MyProfilePage=v}});var PatientsPage;module.import('/imports/ui/pages/PatientsPage',{"PatientsPage":function(v){PatientsPage=v}});var PractitionersPage;module.import('/imports/ui/pages/PractitionersPage',{"PractitionersPage":function(v){PractitionersPage=v}});var Signup;module.import('/imports/ui/pages/Signup',{"Signup":function(v){Signup=v}});var ThemePage;module.import('/imports/ui/pages/ThemePage',{"ThemePage":function(v){ThemePage=v}});var UsersPage;module.import('/imports/ui/pages/UsersPage',{"UsersPage":function(v){UsersPage=v}});var Weblog;module.import('/imports/ui/pages/Weblog',{"Weblog":function(v){Weblog=v}});var DevicePage;module.import('/imports/ui/pages/DevicePage',{"DevicePage":function(v){DevicePage=v}});var ObservationPage;module.import('/imports/ui/pages/ObservationPage',{"ObservationPage":function(v){ObservationPage=v}});var BreathalyzerPage;module.import('/imports/ui/pages/BreathalyzerPage',{"BreathalyzerPage":function(v){BreathalyzerPage=v}});var CarePlanPage;module.import('/imports/ui/pages/CarePlanPage',{"CarePlanPage":function(v){CarePlanPage=v}});var NotFound;module.import('/imports/ui/pages/NotFound',{"NotFound":function(v){NotFound=v}});var RecoverPassword;module.import('/imports/ui/pages/RecoverPassword',{"RecoverPassword":function(v){RecoverPassword=v}});var ResetPassword;module.import('/imports/ui/pages/ResetPassword',{"ResetPassword":function(v){ResetPassword=v}});var NeedToBePractioner;module.import('/imports/ui/pages/NeedToBePractioner',{"NeedToBePractioner":function(v){NeedToBePractioner=v}});var ConversationsPage;module.import('/imports/ui/pages/ConversationsPage',{"ConversationsPage":function(v){ConversationsPage=v}});var NewTopicPage;module.import('/imports/ui/pages/NewTopicPage',{"NewTopicPage":function(v){NewTopicPage=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       // 8
                                                                                                                       // 9
                                                                                                                       // 10
                                                                                                                       // 11
                                                                                                                       // 12
                                                                                                                       // 13
                                                                                                                       // 14
                                                                                                                       // 15
                                                                                                                       // 16
                                                                                                                       // 17
                                                                                                                       // 18
                                                                                                                       // 19
                                                                                                                       // 20
                                                                                                                       // 21
                                                                                                                       // 22
                                                                                                                       // 23
                                                                                                                       // 24
                                                                                                                       // 25
                                                                                                                       // 26
                                                                                                                       // 27
                                                                                                                       //
                                                                                                                       // 29
                                                                                                                       // 30
                                                                                                                       //
//import { Bert } from 'meteor/themeteorchef:bert';                                                                    //
                                                                                                                       //
var requireAuth = function requireAuth(nextState, replace) {                                                           // 34
  if (!Meteor.loggingIn() && !Meteor.userId()) {                                                                       // 35
    replace({                                                                                                          // 36
      pathname: '/login',                                                                                              // 37
      state: { nextPathname: nextState.location.pathname }                                                             // 38
    });                                                                                                                // 36
  }                                                                                                                    // 40
};                                                                                                                     // 41
                                                                                                                       //
var requirePractitioner = function requirePractitioner(nextState, replace) {                                           // 43
  if (!Roles.userIsInRole(Meteor.userId(), 'practitioner')) {                                                          // 44
    replace({                                                                                                          // 45
      pathname: '/need-to-be-practitioner',                                                                            // 46
      state: { nextPathname: nextState.location.pathname }                                                             // 47
    });                                                                                                                // 45
  }                                                                                                                    // 49
};                                                                                                                     // 50
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 52
  render(React.createElement(                                                                                          // 53
    Router,                                                                                                            // 54
    { history: browserHistory },                                                                                       // 54
    React.createElement(                                                                                               // 55
      Route,                                                                                                           // 55
      { path: '/', component: App },                                                                                   // 55
      React.createElement(IndexRoute, { name: 'index', component: Index, onEnter: requireAuth }),                      // 56
      React.createElement(Route, { name: 'documents', path: '/documents', component: Documents, onEnter: requirePractitioner }),
      React.createElement(Route, { name: 'login', path: '/login', component: Login }),                                 // 59
      React.createElement(Route, { name: 'recover-password', path: '/recover-password', component: RecoverPassword }),
      React.createElement(Route, { name: 'reset-password', path: '/reset-password/:token', component: ResetPassword }),
      React.createElement(Route, { name: 'signup', path: '/signup', component: Signup }),                              // 62
      React.createElement(Route, { name: 'needToBePractioner', path: '/need-to-be-practitioner', component: NeedToBePractioner }),
      React.createElement(Route, { name: 'about', path: '/about', component: AboutPage }),                             // 68
      React.createElement(Route, { name: 'privacy', path: '/privacy', component: PrivacyPage }),                       // 69
      React.createElement(Route, { name: 'dashboard', path: '/dashboard', component: DashboardPage, onEnter: requirePractitioner }),
      React.createElement(Route, { name: 'theming', path: '/theming', component: ThemePage, onEnter: requireAuth }),   // 72
      React.createElement(Route, { name: 'myprofile', path: '/myprofile', component: MyProfilePage, onEnter: requireAuth }),
      React.createElement(Route, { name: 'practitioners', path: '/practitioners', component: PractitionersPage, onEnter: requirePractitioner }),
      React.createElement(Route, { name: 'patients', path: '/patients', component: PatientsPage, onEnter: requirePractitioner }),
      React.createElement(Route, { name: 'users', path: '/users', component: UsersPage, onEnter: requirePractitioner }),
      React.createElement(Route, { name: 'support', path: '/support', component: ForumPage }),                         // 79
      React.createElement(Route, { name: 'forum', path: '/forum', component: ForumPage, onEnter: requirePractitioner }),
      React.createElement(Route, { name: 'topicById', path: '/topic/:topicId', component: ConversationsPage, onEnter: requirePractitioner }),
      React.createElement(Route, { name: 'newTopic', path: '/new/topic', component: NewTopicPage, onEnter: requirePractitioner }),
      React.createElement(Route, { name: 'weblog', path: '/weblog', component: Weblog }),                              // 85
      React.createElement(Route, { name: 'weblogByUserId', path: '/weblog/:userId', component: Weblog }),              // 86
      React.createElement(Route, { name: 'devices', path: '/devices', component: DevicePage }),                        // 88
      React.createElement(Route, { name: 'devicesByUserId', path: '/devices/:userId', component: DevicePage }),        // 89
      React.createElement(Route, { name: 'observations', path: '/observations', component: ObservationPage }),         // 91
      React.createElement(Route, { name: 'observationsByUserId', path: '/observations/:userId', component: ObservationPage }),
      React.createElement(Route, { name: 'breathalyzer', path: '/breathalyzer', component: BreathalyzerPage }),        // 94
      React.createElement(Route, { name: 'careplan', path: '/careplan', component: CarePlanPage }),                    // 95
      React.createElement(Route, { path: '*', component: NotFound })                                                   // 97
    )                                                                                                                  // 55
  ), document.getElementById('react-root'));                                                                           // 54
});                                                                                                                    // 103
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}},"modules":{"getInputValue.js":["react-dom",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/getInputValue.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({getInputValue:function(){return getInputValue}});var ReactDOM;module.import('react-dom',{"default":function(v){ReactDOM=v}});
                                                                                                                       //
var getInputValue = function getInputValue(component) {                                                                // 3
  return ReactDOM.findDOMNode(component).value;                                                                        // 3
};                                                                                                                     // 3
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"handleLogin.js":["jquery","jquery-validation","react-router","meteor/meteor","meteor/themeteorchef:bert","./getInputValue",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/handleLogin.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({handleLogin:function(){return handleLogin}});var $;module.import('jquery',{"default":function(v){$=v}});module.import('jquery-validation');var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var getInputValue;module.import('./getInputValue',{"getInputValue":function(v){getInputValue=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
var component = void 0;                                                                                                // 8
                                                                                                                       //
var login = function login() {                                                                                         // 10
  var email = getInputValue(component.refs.emailAddress);                                                              // 11
  var password = getInputValue(component.refs.password);                                                               // 12
                                                                                                                       //
  Meteor.loginWithPassword(email, password, function (error) {                                                         // 14
    if (error) {                                                                                                       // 15
      Bert.alert(error.reason, 'warning');                                                                             // 16
    } else {                                                                                                           // 17
      Bert.alert('Logged in!', 'success');                                                                             // 18
                                                                                                                       //
      var location = component.props.location;                                                                         // 17
                                                                                                                       //
      if (location.state && location.state.nextPathname) {                                                             // 21
        browserHistory.push(location.state.nextPathname);                                                              // 22
      } else {                                                                                                         // 23
        browserHistory.push('/');                                                                                      // 24
      }                                                                                                                // 25
    }                                                                                                                  // 26
  });                                                                                                                  // 27
};                                                                                                                     // 28
                                                                                                                       //
var validate = function validate() {                                                                                   // 30
  $(component.refs.login).validate({                                                                                   // 31
    rules: {                                                                                                           // 32
      emailAddress: {                                                                                                  // 33
        required: true,                                                                                                // 34
        email: true                                                                                                    // 35
      },                                                                                                               // 33
      password: {                                                                                                      // 37
        required: true                                                                                                 // 38
      }                                                                                                                // 37
    },                                                                                                                 // 32
    messages: {                                                                                                        // 41
      emailAddress: {                                                                                                  // 42
        required: 'Need an email address here.',                                                                       // 43
        email: 'Is this email address legit?'                                                                          // 44
      },                                                                                                               // 42
      password: {                                                                                                      // 46
        required: 'Need a password here.'                                                                              // 47
      }                                                                                                                // 46
    },                                                                                                                 // 41
    submitHandler: function submitHandler() {                                                                          // 50
      login();                                                                                                         // 50
    }                                                                                                                  // 50
  });                                                                                                                  // 31
};                                                                                                                     // 52
                                                                                                                       //
var handleLogin = function handleLogin(options) {                                                                      // 54
  component = options.component;                                                                                       // 55
  validate();                                                                                                          // 56
};                                                                                                                     // 57
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"handleRecoverPassword.js":["jquery","jquery-validation","meteor/accounts-base","meteor/themeteorchef:bert","./getInputValue",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/handleRecoverPassword.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({handleRecoverPassword:function(){return handleRecoverPassword}});var $;module.import('jquery',{"default":function(v){$=v}});module.import('jquery-validation');var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var getInputValue;module.import('./getInputValue',{"getInputValue":function(v){getInputValue=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       //
var component = void 0;                                                                                                // 7
                                                                                                                       //
var handleRecovery = function handleRecovery() {                                                                       // 9
  Accounts.forgotPassword({                                                                                            // 10
    email: getInputValue(component.refs.emailAddress)                                                                  // 11
  }, function (error) {                                                                                                // 10
    if (error) {                                                                                                       // 13
      Bert.alert(error.reason, 'warning');                                                                             // 14
    } else {                                                                                                           // 15
      Bert.alert('Check your inbox for a reset link!', 'success');                                                     // 16
    }                                                                                                                  // 17
  });                                                                                                                  // 18
};                                                                                                                     // 19
                                                                                                                       //
var validate = function validate() {                                                                                   // 21
  $(component.refs.recoverPassword).validate({                                                                         // 22
    rules: {                                                                                                           // 23
      emailAddress: {                                                                                                  // 24
        required: true,                                                                                                // 25
        email: true                                                                                                    // 26
      }                                                                                                                // 24
    },                                                                                                                 // 23
    messages: {                                                                                                        // 29
      emailAddress: {                                                                                                  // 30
        required: 'Need an email address here.',                                                                       // 31
        email: 'Is this email address legit?'                                                                          // 32
      }                                                                                                                // 30
    },                                                                                                                 // 29
    submitHandler: function submitHandler() {                                                                          // 35
      handleRecovery();                                                                                                // 35
    }                                                                                                                  // 35
  });                                                                                                                  // 22
};                                                                                                                     // 37
                                                                                                                       //
var handleRecoverPassword = function handleRecoverPassword(options) {                                                  // 39
  component = options.component;                                                                                       // 40
  validate();                                                                                                          // 41
};                                                                                                                     // 42
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"handleResetPassword.js":["jquery","jquery-validation","react-router","meteor/accounts-base","meteor/themeteorchef:bert","./getInputValue",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/handleResetPassword.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({handleResetPassword:function(){return handleResetPassword}});var $;module.import('jquery',{"default":function(v){$=v}});module.import('jquery-validation');var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var getInputValue;module.import('./getInputValue',{"getInputValue":function(v){getInputValue=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       //
var component = void 0;                                                                                                // 8
var token = void 0;                                                                                                    // 9
                                                                                                                       //
var handleReset = function handleReset() {                                                                             // 11
  var password = getInputValue(component.refs.newPassword);                                                            // 12
  Accounts.resetPassword(token, password, function (error) {                                                           // 13
    if (error) {                                                                                                       // 14
      Bert.alert(error.reason, 'danger');                                                                              // 15
    } else {                                                                                                           // 16
      browserHistory.push('/');                                                                                        // 17
      Bert.alert('Password reset!', 'success');                                                                        // 18
    }                                                                                                                  // 19
  });                                                                                                                  // 20
};                                                                                                                     // 21
                                                                                                                       //
var validate = function validate() {                                                                                   // 23
  $(component.refs.resetPassword).validate({                                                                           // 24
    rules: {                                                                                                           // 25
      newPassword: {                                                                                                   // 26
        required: true,                                                                                                // 27
        minlength: 6                                                                                                   // 28
      },                                                                                                               // 26
      repeatNewPassword: {                                                                                             // 30
        required: true,                                                                                                // 31
        minlength: 6,                                                                                                  // 32
        equalTo: '[name="newPassword"]'                                                                                // 33
      }                                                                                                                // 30
    },                                                                                                                 // 25
    messages: {                                                                                                        // 36
      newPassword: {                                                                                                   // 37
        required: 'Enter a new password, please.',                                                                     // 38
        minlength: 'Use at least six characters, please.'                                                              // 39
      },                                                                                                               // 37
      repeatNewPassword: {                                                                                             // 41
        required: 'Repeat your new password, please.',                                                                 // 42
        equalTo: 'Hmm, your passwords don\'t match. Try again?'                                                        // 43
      }                                                                                                                // 41
    },                                                                                                                 // 36
    submitHandler: function submitHandler() {                                                                          // 46
      handleReset();                                                                                                   // 46
    }                                                                                                                  // 46
  });                                                                                                                  // 24
};                                                                                                                     // 48
                                                                                                                       //
var handleResetPassword = function handleResetPassword(options) {                                                      // 50
  component = options.component;                                                                                       // 51
  token = options.token;                                                                                               // 52
  validate();                                                                                                          // 53
};                                                                                                                     // 54
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"handleSignup.js":["jquery","jquery-validation","react-router","meteor/accounts-base","meteor/themeteorchef:bert","./getInputValue","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/handleSignup.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({handleSignup:function(){return handleSignup}});var $;module.import('jquery',{"default":function(v){$=v}});module.import('jquery-validation');var browserHistory;module.import('react-router',{"browserHistory":function(v){browserHistory=v}});var Accounts;module.import('meteor/accounts-base',{"Accounts":function(v){Accounts=v}});var Bert;module.import('meteor/themeteorchef:bert',{"Bert":function(v){Bert=v}});var getInputValue;module.import('./getInputValue',{"getInputValue":function(v){getInputValue=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       // 2
                                                                                                                       // 3
                                                                                                                       // 4
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
var component = void 0;                                                                                                // 9
                                                                                                                       //
var getUserData = function getUserData() {                                                                             // 11
  return {                                                                                                             // 11
    email: getInputValue(component.refs.emailAddress),                                                                 // 12
    password: getInputValue(component.refs.password),                                                                  // 13
    profile: {                                                                                                         // 14
      name: {                                                                                                          // 15
        given: getInputValue(component.refs.firstName),                                                                // 16
        family: getInputValue(component.refs.lastName),                                                                // 17
        text: getInputValue(component.refs.firstName) + ' ' + getInputValue(component.refs.lastName)                   // 18
      },                                                                                                               // 15
      accessCode: getInputValue(component.refs.accessCode)                                                             // 20
    }                                                                                                                  // 14
  };                                                                                                                   // 11
};                                                                                                                     // 11
                                                                                                                       //
var signUp = function signUp() {                                                                                       // 24
  var user = getUserData();                                                                                            // 25
                                                                                                                       //
  Accounts.createUser(user, function (error) {                                                                         // 27
    if (error) {                                                                                                       // 28
      Bert.alert(error.reason, 'danger');                                                                              // 29
    } else {                                                                                                           // 30
      browserHistory.push('/');                                                                                        // 31
      Bert.alert('Welcome!', 'success');                                                                               // 32
    }                                                                                                                  // 33
  });                                                                                                                  // 34
};                                                                                                                     // 36
                                                                                                                       //
var validate = function validate() {                                                                                   // 38
  $(component.refs.signup).validate({                                                                                  // 39
    rules: {                                                                                                           // 40
      firstName: {                                                                                                     // 41
        required: true                                                                                                 // 42
      },                                                                                                               // 41
      lastName: {                                                                                                      // 44
        required: true                                                                                                 // 45
      },                                                                                                               // 44
      accessCode: {                                                                                                    // 47
        required: false                                                                                                // 48
      },                                                                                                               // 47
      emailAddress: {                                                                                                  // 50
        required: true,                                                                                                // 51
        email: true                                                                                                    // 52
      },                                                                                                               // 50
      password: {                                                                                                      // 54
        required: true,                                                                                                // 55
        minlength: 6                                                                                                   // 56
      }                                                                                                                // 54
    },                                                                                                                 // 40
    messages: {                                                                                                        // 59
      firstName: {                                                                                                     // 60
        required: 'First name?'                                                                                        // 61
      },                                                                                                               // 60
      lastName: {                                                                                                      // 63
        required: 'Last name?'                                                                                         // 64
      },                                                                                                               // 63
      emailAddress: {                                                                                                  // 66
        required: 'Need an email address here.',                                                                       // 67
        email: 'Is this email address legit?'                                                                          // 68
      },                                                                                                               // 66
      password: {                                                                                                      // 70
        required: 'Need a password here.',                                                                             // 71
        minlength: 'Use at least six characters, please.'                                                              // 72
      }                                                                                                                // 70
    },                                                                                                                 // 59
    submitHandler: function submitHandler() {                                                                          // 75
      signUp();                                                                                                        // 75
    }                                                                                                                  // 75
  });                                                                                                                  // 39
};                                                                                                                     // 77
                                                                                                                       //
var handleSignup = function handleSignup(options) {                                                                    // 79
  component = options.component;                                                                                       // 80
  validate();                                                                                                          // 81
};                                                                                                                     // 82
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}},"shared":{"collections.js":["/imports/api/statistics/statistics","meteor/meteor",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// shared/collections.js                                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Statistics;module.import('/imports/api/statistics/statistics',{"Statistics":function(v){Statistics=v}});var Meteor;module.import('meteor/meteor',{"Meteor":function(v){Meteor=v}});
                                                                                                                       // 2
                                                                                                                       //
// INSECURE; DELETE ME                                                                                                 //
if (Meteor.isClient) {                                                                                                 // 5
  Meteor.subscribe('allPractitioners');                                                                                // 6
  Meteor.subscribe('statistics');                                                                                      // 7
}                                                                                                                      // 8
                                                                                                                       //
// INSECURE; DELETE ME                                                                                                 //
if (Meteor.isServer) {                                                                                                 // 11
  Meteor.publish('allPractitioners', function (argument) {                                                             // 12
    return Practitioners.find();                                                                                       // 13
  });                                                                                                                  // 14
  Meteor.publish('statistics', function () {                                                                           // 15
    Statistics.find({}, { limit: 90 });                                                                                // 16
  });                                                                                                                  // 17
}                                                                                                                      // 18
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}},{"extensions":[".js",".json",".html",".scss",".css",".jsx",".less"]});
require("./client/template.main.js");
require("./lib/plugin/cordova-plugin-bactrack/www/bactrack.js");
require("./client/stylesheets/application.scss.js");
require("./shared/collections.js");
require("./client/main.js");
require("./client/main.scss.js");